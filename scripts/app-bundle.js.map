{"version":3,"sources":["src/app.js","src/constants.js","src/environment.js","src/main.js","src/masterBudget.js","src/budget-breakdown-module/breakdown.js","src/chart/chart.js","src/intro/intro.js","src/resources/index.js","src/results/results.js","src/results-banner-module/banner.js","src/utilities/chartFactory.js","src/utilities/moneyValueConverter.js","src/budget-breakdown-module/category-modules/child-care/child-care.js","src/budget-breakdown-module/category-modules/food/food.js","src/budget-breakdown-module/category-modules/housing/housing.js","src/budget-breakdown-module/category-modules/medical/medical.js","src/budget-breakdown-module/category-modules/savings/savings.js","src/budget-breakdown-module/category-modules/other/other.js","src/budget-breakdown-module/category-modules/taxes/taxes.js"],"names":["App","configureRouter","config","router","title","map","route","moduleId","name","nav","Constants","childCare","food","housing","medical","other","savings","taxes","debug","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","MasterBudget","totalMonthlyIncome","numberChildren","numberAdults","stateLocation","foodCost","otherCost","housingCost","carYearlyUpkeepCost","carMonthlyOwnershipCost","childCareCost","medicalCost","savingsCost","taxesCost","sumOfAllCost","budgetCategories","percentageByCategory","Breakdown","Chart","masterBudget","chart","attached","console","log","tuples","createChartTuple","createChart","changeChart","visible","series","data","setVisible","Intro","httpClient","getLocation","self","navigator","geolocation","window","onload","getCurrentPosition","position","startPos","fetch","coords","latitude","longitude","json","data2","getCurrentLocation","childCareData","costByState","forEach","stateData","carCost","carCostData","costByAge","ageData","currentUserAge","homeInsurance","homeInsuranceData","homeData","healthInsurance","healthInsuranceData","healthData","jsonData","array","results","formatted_address","split","location","navigate","sanitizeIncome","displayIncome","replace","income","parseInt","toLocaleString","Results","arr","Banner","HighCharts","ChartFactory","containerID","Highcharts","plotBackgroundColor","plotBorderWidth","plotShadow","type","text","tooltip","pointFormat","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","showInLegend","colorByPoint","budgetArray","push","tupleHelper","cost","tempObject","y","MoneyValueConverter","toView","value","ChildCare","constants","Food","calculateFoodCost","calculateAdvancedFoodCost","Housing","Medical","Savings","Other","getBasicOtherCost","Taxes"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject} from 'aurelia-framework';\r\nimport 'bootstrap';\r\nimport $ from 'jquery';\r\n\r\nexport class App {\r\n  constructor() {\r\n  }\r\n\r\n  configureRouter(config, router) {\r\n    this.router = router;\r\n    config.title = \"Budget Expectancy Calculator\";\r\n    config.map([\r\n      {\r\n        route: ['', 'intro'], moduleId: 'intro/intro',\r\n        name: 'intro', title: 'Introduction', nav: true\r\n      },\r\n      {\r\n        route: 'results', moduleId: 'results/results',\r\n        name: 'results', title: 'Personal Budget', nav: true\r\n      }\r\n    ]);\r\n  }\r\n}\r\n","export class Constants {\r\n    constructor() {\r\n        //Constants for child care module\r\n        this.childCare = [\r\n            {\r\n                'label': 'Private School'\r\n            },\r\n            {\r\n                'label': 'Daycare'\r\n            }\r\n        ];\r\n\r\n        //Constants for food module\r\n        this.food = [\r\n            {\r\n                'label': 'Groceries'\r\n            },\r\n            {\r\n                'label': 'Dining Out'\r\n            }\r\n        ];\r\n\r\n        //Constants for housing module\r\n        this.housing = [\r\n            {\r\n                'label': 'Monthly Rent'\r\n            },\r\n            {\r\n                'label': 'Home Insurance'\r\n            },\r\n            {\r\n                'label': 'Utilities Bill'\r\n            }\r\n        ];\r\n\r\n        //Constants for medical module\r\n        this.medical = [\r\n            {\r\n                'label': 'Health Insurance'\r\n            },\r\n            {\r\n                'label': 'Dental Work'\r\n            }\r\n        ];\r\n\r\n        //Constants for other module\r\n        this.other = [\r\n            {\r\n                'label': 'Cellphone'\r\n            },\r\n            {\r\n                'label': 'Recreation/Travel'\r\n            },\r\n            {\r\n                'label': 'Gym Membership'\r\n            },\r\n            {\r\n                'label': 'Entertainment'\r\n            },\r\n            {\r\n                'label': 'Clothing'\r\n            }\r\n        ];\r\n\r\n        //Constants for savings module\r\n        this.savings = [\r\n            {\r\n                'label': 'Emergency Fund'\r\n            },\r\n            {\r\n                'label': 'Retirement'\r\n            },\r\n            {\r\n                'label': 'Investments'\r\n            },\r\n            {\r\n                'label': 'College Savings'\r\n            }\r\n        ];\r\n        \r\n        //Constants for taxes module\r\n        this.taxes = [\r\n            {\r\n                'label': 'Vehicle Taxes'\r\n            },\r\n            {\r\n                'label': 'Housing Taxes'\r\n            }\r\n        ];\r\n    }\r\n}","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class MasterBudget {\r\n    constructor() {\r\n        this.totalMonthlyIncome = 0;\r\n        this.numberChildren = 0;\r\n        this.numberAdults = 0;\r\n        this.stateLocation = 'Alabama';\r\n        this.foodCost = 0;\r\n        this.otherCost = 0;\r\n        this.housingCost = 0;\r\n        this.carYearlyUpkeepCost = 0;\r\n        this.carMonthlyOwnershipCost = 0;\r\n        this.childCareCost = 0;\r\n        this.medicalCost = 0;\r\n        this.savingsCost = 0;\r\n        this.taxesCost = 0;\r\n        this.sumOfAllCost = 0;\r\n        this.budgetCategories = ['Child Care', 'Food', 'Housing', 'Medical', 'Other', 'Savings', 'Taxes'];\r\n        this.percentageByCategory = [];\r\n    }\r\n}","export class Breakdown {\r\n    constructor() {}\r\n}","import {inject} from 'aurelia-framework';\r\nimport {ChartFactory} from '../utilities/chartFactory';\r\nimport {MasterBudget} from 'masterBudget';\r\n\r\n@inject(MasterBudget)\r\nexport class Chart {\r\n    constructor(masterBudget) {\r\n        this.chart = null;\r\n        this.masterBudget = masterBudget;\r\n    }\r\n\r\n    attached() {\r\n        console.log(this.masterBudget);\r\n        var tuples = ChartFactory.createChartTuple(this.masterBudget);\r\n        console.log(tuples);\r\n        this.chart = ChartFactory.createChart('chartContainer', tuples);\r\n    }\r\n\r\n    changeChart() {\r\n        var visible = this.chart.series[0].data[0].visible ? false : true;\r\n        this.chart.series[0].data[0].setVisible(visible);\r\n    }\r\n}","import { inject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\nimport { HttpClient, json } from 'aurelia-fetch-client';\r\nimport {ChartFactory} from '../utilities/chartFactory';\r\nimport { MasterBudget } from 'masterBudget';\r\n\r\n@inject(Router, HttpClient, MasterBudget)\r\nexport class Intro {\r\n    constructor(router, httpClient, masterBudget) {\r\n        this.router = router;\r\n        this.httpClient = httpClient;\r\n        this.masterBudget = masterBudget;\r\n        this.getLocation();\r\n    }\r\n\r\n    //Retrieves the user's current location.\r\n    //TODO: Move this method out of intro.js\r\n    async getLocation() {\r\n        var self = this;\r\n        \r\n        // check for Geolocation support\r\n        if (navigator.geolocation) {\r\n            console.log('Geolocation is supported!');\r\n        }\r\n        else {\r\n            console.log('Geolocation is not supported for this Browser/OS version yet.');\r\n        }\r\n\r\n        //Load users current location\r\n        window.onload = async function () {\r\n            var startPos;\r\n            navigator.geolocation.getCurrentPosition(async function (position) {\r\n                startPos = position;\r\n                let data = await self.httpClient.fetch('https://maps.googleapis.com/maps/api/geocode/json?latlng=' + startPos.coords.latitude + ',' + startPos.coords.longitude + '&key=AIzaSyBM9-m7L5132H_bDe3JUn9tlwblTARBRbQ');\r\n                let data2 = await data.json();\r\n                self.getCurrentLocation(data2);\r\n            });\r\n        };\r\n        await window.onload();\r\n\r\n        let childCare = await this.httpClient.fetch('/api/child-care/get.json');\r\n        let childCareData = await childCare.json();\r\n        //Get average child care cost by state\r\n        childCareData.costByState.forEach((stateData) => {\r\n            if(stateData[0] == self.masterBudget.stateLocation) {\r\n                self.masterBudget.childCareCost = stateData[8];\r\n            }\r\n        })\r\n\r\n        let carCost = await this.httpClient.fetch('/api/car-costs/get.json');\r\n        let carCostData = await carCost.json();\r\n        //Get average car cost for repairs, insurance, and gasoline\r\n        carCostData.costByState.forEach((stateData) => {\r\n            if(stateData[0] === self.masterBudget.stateLocation) {\r\n                self.masterBudget.carYearlyUpkeepCost = stateData[4];\r\n            }\r\n        });\r\n        //Get average car cost for renting/buying\r\n        carCostData.costByAge.forEach((ageData) =>{\r\n            if(ageData[0] >= self.masterBudget.currentUserAge) {\r\n                self.masterBudget.carMonthlyOwnershipCost = ageData[2];\r\n            }\r\n        });\r\n\r\n        //Get average home insurance cost\r\n        let homeInsurance = await this.httpClient.fetch('/api/home-insurance/get.json');\r\n        let homeInsuranceData = await homeInsurance.json();\r\n        homeInsuranceData.costByState.forEach((homeData) => {\r\n            if(homeData[0] == self.masterBudget.stateLocation) {\r\n                self.masterBudget.housingCost = homeData[1];\r\n                console.log(self.masterBudget.housingCost);\r\n            }\r\n        });\r\n\r\n        //Get average health insurance cost\r\n        let healthInsurance = await this.httpClient.fetch('api/healthcare-insurance/get.json');\r\n        let healthInsuranceData = await healthInsurance.json();\r\n        healthInsuranceData.costByState.forEach((healthData) => {\r\n            if(healthData[0] == self.masterBudget.stateLocation) {\r\n                self.masterBudget.medicalCost = healthData[2];\r\n            }\r\n        })\r\n\r\n        self.masterBudget.foodCost = 155 * this.masterBudget.numberChildren + 158.7 * this.masterBudget.numberAdults;\r\n    }\r\n\r\n    //Get current county/location of user\r\n    getCurrentLocation(jsonData) {\r\n        var array = jsonData.results[4].formatted_address.split(\",\");\r\n        this.masterBudget.location = array[0];\r\n    }\r\n\r\n    //Routes the user to the results page after clicking budget button\r\n    route() {\r\n        this.router.navigate(\"#/results\");\r\n    }\r\n\r\n    sanitizeIncome() {\r\n        this.displayIncome = this.displayIncome.replace(/,/g, \"\");\r\n        this.displayIncome = this.displayIncome.replace(/\\$/g, \"\");\r\n\r\n        this.income = parseInt(this.displayIncome);\r\n\r\n        this.displayIncome = '$' + this.income.toLocaleString();\r\n    }\r\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n","export class Results {\r\n    constructor() {\r\n        this.arr = [1, 2, 3, 4];\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {MasterBudget} from 'masterBudget';\r\n\r\n@inject(MasterBudget)\r\nexport class Banner {\r\n    constructor(masterBudget) {\r\n        this.income = null;\r\n        this.displayIncome = \"\";\r\n        this.masterBudget = masterBudget;\r\n    }\r\n\r\n    sanitizeIncome() {\r\n        this.displayIncome = this.displayIncome.replace(/,/g, \"\");\r\n        this.displayIncome = this.displayIncome.replace(/\\$/g, \"\");\r\n\r\n        this.income = parseInt(this.displayIncome);\r\n\r\n        this.displayIncome = '$' + this.income.toLocaleString();\r\n    }\r\n}","import * as HighCharts from \"highcharts\";\r\n\r\nexport class ChartFactory {\r\n  \r\n    static createChart(containerID, tuples) {\r\n        return Highcharts.chart(containerID, {\r\n            chart: {\r\n                plotBackgroundColor: null,\r\n                plotBorderWidth: null,\r\n                plotShadow: false,\r\n                type: 'pie'\r\n            },\r\n            title: {\r\n                text: 'Budget Calculator'\r\n            },\r\n            tooltip: {\r\n                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n            },\r\n            plotOptions: {\r\n                pie: {\r\n                    allowPointSelect: true,\r\n                    cursor: 'pointer',\r\n                    dataLabels: {\r\n                        enabled: false\r\n                    },\r\n                    showInLegend: true\r\n                }\r\n            },\r\n            series: [{\r\n                name: 'Percentage',\r\n                colorByPoint: true,\r\n                data: tuples\r\n            }]\r\n        });//end Highcharts.chart()\r\n    }\r\n\r\n    //Create tuples for the pie chart\r\n    static createChartTuple(masterBudget) {\r\n        var budgetArray = [];\r\n        masterBudget.sumOfAllCost = 0;\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[0], masterBudget.childCareCost, masterBudget));\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[1], masterBudget.foodCost, masterBudget));\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[2], masterBudget.housingCost, masterBudget));\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[3], masterBudget.medicalCost, masterBudget));\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[4], masterBudget.otherCost, masterBudget));\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[5], masterBudget.taxesCost, masterBudget));\r\n        var cost = masterBudget.totalMonthlyIncome - masterBudget.sumOfAllCost;\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[6], cost, masterBudget));\r\n        return budgetArray;\r\n    }\r\n\r\n    static tupleHelper(name, data, masterBudget) {\r\n        var tempObject = {};\r\n        tempObject.name = name;\r\n        tempObject.y = data;\r\n        console.log(data);\r\n        masterBudget.sumOfAllCost += data;\r\n        console.log(masterBudget.sumOfAllCost);\r\n        return tempObject;\r\n    }\r\n}","export class MoneyValueConverter {\r\n    toView(value) {\r\n        // this.displayIncome = this.displayIncome.replace(/,/g, \"\");\r\n        // this.displayIncome = this.displayIncome.replace(/\\$/g, \"\");\r\n\r\n        // this.income = parseInt(this.displayIncome);\r\n\r\n        // this.displayIncome = '$' + this.income.toLocaleString();\r\n        // return value.toLocaleString();\r\n        value = value.replace(/,/g, \"\");\r\n        return value.toLocaleString();\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {MasterBudget} from 'masterBudget';\r\nimport {Constants} from 'constants';\r\n\r\n@inject(MasterBudget, Constants)\r\nexport class ChildCare {\r\n    constructor(masterBudget, constants) {\r\n        this.masterBudget = masterBudget;\r\n        this.constants = constants; \r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {MasterBudget} from 'masterBudget';\r\nimport {Constants} from 'constants';\r\n\r\n@inject(MasterBudget, Constants)\r\nexport class Food {\r\n    constructor(masterBudget, constants) {\r\n        this.masterBudget = masterBudget;\r\n        this.constants = constants;\r\n    }\r\n\r\n    //Calculate the basic food cost for the household\r\n    calculateFoodCost() {\r\n        this.masterBudget.foodCost = this.masterBudget.numberChildren * 155.70 + this.masterBudget.numberAdults * 158.70;\r\n    }\r\n\r\n    //Calculate detailed food cost\r\n    calculateAdvancedFoodCost() {\r\n\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {MasterBudget} from 'masterBudget';\r\nimport {Constants} from 'constants';\r\n\r\n@inject(MasterBudget, Constants)\r\nexport class Housing {\r\n    constructor(masterBudget, constants){\r\n        this.masterBudget = masterBudget;\r\n        this.constants = constants;\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {MasterBudget} from 'masterBudget';\r\nimport {Constants} from 'constants';\r\n\r\n@inject(MasterBudget, Constants)\r\nexport class Medical {\r\n    constructor(masterBudget, constants) {\r\n        this.masterBudget = masterBudget;\r\n        this.constants = constants;\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {MasterBudget} from 'masterBudget';\r\nimport {Constants} from 'constants';\r\n\r\n@inject(MasterBudget, Constants)\r\nexport class Savings {\r\n    constructor(masterBudget, constants) {\r\n        this.masterBudget = masterBudget;\r\n        this.constants = constants;\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {MasterBudget} from 'masterBudget';\r\nimport {Constants} from 'constants';\r\n\r\n@inject(MasterBudget, Constants)\r\nexport class Other {\r\n    constructor(masterBudget, constants) {\r\n        this.masterBudget = masterBudget;\r\n        this.constants = constants;\r\n    }\r\n\r\n    //Calculates the basic cost of the other category\r\n    getBasicOtherCost() {\r\n        this.masterBudget.otherCost = this.masterBudget.totalMonthlyIncome * 0.05;\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {MasterBudget} from 'masterBudget';\r\nimport {Constants} from 'constants';\r\n\r\n@inject(MasterBudget, Constants)\r\nexport class Taxes {\r\n    constructor(masterBudget, constants) {\r\n        this.masterBudget = masterBudget;\r\n        this.constants = constants;\r\n    }\r\n}"],"sourceRoot":".."}
{"version":3,"sources":["src/app.js","src/constants.js","src/environment.js","src/main.js","src/masterBudget.js","src/budget-breakdown-module/breakdown.js","src/chart/chart.js","src/five-year/five-year.js","src/goals/goals.js","src/intro/intro.js","src/resources/index.js","src/results/results.js","src/results-banner-module/banner.js","src/utilities/chartFactory.js","src/utilities/currency.js","src/utilities/percent.js","src/budget-breakdown-module/category-modules/child-care/child-care.js","src/budget-breakdown-module/category-modules/food/food.js","src/budget-breakdown-module/category-modules/housing/housing.js","src/budget-breakdown-module/category-modules/other/other.js","src/budget-breakdown-module/category-modules/medical/medical.js","src/budget-breakdown-module/category-modules/savings/savings.js","src/budget-breakdown-module/category-modules/taxes/taxes.js","src/budget-breakdown-module/category-modules/transportation/transportation.js"],"names":["App","configureRouter","config","router","title","map","route","moduleId","name","nav","Constants","foodCostPerChild","foodCostPerAdult","miscellaneousCost","childCare","food","housing","housingUtilities","housingRent","housingLease","medical","transportation","transportationCar","other","savings","taxes","taxesFiling","debug","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","MasterBudget","constants","location","annualIncome","totalMonthlyIncome","numberChildren","numberAdults","stateLocation","calculateFoodCost","carYearlyUpkeepCost","carMonthlyOwnershipCost","sumOfAllCost","budgetCategories","percentageByCategory","chart","Breakdown","Chart","masterBudget","eventAggregator","subscribe","changeChart","moduleName","changedCost","update","value","attached","tuples","createChartTuple","createChart","dataIndex","getDataIndex","visible","series","data","setVisible","newPoint","y","FiveYear","Goals","Intro","httpClient","getLocation","self","navigator","geolocation","console","log","window","onload","getCurrentPosition","position","startPos","fetch","coords","latitude","longitude","json","data2","getCurrentLocation","childCareData","costByState","forEach","stateData","cost","carCost","carCostData","costByAge","ageData","currentUserAge","homeInsurance","homeInsuranceData","homeData","healthInsurance","healthInsuranceData","healthData","jsonData","array","results","formatted_address","split","navigate","test","test1","sanitizeIncome","replace","income","parseInt","toLocaleString","getMonthlyIncome","displayIncome","Results","routeGoals","routeFiveYearPlan","Banner","HighCharts","ChartFactory","containerID","Highcharts","plotBackgroundColor","plotBorderWidth","plotShadow","type","text","tooltip","pointFormat","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","showInLegend","colorByPoint","budgetArray","push","tupleHelper","tempObject","CurrencyValueConverter","toView","locale","props","style","currency","currencyDisplay","displayBy","PercentValueConverter","divided","round","divider","Number","isNaN","Math","ChildCare","includeInBudget","costPercentage","privateSchoolCost","daycareCost","calculateAdvancedChildCareCost","Food","groceries","groceriesCost","diningOutCost","calculateAdvancedFoodCost","Housing","monthlyRentCost","homeInsuranceCost","utilitiesCost","calculateAdvancedCost","Other","cellPhoneCost","recreationCost","gymCost","entertainmentCost","clothingCost","getBasicOtherCost","calculateAdvancedOtherCost","Medical","healthInsuranceCost","dentalCost","calculateAdvancedMedical","Savings","emergencyFundCost","retirementCost","investmentsCost","collegeSavingsCost","calculateAdvancedSavings","Taxes","vehicleTaxCost","housingTaxCost","calculateAdvancedTaxCost","Transportation"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject} from 'aurelia-framework';\r\nimport 'bootstrap';\r\nimport $ from 'jquery';\r\n\r\nexport class App {\r\n  constructor() {\r\n  }\r\n\r\n  configureRouter(config, router) {\r\n    this.router = router;\r\n    config.title = \"Budget Expectancy Calculator\";\r\n    config.map([\r\n      {\r\n        route: ['', 'intro'], moduleId: 'intro/intro',\r\n        name: 'intro', title: 'Introduction', nav: true\r\n      },\r\n      {\r\n        route: 'results', moduleId: 'results/results',\r\n        name: 'results', title: 'Personal Budget', nav: true\r\n      },\r\n            {\r\n        route: 'goals', moduleId: 'goals/goals',\r\n        name: 'goals', title: 'Goals', nav: true\r\n      },\r\n            {\r\n        route: 'five-year', moduleId: 'five-year/five-year',\r\n        name: 'five-year', title: 'Five Year Plan', nav: true\r\n      }\r\n    ]);\r\n  }\r\n}\r\n","export class Constants {\r\n    constructor() {\r\n        //Constant for children food cost\r\n        this.foodCostPerChild = 155.7;\r\n        //Constant for adult food cost\r\n        this.foodCostPerAdult = 158.7;\r\n        //Constant for miscellaneous cost\r\n        this.miscellaneousCost = 0.05;\r\n        //Constants for child care module\r\n\r\n        this.childCare = [\r\n            {\r\n                'label': 'School Tuiton',\r\n                'variable': 'privateSchoolCost'\r\n            },\r\n            {\r\n                'label': 'Daycare',\r\n                'variable': 'daycareCost'\r\n            },\r\n            {\r\n                'label': 'School Expenses',\r\n                'variable': 'schoolExpenseCost'\r\n            },\r\n            {\r\n                'label': 'Child Support',\r\n                'variable': 'childSupportCost'\r\n            }\r\n        ];\r\n\r\n        //Constants for food module\r\n        this.food = [\r\n            {\r\n                'label': 'Groceries',\r\n                'variable': 'groceriesCost'\r\n            },\r\n            {\r\n                'label': 'Dining Out',\r\n                'variable': 'diningOutCost'\r\n            },\r\n            {\r\n                'label': 'Workday Coffee/Lunch',\r\n                'variable': 'workdayCost'\r\n            }\r\n        ];\r\n\r\n        //Constants for housing module\r\n        this.housing = [\r\n            {\r\n                'label': 'Cable',\r\n                'variable': 'monthlyRentCost'\r\n            },\r\n            {\r\n                'label': 'Utilities',\r\n                'variable': 'homeInsuranceCost'\r\n            },\r\n            {\r\n                'label': 'Telephone',\r\n                'variable': 'homeTelephoneCost'\r\n            },\r\n            {\r\n                'label': 'Home Maintenance',\r\n                'variable': 'homeMaintenanceCost'\r\n            }\r\n        ];\r\n\r\n        //Constants for housing utilities\r\n        this.housingUtilities = [\r\n            {\r\n                'label': 'Gas',\r\n                'variable': 'utilityGasCost'\r\n            },\r\n            {\r\n                'label': 'Water',\r\n                'variable': 'utilityWaterCost'\r\n            },\r\n            {\r\n                'label': 'Electricity',\r\n                'variable': 'utilityElectricCost'\r\n            }\r\n        ];\r\n\r\n        //Constants for housing owners\r\n        this.housingRent = [\r\n            {\r\n                'label': 'Mortgage Payment',\r\n                'variable': 'mortgageCost'\r\n            },\r\n            {\r\n                'label': 'Home Insurance',\r\n                'variable': 'homeInsuranceCost'\r\n            },\r\n            {\r\n                'label': 'Home Improvements',\r\n                'variable': 'homeImprovementCost'\r\n            }\r\n        ];\r\n\r\n        //Constants for housing rent\r\n        this.housingLease = [\r\n            {\r\n                'label': 'Rent',\r\n                'variable': 'rentCost'\r\n            },\r\n            {\r\n                'label': 'Renters Insurance',\r\n                'variable': 'rentInsuranceCost'\r\n            }\r\n        ];\r\n\r\n        //Constants for medical module\r\n        this.medical = [\r\n            {\r\n                'label': 'Health Insurance',\r\n                'variable': 'healthInsuranceCost'\r\n            },\r\n            {\r\n                'label': 'Medication Cost',\r\n                'variable': 'medicationCost'\r\n            },\r\n            {\r\n                'label': 'Dental Work',\r\n                'variable': 'dentalCost'\r\n            },\r\n            {\r\n                'label': 'Other Medical Cost',\r\n                'variable': 'otherMedicalCost'\r\n            }\r\n        ];\r\n\r\n        //Constants for Transportation\r\n        this.transportation = [\r\n            {\r\n                'label': 'Public Transportation Cost',\r\n                'variable': 'publicTransportationCost'\r\n            },\r\n            {\r\n                'label': 'Car',\r\n                'variable': 'hasCar'\r\n            }\r\n        ];\r\n\r\n        //Constants for Car Transportation\r\n        this.transportationCar = [\r\n            {\r\n                'label': 'How Many Cars',\r\n                'variable': 'numberOfCars'\r\n            },\r\n            {\r\n                'label': 'Payment',\r\n                'variable': 'carPaymentCost'\r\n            },\r\n            {\r\n                'label': 'Repairs',\r\n                'variable': 'carRepairCost'\r\n            },\r\n            {\r\n                'label': 'Insurance',\r\n                'variable': 'insuranceCost'\r\n            },\r\n            {\r\n                'label': 'Gasoline',\r\n                'variable': 'gasolineCost'\r\n            }\r\n        ];\r\n\r\n        //Constants for other module\r\n        this.other = [\r\n            {\r\n                'label': 'Cellphone',\r\n                'variable': 'cellPhoneCost'\r\n            },\r\n            {\r\n                'label': 'Recreation/Travel',\r\n                'variable': 'recreationCost'\r\n            },\r\n            {\r\n                'label': 'Gym Membership',\r\n                'variable': 'gymCost'\r\n            },\r\n            {\r\n                'label': 'Entertainment',\r\n                'variable': 'entertainmentCost'\r\n            },\r\n            {\r\n                'label': 'Clothing',\r\n                'variable': 'clothingCost'\r\n            },\r\n            {\r\n                'label': 'Student Loan Payments',\r\n                'variable': 'studentLoanCost'\r\n            }\r\n        ];\r\n\r\n        //Constants for savings module\r\n        this.savings = [\r\n            {\r\n                'label': 'Emergency Fund',\r\n                'variable': 'emergencyFundCost'\r\n            },\r\n            {\r\n                'label': 'Retirement',\r\n                'variable': 'retirementCost'\r\n            },\r\n            {\r\n                'label': 'Investments',\r\n                'variable': 'investmentsCost'\r\n            },\r\n            {\r\n                'label': 'College Savings',\r\n                'variable': 'collegeSavingsCost'\r\n            }\r\n        ];\r\n        \r\n        //Constants for taxes module\r\n        this.taxes = [\r\n            {\r\n                'label': 'State Taxes',\r\n                'variable': 'vehicleTaxCost'\r\n            },\r\n            {\r\n                'label': 'Filing Status',\r\n                'variable': 'filingStatus'\r\n            }\r\n        ];\r\n\r\n        //Constants for filing status tax\r\n        this.taxesFiling = [\r\n            {\r\n                'label': 'Property Tax',\r\n                'variable': 'propertyTaxCost'\r\n            },\r\n            {\r\n                'label': 'Vehicle Tax',\r\n                'variable': 'vehicleTaxCost'\r\n            },\r\n            {\r\n                'label': 'Income Tax',\r\n                'variable': 'incomeTaxCost'\r\n            }\r\n        ];\r\n    }\r\n}","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {Food} from 'budget-breakdown-module/category-modules/food/food';\r\nimport {Other} from 'budget-breakdown-module/category-modules/other/other';\r\nimport {Housing} from 'budget-breakdown-module/category-modules/housing/housing';\r\nimport {Medical} from 'budget-breakdown-module/category-modules/medical/medical';\r\nimport {Taxes} from 'budget-breakdown-module/category-modules/taxes/taxes';\r\nimport {Savings} from 'budget-breakdown-module/category-modules/savings/savings';\r\nimport {ChildCare} from 'budget-breakdown-module/category-modules/child-care/child-care';\r\nimport {Transportation} from 'budget-breakdown-module/category-modules/transportation/transportation';\r\nimport {singleton} from 'aurelia-framework';\r\nimport {inject} from 'aurelia-framework';\r\nimport {Constants} from 'constants';\r\n\r\n@inject(Constants, Food, Other, Housing, Medical, Taxes, Savings, ChildCare, Transportation)\r\nexport class MasterBudget {\r\n    constructor(constants, food, other, housing, medical, taxes, savings, childCare, transportation) {\r\n        this.constants = constants;\r\n        this.location = \"\";\r\n        this.annualIncome = 0;\r\n        this.totalMonthlyIncome = 8000;\r\n        this.numberChildren = 2;\r\n        this.numberAdults = 1;\r\n        this.stateLocation = 'Alabama';\r\n\r\n        this.food = food;\r\n        this.food.calculateFoodCost(this.numberChildren, this.numberAdults); \r\n        this.other = other;\r\n        this.housing = housing;\r\n        this.medical = medical;\r\n        this.taxes = taxes;\r\n        this.savings = savings;\r\n        this.childCare = childCare;\r\n        this.transportation = transportation;\r\n\r\n        this.carYearlyUpkeepCost = 0;\r\n        this.carMonthlyOwnershipCost = 0;\r\n        this.sumOfAllCost = 0;\r\n        this.budgetCategories = ['Child Care', 'Food', 'Housing', 'Medical', 'Other', 'Savings', 'Taxes', 'Transportation'];\r\n        this.percentageByCategory = [];\r\n\r\n        this.chart = null;\r\n    }\r\n}","export class Breakdown {\r\n    constructor() {}\r\n}","import {inject} from 'aurelia-framework';\r\nimport {ChartFactory} from '../utilities/chartFactory';\r\nimport {MasterBudget} from 'masterBudget';\r\nimport {EventAggregator} from 'aurelia-event-aggregator'\r\n\r\n@inject(MasterBudget, EventAggregator)\r\nexport class Chart {\r\n\r\n    constructor(masterBudget, eventAggregator) {\r\n        this.chart = null;\r\n        this.masterBudget = masterBudget;\r\n        \r\n        eventAggregator.subscribe('toggle element', moduleName => {this.changeChart(moduleName)} );\r\n        eventAggregator.subscribe('update', update => {this.changedCost(update.name, update.value)} );\r\n    }\r\n\r\n    attached() {\r\n        var tuples = ChartFactory.createChartTuple(this.masterBudget);\r\n        this.chart = ChartFactory.createChart('chartContainer', tuples);\r\n        this.masterBudget.chart = this.chart;\r\n    }\r\n\r\n    changeChart(moduleName) {\r\n        var dataIndex = this.getDataIndex(moduleName);\r\n        var visible = this.chart.series[0].data[dataIndex].visible ? false : true;\r\n        this.chart.series[0].data[dataIndex].setVisible(visible);\r\n    }\r\n\r\n    getDataIndex(moduleName) {\r\n        switch (moduleName) {\r\n            case \"Child Care\":  return 0;\r\n            case \"Food\":        return 1;\r\n            case \"Housing\":     return 2;\r\n            case \"Medical\":     return 3;\r\n            case \"Other\":       return 4;\r\n            case \"Savings\":     return 5;\r\n            case \"Taxes\":      return 6;\r\n            default:            return 7;\r\n        }\r\n    }\r\n\r\n    changedCost(moduleName, value) {\r\n        var newPoint = {name: moduleName, y: value};\r\n        this.chart.series[0].data[this.getDataIndex(moduleName)].update(newPoint, true, true);\r\n    }\r\n}","export class FiveYear {\r\n    constructor() {\r\n        \r\n    }\r\n}","export class Goals {\r\n    constructor() {\r\n        \r\n    }\r\n}","import { inject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\nimport { HttpClient, json } from 'aurelia-fetch-client';\r\nimport { ChartFactory } from '../utilities/chartFactory';\r\nimport { MasterBudget } from 'masterBudget';\r\n\r\n@inject(Router, HttpClient, MasterBudget)\r\nexport class Intro {\r\n\r\n    constructor(router, httpClient, masterBudget) {\r\n        this.router = router;\r\n        this.httpClient = httpClient;\r\n        this.masterBudget = masterBudget;\r\n        this.getLocation();\r\n    }\r\n\r\n    //Retrieves the user's current location.\r\n    //TODO: Move this method out of intro.js\r\n    async getLocation() {\r\n        var self = this;\r\n\r\n        // check for Geolocation support\r\n        if (navigator.geolocation) {\r\n            console.log('Geolocation is supported!');\r\n        }\r\n        else {\r\n            console.log('Geolocation is not supported for this Browser/OS version yet.');\r\n        }\r\n\r\n        //Load users current location\r\n        window.onload = async function () {\r\n            var startPos;\r\n            navigator.geolocation.getCurrentPosition(async function (position) {\r\n                startPos = position;\r\n                let data = await self.httpClient.fetch('https://maps.googleapis.com/maps/api/geocode/json?latlng=' + startPos.coords.latitude + ',' + startPos.coords.longitude + '&key=AIzaSyBM9-m7L5132H_bDe3JUn9tlwblTARBRbQ');\r\n                let data2 = await data.json();\r\n                self.getCurrentLocation(data2);\r\n            });\r\n        };\r\n        await window.onload();\r\n\r\n        let childCare = await this.httpClient.fetch('/api/child-care/get.json');\r\n        let childCareData = await childCare.json();\r\n        //Get average child care cost by state\r\n        childCareData.costByState.forEach((stateData) => {\r\n            if (stateData[0] == self.masterBudget.stateLocation) {\r\n                self.masterBudget.childCare.cost = stateData[8];\r\n            }\r\n        })\r\n\r\n        let carCost = await this.httpClient.fetch('/api/car-costs/get.json');\r\n        let carCostData = await carCost.json();\r\n        //Get average car cost for repairs, insurance, and gasoline\r\n        carCostData.costByState.forEach((stateData) => {\r\n            if (stateData[0] === self.masterBudget.stateLocation) {\r\n                self.masterBudget.carYearlyUpkeepCost = stateData[4];\r\n            }\r\n        });\r\n        //Get average car cost for renting/buying\r\n        carCostData.costByAge.forEach((ageData) => {\r\n            if (ageData[0] >= self.masterBudget.currentUserAge) {\r\n                self.masterBudget.carMonthlyOwnershipCost = ageData[2];\r\n            }\r\n        });\r\n\r\n        //Get average home insurance cost\r\n        let homeInsurance = await this.httpClient.fetch('/api/home-insurance/get.json');\r\n        let homeInsuranceData = await homeInsurance.json();\r\n        homeInsuranceData.costByState.forEach((homeData) => {\r\n            if (homeData[0] == self.masterBudget.stateLocation) {\r\n                self.masterBudget.housing.cost = homeData[1];\r\n            }\r\n        });\r\n\r\n        //Get average health insurance cost\r\n        let healthInsurance = await this.httpClient.fetch('api/healthcare-insurance/get.json');\r\n        let healthInsuranceData = await healthInsurance.json();\r\n        healthInsuranceData.costByState.forEach((healthData) => {\r\n            if (healthData[0] == self.masterBudget.stateLocation) {\r\n                self.masterBudget.medical.cost = healthData[2];\r\n            }\r\n        });\r\n    }\r\n\r\n    //Get current county/location of user\r\n    getCurrentLocation(jsonData) {\r\n        var array = jsonData.results[4].formatted_address.split(\",\");\r\n        this.masterBudget.location = array[0];\r\n    }\r\n\r\n    //Routes the user to the results page after clicking budget button\r\n    route() {\r\n        this.router.navigate(\"#/results\");\r\n    }\r\n\r\n    test() {\r\n        console.log(this.masterBudget.numberChildren);\r\n    }\r\n\r\n    test1() {\r\n        console.log(this.masterBudget.numberAdults);\r\n    }\r\n\r\n    //Sanitize the income input to U.S. dollar format\r\n    sanitizeIncome() {\r\n        this.masterBudget.annualIncome = this.masterBudget.annualIncome.replace(/,/g, \"\");\r\n        this.masterBudget.annualIncome = this.masterBudget.annualIncome.replace(/\\$/g, \"\");\r\n\r\n        this.income = parseInt(this.masterBudget.annualIncome);\r\n\r\n        this.masterBudget.annualIncome = '$' + this.income.toLocaleString();\r\n    }\r\n\r\n    //Calculates the monthly income based on entered annual income\r\n    getMonthlyIncome() {\r\n        var income = parseInt(this.displayIncome);\r\n        this.masterBudget.totalMonthlyIncome = income / 12;\r\n    }\r\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n","import { inject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\n\r\n@inject(Router)\r\nexport class Results {\r\n    constructor(router) {\r\n        this.router = router;\r\n    }\r\n\r\n    //Routes the user to the goals page\r\n    routeGoals() {\r\n        this.router.navigate(\"#/goals\");\r\n    }\r\n\r\n    //Routes the user to the five year plan page\r\n    routeFiveYearPlan() {\r\n        this.router.navigate(\"#/five-year\")\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {MasterBudget} from 'masterBudget';\r\nimport {ChartFactory} from '../utilities/chartFactory';\r\n\r\n@inject(MasterBudget)\r\nexport class Banner {\r\n    constructor(masterBudget) {\r\n        this.income = null;\r\n        this.displayIncome = \"\";\r\n        this.masterBudget = masterBudget;\r\n    }\r\n\r\n    //Sanitize the income input to U.S. dollar format\r\n    sanitizeIncome() {\r\n        this.displayIncome = this.displayIncome.replace(/,/g, \"\");\r\n        this.displayIncome = this.displayIncome.replace(/\\$/g, \"\");\r\n\r\n        this.income = parseInt(this.displayIncome);\r\n\r\n        this.displayIncome = '$' + this.income.toLocaleString();\r\n    }\r\n\r\n    //Calculates the monthly income based on entered annual income\r\n    getMonthlyIncome() {\r\n        var income = parseInt(this.displayIncome);\r\n        this.masterBudget.totalMonthlyIncome = income / 12;\r\n        console.log(this.masterBudget.totalMonthlyIncome);\r\n    }\r\n}","import * as HighCharts from \"highcharts\";\r\n\r\nexport class ChartFactory {\r\n  \r\n    static createChart(containerID, tuples) {\r\n        return Highcharts.chart(containerID, {\r\n            chart: {\r\n                plotBackgroundColor: null,\r\n                plotBorderWidth: null,\r\n                plotShadow: false,\r\n                type: 'pie'\r\n            },\r\n            title: {\r\n                text: 'Budget Calculator'\r\n            },\r\n            tooltip: {\r\n                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n            },\r\n            plotOptions: {\r\n                pie: {\r\n                    allowPointSelect: true,\r\n                    cursor: 'pointer',\r\n                    dataLabels: {\r\n                        enabled: false\r\n                    },\r\n                    showInLegend: true\r\n                }\r\n            },\r\n            series: [{\r\n                name: 'Percentage',\r\n                colorByPoint: true,\r\n                data: tuples\r\n            }]\r\n        });//end Highcharts.chart()\r\n    }\r\n\r\n    //Create tuples for the pie chart\r\n    static createChartTuple(masterBudget) {\r\n        var budgetArray = [];\r\n        masterBudget.sumOfAllCost = 0;\r\n        console.log(masterBudget);\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[0], masterBudget.childCare.cost, masterBudget));\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[1], masterBudget.food.cost, masterBudget));\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[2], masterBudget.housing.cost, masterBudget));\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[3], masterBudget.medical.cost, masterBudget));\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[4], masterBudget.other.cost, masterBudget));\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[5], masterBudget.savings.cost, masterBudget));\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[6], masterBudget.taxes.cost, masterBudget));\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[7], masterBudget.transportation.cost, masterBudget));\r\n\r\n        return budgetArray;\r\n    }\r\n\r\n    static tupleHelper(name, data, masterBudget) {\r\n        var tempObject = {};\r\n        tempObject.name = name;\r\n        tempObject.y = data;\r\n        masterBudget.sumOfAllCost += data;\r\n        return tempObject;\r\n    }\r\n}","export class CurrencyValueConverter {\r\n    toView(value, config = {}) {\r\n        let locale = config.locale || 'en';\r\n        let props = {\r\n            style: 'currency',\r\n            currency: config.currency || 'USD',\r\n            currencyDisplay: config.displayBy || 'symbol'\r\n        };\r\n\r\n        return value.toLocaleString(locale, props);\r\n    }\r\n}","export class PercentValueConverter {\r\n    toView(value, divided = 100, round = false) {\r\n      if (!value) {\r\n        return value;\r\n      }\r\n      \r\n      let divider = (typeof value === 'string') ? Number(value) : value;\r\n      \r\n      if (typeof divider !== 'number' || isNaN(divider)) {\r\n        return value;\r\n      }\r\n      \r\n      return round ? Math.round((divider / divided) * 100 ) : (divider / divided) * 100;\r\n    }\r\n}","import {inject, singleton} from 'aurelia-framework';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {Constants} from 'constants';\r\n\r\n@inject(Constants, EventAggregator)\r\n@singleton()\r\nexport class ChildCare {\r\n    constructor(constants, eventAggregator) {\r\n        this.includeInBudget = true;\r\n        this.constants = constants;\r\n        this.cost = 0;\r\n        this.costPercentage = 0;\r\n        this.privateSchoolCost = 0;\r\n        this.daycareCost = 0;\r\n        this.eventAggregator = eventAggregator;\r\n    }\r\n\r\n    //Calculates the cost of the advanced child care cost\r\n    calculateAdvancedChildCareCost() {\r\n        this.cost = parseInt(this.privateSchoolCost) + parseInt(this.daycareCost);\r\n    }\r\n}","import {inject, singleton} from 'aurelia-framework';\r\nimport {Constants} from '../../../constants';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\n\r\n@inject(Constants, EventAggregator)\r\n@singleton()\r\nexport class Food {\r\n    constructor(constants, eventAggregator) {\r\n        this.includeInBudget = true;\r\n        this.groceries = 0;\r\n        this.constants = constants;\r\n        this.cost = 0;\r\n        this.costPercentage = 0;\r\n        this.groceriesCost = 0;\r\n        this.diningOutCost = 0;\r\n        this.eventAggregator = eventAggregator;\r\n    }\r\n\r\n    //Calculate the basic food cost for the household\r\n    calculateFoodCost(numberChildren, numberAdults) {\r\n        this.numberChildren = numberChildren;\r\n        this.numberAdults = numberAdults;\r\n        this.cost =  parseInt(numberChildren) * parseInt(this.constants.foodCostPerChild) + parseInt(numberAdults) * parseInt(this.constants.foodCostPerAdult);\r\n    }\r\n\r\n    //Calculate detailed food cost\r\n    calculateAdvancedFoodCost() {\r\n        this.cost = parseInt(this.groceriesCost) + parseInt(this.diningOutCost);\r\n    }\r\n}","import {inject, singleton} from 'aurelia-framework';\r\nimport {Constants} from 'constants';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\n\r\n@inject(Constants, EventAggregator)\r\n@singleton()\r\nexport class Housing {\r\n    constructor(constants, eventAggregator){\r\n        this.includeInBudget = true;\r\n        this.constants = constants;\r\n        this.cost = 0;\r\n        this.costPercentage = 0;\r\n        this.monthlyRentCost = 0;\r\n        this.homeInsuranceCost = 0;\r\n        this.utilitiesCost = 0;\r\n        this.eventAggregator = eventAggregator;\r\n    }\r\n\r\n    //Calculates advanced cost for housing\r\n    calculateAdvancedCost() {\r\n        this.cost = parseInt(this.monthlyRentCost) + parseInt(this.homeInsuranceCost) + parseInt(this.utilitiesCost);\r\n    }\r\n}","import {inject, singleton} from 'aurelia-framework';\r\nimport {Constants} from 'constants';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\n\r\n@inject(Constants, EventAggregator)\r\n@singleton()\r\nexport class Other {\r\n    constructor(constants, eventAggregator) {\r\n        this.includeInBudget = true;\r\n        this.constants = constants\r\n        this.cost = 0;\r\n        this.costPercentage = 0;\r\n        this.cellPhoneCost = 0;\r\n        this.recreationCost = 0;\r\n        this.gymCost = 0;\r\n        this.entertainmentCost = 0;\r\n        this.clothingCost = 0;\r\n        this.eventAggregator = eventAggregator;\r\n    }\r\n\r\n    //Calculates the basic cost of the other category\r\n    getBasicOtherCost() {\r\n        this.cost = this.totalMonthlyIncome * this.constants.miscellaneousCost;\r\n    }\r\n\r\n    //Calculates the advanced cost of other category\r\n    calculateAdvancedOtherCost() {\r\n        this.cost = parseInt(this.cellPhoneCost) + parseInt(this.recreationCost) + parseInt(this.gymCost) + parseInt(this.entertainmentCost) + parseInt(this.clothingCost);\r\n    }\r\n}","import {inject, singleton} from 'aurelia-framework';\r\nimport {Constants} from 'constants';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\n\r\n@inject(Constants, EventAggregator)\r\n@singleton()\r\nexport class Medical {\r\n    constructor(constants, eventAggregator) {\r\n        this.includeInBudget = true;\r\n        this.constants = constants;\r\n        this.cost = 0;\r\n        this.costPercentage = 0;\r\n        this.healthInsuranceCost = 0;\r\n        this.dentalCost = 0;\r\n        this.eventAggregator = eventAggregator;\r\n    }\r\n\r\n    //Calculates the advanced cost of the medical category\r\n    calculateAdvancedMedical() {\r\n        this.cost = parseInt(this.dentalCost) + parseInt(this.healthInsuranceCost);\r\n    }\r\n}","import {inject, singleton} from 'aurelia-framework';\r\nimport {Constants} from 'constants';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\n\r\n@inject(Constants, EventAggregator)\r\n@singleton()\r\nexport class Savings {\r\n\r\n    constructor(constants, eventAggregator) {\r\n        this.includeInBudget = true;\r\n        this.cost = 0;\r\n        this.costPercentage = 0;\r\n        this.constants = constants;\r\n        this.emergencyFundCost = 0;\r\n        this.retirementCost = 0;\r\n        this.investmentsCost = 0;\r\n        this.collegeSavingsCost = 0;\r\n        this.eventAggregator = eventAggregator;\r\n    }\r\n\r\n    //Calculates cost of savings\r\n    calculateAdvancedSavings() {\r\n        this.cost = parseInt(this.emergencyFundCost) + parseInt(this.retirementCost) + parseInt(this.investmentsCost) + parseInt(this.collegeSavingsCost);\r\n    }\r\n}","import {inject, singleton} from 'aurelia-framework';\r\nimport {Constants} from 'constants';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\n\r\n@inject(Constants, EventAggregator)\r\n@singleton()\r\nexport class Taxes {\r\n    constructor(constants, eventAggregator) {\r\n        this.includeInBudget = true;\r\n        this.constants = constants;\r\n        this.cost = 0;\r\n        this.costPercentage = 0;\r\n        this.vehicleTaxCost = 0;\r\n        this.housingTaxCost = 0;\r\n        this.eventAggregator = eventAggregator;\r\n    }\r\n\r\n    //Calculates cost of vehicle and housing tax entered by the user.\r\n    calculateAdvancedTaxCost() {\r\n        this.cost =  parseInt(this.vehicleTaxCost) + parseInt(this.housingTaxCost);\r\n    }\r\n}","import {inject, singleton} from 'aurelia-framework';\r\nimport {Constants} from 'constants';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\n\r\n@inject(Constants, EventAggregator)\r\n@singleton()\r\nexport class Transportation {\r\n    constructor(constants, eventAggregator) {\r\n        this.includeInBudget = true;\r\n        this.constants = constants;\r\n        this.cost = 0;\r\n        this.costPercentage = 0;\r\n        this.eventAggregator = eventAggregator;\r\n    }\r\n\r\n}"],"sourceRoot":".."}
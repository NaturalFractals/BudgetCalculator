{"version":3,"sources":["src/app.js","src/environment.js","src/intro.js","src/main.js","src/results.js","src/medical/medical.js","src/resources/index.js","src/savings/savings.js","src/utilities/chartFactory.js"],"names":["App","configureRouter","config","router","title","map","route","moduleId","name","nav","message","modules","display","path","debug","testing","Intro","navigate","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","Results","Medica","Savings","HighCharts","ChartFactory","createChart","containerID","Highcharts","chart"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;MAKaA,cAAAA,cADZ;AAEC,mBAAc;AAAA;AACb;;kBAEDC,2CAAgBC,QAAQC,QAAQ;AAC9B,WAAKA,MAAL,GAAcA,MAAd;AACAD,aAAOE,KAAP,GAAe,8BAAf;AACAF,aAAOG,GAAP,CAAW,CACT;AACEC,eAAO,CAAC,EAAD,EAAK,OAAL,CADT,EACwBC,UAAU,OADlC;AAEEC,cAAM,OAFR,EAEiBJ,OAAO,cAFxB,EAEwCK,KAAK;AAF7C,OADS,EAKT;AACEH,eAAO,SADT,EACoBC,UAAU,SAD9B;AAEEC,cAAM,SAFR,EAEmBJ,OAAO,iBAF1B,EAE6CK,KAAK;AAFlD,OALS,CAAX;AAUA,WAAKC,OAAL,GAAe,cAAf;;AAEA,WAAKC,OAAL,GAAe,CAAC,EAACC,SAAS,KAAV,EAAiBC,MAAM,iBAAvB,EAAD,EAGC,EAACD,SAAS,KAAV,EAAiBC,MAAM,iBAAvB,EAHD,CAAf;AAID;;;;;;;;;;;oBC5BY;AACbC,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;;;;;;;;;;;QCIFC,gBAAAA,gBADZ;AAIG,uBAAYb,MAAZ,EAAoB;AAAA;;AAChB,iBAAKA,MAAL,GAAcA,MAAd;AACH;;wBAEDG,yBAAQ;AACJ,iBAAKH,MAAL,CAAYc,QAAZ,CAAqB,WAArB;AACH;;;;;;;;;;;UCXWC,YAAAA;;;;;;;;;;AAAT,WAASA,SAAT,CAAmBC,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYR,KAAhB,EAAuB;AACrBK,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYR,OAAhB,EAAyB;AACvBI,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;;;;;;;;QChBYC,kBAAAA,UACT,mBAAc;AAAA;AAEb;;;;;;;;;;;;;;;QCHQC,iBAAAA,SACT,kBAAc;AAAA;AAEb;;;;;;;;UCHWX,YAAAA;AAAT,WAASA,SAAT,CAAmBhB,MAAnB,EAA2B,CAEjC;;;;;;;;;;;;;;;QCFY4B,kBAAAA,UACT,mBAAc;AAAA;AAEb;;;;;;;;;;QCHOC;;;;;;;;;;;;;;;;;;;;;;;;;QAECC,uBAAAA;AACT,gCAAc;AAAA;AAEb;;+BAEDC,mCAAYC,aAAa;AACrBC,uBAAWC,KAAX,CAAiBF,WAAjB,EAA8B,EAA9B;AAGH","file":"app-bundle.js","sourcesContent":["import {inject} from 'aurelia-framework';\r\nimport 'bootstrap';\r\nimport $ from 'jquery';\r\n\r\n@inject()\r\nexport class App {\r\n  constructor() {\r\n  }\r\n\r\n  configureRouter(config, router) {\r\n    this.router = router;\r\n    config.title = \"Budget Expectancy Calculator\";\r\n    config.map([\r\n      {\r\n        route: ['', 'intro'], moduleId: 'intro',\r\n        name: 'intro', title: 'Introduction', nav: true\r\n      },\r\n      {\r\n        route: 'results', moduleId: 'results',\r\n        name: 'results', title: 'Personal Budget', nav: true\r\n      }\r\n    ]);\r\n    this.message = 'Hello World!';\r\n\r\n    this.modules = [{display: false, path: \"medical/medical\" },\r\n                    // {display: false, path: \"taxes\"}, \r\n                    // {display: false, path: \"savings\"}, \r\n                    {display: false, path: \"savings/savings\"}]\r\n  }\r\n}\r\n","export default {\n  debug: true,\n  testing: true\n};\n","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\n\r\n@inject(Router)\r\nexport class Intro {\r\n    numberChildren;\r\n    numberAdults;\r\n    constructor(router) {\r\n        this.router = router;\r\n    }\r\n\r\n    route() {\r\n        this.router.navigate(\"#/results\");\r\n    }\r\n}","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class Results {\r\n    constructor() {\r\n        \r\n    }\r\n}","export class Medica {\r\n    constructor() {\r\n        \r\n    }\r\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n","export class Savings {\r\n    constructor() {\r\n        \r\n    }\r\n}","import * as HighCharts from \"highcharts\";\r\n\r\nexport class ChartFactory {\r\n    constructor() {\r\n\r\n    }\r\n\r\n    createChart(containerID) {\r\n        Highcharts.chart(containerID, {\r\n            \r\n        })\r\n    }\r\n}"],"sourceRoot":".."}
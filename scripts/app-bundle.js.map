{"version":3,"sources":["src/app.js","src/constants.js","src/environment.js","src/main.js","src/masterBudget.js","src/user.js","src/budget-breakdown-module/breakdown.js","src/chart/chart.js","src/intro/intro.js","src/resources/index.js","src/results/results.js","src/utilities/chartFactory.js","src/results-banner-module/banner.js","src/budget-breakdown-module/category-modules/child-care/child-care.js","src/budget-breakdown-module/category-modules/food/food.js","src/budget-breakdown-module/category-modules/housing/housing.js","src/budget-breakdown-module/category-modules/medical/medical.js","src/budget-breakdown-module/category-modules/other/other.js","src/budget-breakdown-module/category-modules/savings/savings.js","src/budget-breakdown-module/category-modules/taxes/taxes.js"],"names":["App","configureRouter","config","router","title","map","route","moduleId","name","nav","Constants","childCare","food","housing","medical","other","savings","taxes","debug","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","MasterBudget","totalMonthlyIncome","numberChildren","numberAdults","foodCost","otherCost","budgetCategories","percentageByCategory","User","Breakdown","Chart","masterBudget","chart","attached","tuples","createChartTuple","createChart","changeChart","visible","series","data","setVisible","Intro","httpClient","getLocation","income","displayIncome","self","navigator","geolocation","console","log","window","onload","getCurrentPosition","position","startPos","fetch","coords","latitude","longitude","json","data2","navigate","sanitizeIncome","replace","parseInt","toLocaleString","Results","arr","HighCharts","ChartFactory","containerID","Highcharts","plotBackgroundColor","plotBorderWidth","plotShadow","type","text","tooltip","pointFormat","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","showInLegend","colorByPoint","percentage","budgetArray","i","length","tempObject","y","push","Banner","ChildCare","constants","Food","calculateFoodCost","calculateAdvancedFoodCost","Housing","Medical","Other","getBasicOtherCost","Savings","Taxes"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject} from 'aurelia-framework';\r\nimport 'bootstrap';\r\nimport $ from 'jquery';\r\n\r\nexport class App {\r\n  constructor() {\r\n  }\r\n\r\n  configureRouter(config, router) {\r\n    this.router = router;\r\n    config.title = \"Budget Expectancy Calculator\";\r\n    config.map([\r\n      {\r\n        route: ['', 'intro'], moduleId: 'intro/intro',\r\n        name: 'intro', title: 'Introduction', nav: true\r\n      },\r\n      {\r\n        route: 'results', moduleId: 'results/results',\r\n        name: 'results', title: 'Personal Budget', nav: true\r\n      }\r\n    ]);\r\n  }\r\n}\r\n","export class Constants {\r\n    constructor() {\r\n        //Constants for child care module\r\n        this.childCare = [\r\n            {\r\n                'label': 'Private School'\r\n            },\r\n            {\r\n                'label': 'Daycare'\r\n            }\r\n        ];\r\n\r\n        //Constants for food module\r\n        this.food = [\r\n            {\r\n                'label': 'Groceries'\r\n            },\r\n            {\r\n                'label': 'Dining Out'\r\n            }\r\n        ];\r\n\r\n        //Constants for housing module\r\n        this.housing = [\r\n            {\r\n                'label': 'Monthly Rent'\r\n            },\r\n            {\r\n                'label': 'Home Insurance'\r\n            },\r\n            {\r\n                'label': 'Utilities Bill'\r\n            }\r\n        ];\r\n\r\n        //Constants for medical module\r\n        this.medical = [\r\n            {\r\n                'label': 'Health Insurance'\r\n            },\r\n            {\r\n                'label': 'Dental Work'\r\n            }\r\n        ];\r\n\r\n        //Constants for other module\r\n        this.other = [\r\n            {\r\n                'label': 'Cellphone'\r\n            },\r\n            {\r\n                'label': 'Recreation/Travel'\r\n            },\r\n            {\r\n                'label': 'Gym Membership'\r\n            },\r\n            {\r\n                'label': 'Entertainment'\r\n            },\r\n            {\r\n                'label': 'Clothing'\r\n            }\r\n        ];\r\n\r\n        //Constants for savings module\r\n        this.savings = [\r\n            {\r\n                'label': 'Emergency Fund'\r\n            },\r\n            {\r\n                'label': 'Retirement'\r\n            },\r\n            {\r\n                'label': 'Investments'\r\n            },\r\n            {\r\n                'label': 'College Savings'\r\n            }\r\n        ];\r\n        \r\n        //Constants for taxes module\r\n        this.taxes = [\r\n            {\r\n                'label': 'Vehicle Taxes'\r\n            },\r\n            {\r\n                'label': 'Housing Taxes'\r\n            }\r\n        ];\r\n    }\r\n}","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class MasterBudget {\r\n    constructor() {\r\n        this.totalMonthlyIncome = 0;\r\n        this.numberChildren = 0;\r\n        this.numberAdults = 0;\r\n        this.foodCost = 0;\r\n        this.otherCost = 0;\r\n        this.budgetCategories = ['Child Care', 'Food', 'Housing', 'Medical', 'Other', 'Savings', 'Taxes'];\r\n        this.percentageByCategory = [0.1, 0.2, 0.1, 0.1, 0.1, 0.1, 0.3];\r\n    }\r\n}","export class User {\r\n    constructor() {\r\n        this.numberChildren = 0;\r\n        this.numberAdults = 0;\r\n        this.foodCost = 0;\r\n    }\r\n}","export class Breakdown {\r\n    constructor() {}\r\n}","import {inject} from 'aurelia-framework';\r\nimport {ChartFactory} from '../utilities/chartFactory';\r\nimport {MasterBudget} from 'masterBudget';\r\n\r\n@inject(MasterBudget)\r\nexport class Chart {\r\n    constructor(masterBudget) {\r\n        this.chart = null;\r\n        this.masterBudget = masterBudget;\r\n    }\r\n\r\n    attached() {\r\n        var tuples = ChartFactory.createChartTuple(this.masterBudget.budgetCategories, this.masterBudget.percentageByCategory);\r\n        this.chart = ChartFactory.createChart('chartContainer', tuples);\r\n        //this.chart = ChartFactory.createChart('chartContainer');\r\n    }\r\n\r\n    changeChart() {\r\n        var visible = this.chart.series[0].data[0].visible ? false : true;\r\n        this.chart.series[0].data[0].setVisible(visible);\r\n    }\r\n}","import { inject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\nimport { HttpClient, json } from 'aurelia-fetch-client';\r\nimport { MasterBudget } from 'masterBudget';\r\n\r\n@inject(Router, HttpClient, MasterBudget)\r\nexport class Intro {\r\n    numberChildren;\r\n    numberAdults;\r\n\r\n    constructor(router, httpClient, masterBudget) {\r\n        this.router = router;\r\n        this.httpClient = httpClient;\r\n        this.masterBudget = masterBudget;\r\n        this.getLocation();\r\n\r\n        this.income = null;\r\n        this.displayIncome = \"\";\r\n    }\r\n\r\n    //Retrieves the user's current location.\r\n    //TODO: Move this method out of intro.js\r\n    async getLocation() {\r\n        var self = this;\r\n        \r\n        // check for Geolocation support\r\n        if (navigator.geolocation) {\r\n            console.log('Geolocation is supported!');\r\n        }\r\n        else {\r\n            console.log('Geolocation is not supported for this Browser/OS version yet.');\r\n        }\r\n\r\n        //Load users current location\r\n        window.onload = async function () {\r\n            var startPos;\r\n            navigator.geolocation.getCurrentPosition(async function (position) {\r\n                startPos = position;\r\n                let data = await self.httpClient.fetch('https://maps.googleapis.com/maps/api/geocode/json?latlng=' + startPos.coords.latitude + ',' + startPos.coords.longitude + '&key=AIzaSyBM9-m7L5132H_bDe3JUn9tlwblTARBRbQ');\r\n                let data2 = await data.json();\r\n            });\r\n        };\r\n        await window.onload();\r\n    }\r\n\r\n    //Routes the user to the results page after clicking budget button\r\n    route() {\r\n        this.router.navigate(\"#/results\");\r\n    }\r\n\r\n    sanitizeIncome() {\r\n        this.displayIncome = this.displayIncome.replace(/,/g, \"\");\r\n        this.displayIncome = this.displayIncome.replace(/\\$/g, \"\");\r\n\r\n        this.income = parseInt(this.displayIncome);\r\n\r\n        this.displayIncome = '$' + this.income.toLocaleString();\r\n    }\r\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n","export class Results {\r\n    constructor() {\r\n        this.arr = [1, 2, 3, 4];\r\n    }\r\n}","import * as HighCharts from \"highcharts\";\r\n\r\nexport class ChartFactory {\r\n  \r\n    static createChart(containerID, tuples) {\r\n        return Highcharts.chart(containerID, {\r\n            chart: {\r\n                plotBackgroundColor: null,\r\n                plotBorderWidth: null,\r\n                plotShadow: false,\r\n                type: 'pie'\r\n            },\r\n            title: {\r\n                text: 'Budget Calculator'\r\n            },\r\n            tooltip: {\r\n                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n            },\r\n            plotOptions: {\r\n                pie: {\r\n                    allowPointSelect: true,\r\n                    cursor: 'pointer',\r\n                    dataLabels: {\r\n                        enabled: false\r\n                    },\r\n                    showInLegend: true\r\n                }\r\n            },\r\n            series: [{\r\n                name: 'Brands',\r\n                colorByPoint: true,\r\n                data: tuples\r\n            }]\r\n        });//end Highcharts.chart()\r\n    }\r\n\r\n    //Create tuples for the pie chart\r\n    static createChartTuple(budgetCategories, percentage) {\r\n        var budgetArray = [];\r\n        for(var i = 0; i < budgetCategories.length; i++) {\r\n            var tempObject = {};\r\n            tempObject.name = budgetCategories[i];\r\n            tempObject.y = percentage[i];\r\n            budgetArray.push(tempObject);\r\n        }\r\n        return budgetArray;\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {MasterBudget} from 'masterBudget';\r\n\r\n@inject(MasterBudget)\r\nexport class Banner {\r\n    constructor(masterBudget) {\r\n        this.income = null;\r\n        this.displayIncome = \"\";\r\n        this.masterBudget = masterBudget;\r\n    }\r\n\r\n    sanitizeIncome() {\r\n        this.displayIncome = this.displayIncome.replace(/,/g, \"\");\r\n        this.displayIncome = this.displayIncome.replace(/\\$/g, \"\");\r\n\r\n        this.income = parseInt(this.displayIncome);\r\n\r\n        this.displayIncome = '$' + this.income.toLocaleString();\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {MasterBudget} from 'masterBudget';\r\nimport {Constants} from 'constants';\r\n\r\n@inject(MasterBudget, Constants)\r\nexport class ChildCare {\r\n    constructor(masterBudget, constants) {\r\n        this.masterBudget = masterBudget;\r\n        this.constants = constants; \r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {MasterBudget} from 'masterBudget';\r\nimport {Constants} from 'constants';\r\n\r\n@inject(MasterBudget, Constants)\r\nexport class Food {\r\n    constructor(masterBudget, constants) {\r\n        this.masterBudget = masterBudget;\r\n        this.constants = constants;\r\n    }\r\n\r\n    //Calculate the basic food cost for the household\r\n    calculateFoodCost() {\r\n        this.masterBudget.foodCost = this.masterBudget.numberChildren * 155.70 + this.masterBudget.numberAdults * 158.70;\r\n    }\r\n\r\n    //Calculate detailed food cost\r\n    calculateAdvancedFoodCost() {\r\n\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {MasterBudget} from 'masterBudget';\r\nimport {Constants} from 'constants';\r\n\r\n@inject(MasterBudget, Constants)\r\nexport class Housing {\r\n    constructor(masterBudget, constants){\r\n        this.masterBudget = masterBudget;\r\n        this.constants = constants;\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {MasterBudget} from 'masterBudget';\r\nimport {Constants} from 'constants';\r\n\r\n@inject(MasterBudget, Constants)\r\nexport class Medical {\r\n    constructor(masterBudget, constants) {\r\n        this.masterBudget = masterBudget;\r\n        this.constants = constants;\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {MasterBudget} from 'masterBudget';\r\nimport {Constants} from 'constants';\r\n\r\n@inject(MasterBudget, Constants)\r\nexport class Other {\r\n    constructor(masterBudget, constants) {\r\n        this.masterBudget = masterBudget;\r\n        this.constants = constants;\r\n    }\r\n\r\n    //Calculates the basic cost of the other category\r\n    getBasicOtherCost() {\r\n        this.masterBudget.otherCost = this.masterBudget.totalMonthlyIncome * 0.05;\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {MasterBudget} from 'masterBudget';\r\nimport {Constants} from 'constants';\r\n\r\n@inject(MasterBudget, Constants)\r\nexport class Savings {\r\n    constructor(masterBudget, constants) {\r\n        this.masterBudget = masterBudget;\r\n        this.constants = constants;\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {MasterBudget} from 'masterBudget';\r\nimport {Constants} from 'constants';\r\n\r\n@inject(MasterBudget, Constants)\r\nexport class Taxes {\r\n    constructor(masterBudget, constants) {\r\n        this.masterBudget = masterBudget;\r\n        this.constants = constants;\r\n    }\r\n}"],"sourceRoot":".."}
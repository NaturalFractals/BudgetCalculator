{"version":3,"sources":["src/app.js","src/constants.js","src/environment.js","src/main.js","src/masterBudget.js","src/budget-breakdown-module/breakdown.js","src/chart/chart.js","src/intro/intro.js","src/resources/index.js","src/results/results.js","src/results-banner-module/banner.js","src/utilities/chartFactory.js","src/utilities/moneyValueConverter.js","src/budget-breakdown-module/category-modules/child-care/child-care.js","src/budget-breakdown-module/category-modules/food/food.js","src/budget-breakdown-module/category-modules/housing/housing.js","src/budget-breakdown-module/category-modules/medical/medical.js","src/budget-breakdown-module/category-modules/other/other.js","src/budget-breakdown-module/category-modules/taxes/taxes.js","src/budget-breakdown-module/category-modules/savings/savings.js"],"names":["App","configureRouter","config","router","title","map","route","moduleId","name","nav","Constants","foodCostPerChild","foodCostPerAdult","miscellaneousCost","childCare","food","housing","medical","other","savings","taxes","debug","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","MasterBudget","constants","location","totalMonthlyIncome","numberChildren","numberAdults","stateLocation","cost","getBasicOtherCost","carYearlyUpkeepCost","carMonthlyOwnershipCost","sumOfAllCost","budgetCategories","percentageByCategory","chart","Breakdown","Chart","masterBudget","attached","console","log","tuples","createChartTuple","createChart","changeChart","visible","series","data","setVisible","Intro","httpClient","displayIncome","getLocation","self","navigator","geolocation","window","onload","getCurrentPosition","position","startPos","fetch","coords","latitude","longitude","json","data2","getCurrentLocation","childCareData","costByState","forEach","stateData","carCost","carCostData","costByAge","ageData","currentUserAge","homeInsurance","homeInsuranceData","homeData","healthInsurance","healthInsuranceData","healthData","jsonData","array","results","formatted_address","split","navigate","test","test1","sanitizeIncome","replace","income","parseInt","toLocaleString","getMonthlyIncome","Results","Banner","HighCharts","ChartFactory","containerID","Highcharts","plotBackgroundColor","plotBorderWidth","plotShadow","type","text","tooltip","pointFormat","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","showInLegend","colorByPoint","budgetArray","push","tupleHelper","tempObject","y","MoneyValueConverter","toView","value","ChildCare","privateSchoolCost","daycareCost","calculateAdvancedChildCareCost","Food","includeInBudget","groceries","groceriesCost","diningOutCost","calculateFoodCost","calculateAdvancedFoodCost","grocerciesCost","Housing","monthlyRentCost","homeInsuranceCost","utilitiesCost","Medical","healthInsuranceCost","dentalCost","Other","cellPhoneCost","Taxes","vehicleTaxCost","housingTaxCost","calculateAdvancedTaxCost","Savings","emergencyFundCost","retirementCost","investmentsCost","collegeSavingsCost","calculateEmergencyFundCost","emergencyFund","calculateRetirementCost","calcualteInvestmentsCost","investmentCost","calculateCollegeSavingsCost","collegeCost"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject} from 'aurelia-framework';\r\nimport 'bootstrap';\r\nimport $ from 'jquery';\r\n\r\nexport class App {\r\n  constructor() {\r\n  }\r\n\r\n  configureRouter(config, router) {\r\n    this.router = router;\r\n    config.title = \"Budget Expectancy Calculator\";\r\n    config.map([\r\n      {\r\n        route: ['', 'intro'], moduleId: 'intro/intro',\r\n        name: 'intro', title: 'Introduction', nav: true\r\n      },\r\n      {\r\n        route: 'results', moduleId: 'results/results',\r\n        name: 'results', title: 'Personal Budget', nav: true\r\n      }\r\n    ]);\r\n  }\r\n}\r\n","export class Constants {\r\n    constructor() {\r\n        //Constant for children food cost\r\n        this.foodCostPerChild = 155.7;\r\n        //Constant for adult food cost\r\n        this.foodCostPerAdult = 158.7;\r\n        //Constant for miscellaneous cost\r\n        this.miscellaneousCost = 0.05;\r\n        //Constants for child care module\r\n\r\n        this.childCare = [\r\n            {\r\n                'label': 'Private School',\r\n                'variable': 'privateSchoolCost'\r\n            },\r\n            {\r\n                'label': 'Daycare',\r\n                'variable': 'daycareCost'\r\n            }\r\n        ];\r\n\r\n        //Constants for food module\r\n        this.food = [\r\n            {\r\n                'label': 'Groceries',\r\n                'variable': 'groceriesCost'\r\n            },\r\n            {\r\n                'label': 'Dining Out',\r\n                'variable': 'diningOutCost'\r\n            }\r\n        ];\r\n\r\n        //Constants for housing module\r\n        this.housing = [\r\n            {\r\n                'label': 'Monthly Rent',\r\n                'variable': 'monthlyRentCost'\r\n            },\r\n            {\r\n                'label': 'Home Insurance',\r\n                'variable': 'homeInsuranceCost'\r\n            },\r\n            {\r\n                'label': 'Utilities Bill',\r\n                'variable': 'homeInsuranceCost'\r\n            }\r\n        ];\r\n\r\n        //Constants for medical module\r\n        this.medical = [\r\n            {\r\n                'label': 'Health Insurance',\r\n                'variable': 'healthInsuranceCost'\r\n            },\r\n            {\r\n                'label': 'Dental Work',\r\n                'variable': 'dentalCost'\r\n            }\r\n        ];\r\n\r\n        //Constants for other module\r\n        this.other = [\r\n            {\r\n                'label': 'Cellphone',\r\n                'variable': 'cellPhoneCost'\r\n            },\r\n            {\r\n                'label': 'Recreation/Travel',\r\n                'variable': 'recreationCost'\r\n            },\r\n            {\r\n                'label': 'Gym Membership',\r\n                'variable': 'gymCost'\r\n            },\r\n            {\r\n                'label': 'Entertainment',\r\n                'variable': 'entertainmentCost'\r\n            },\r\n            {\r\n                'label': 'Clothing',\r\n                'variable': 'clothingCost'\r\n            }\r\n        ];\r\n\r\n        //Constants for savings module\r\n        this.savings = [\r\n            {\r\n                'label': 'Emergency Fund',\r\n                'variable': 'emergencyFundCost'\r\n            },\r\n            {\r\n                'label': 'Retirement',\r\n                'variable': 'retirementCost'\r\n            },\r\n            {\r\n                'label': 'Investments',\r\n                'variable': 'investmentsCost'\r\n            },\r\n            {\r\n                'label': 'College Savings',\r\n                'variable': 'collegeSavingsCost'\r\n            }\r\n        ];\r\n        \r\n        //Constants for taxes module\r\n        this.taxes = [\r\n            {\r\n                'label': 'Vehicle Taxes',\r\n                'variable': 'vehicleTaxCost'\r\n            },\r\n            {\r\n                'label': 'Housing Taxes',\r\n                'variable': 'housingTaxCost'\r\n            }\r\n        ];\r\n    }\r\n}","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {Food} from 'budget-breakdown-module/category-modules/food/food';\r\nimport {Other} from 'budget-breakdown-module/category-modules/other/other';\r\nimport {Housing} from 'budget-breakdown-module/category-modules/housing/housing';\r\nimport {Medical} from 'budget-breakdown-module/category-modules/medical/medical';\r\nimport {Taxes} from 'budget-breakdown-module/category-modules/taxes/taxes';\r\nimport {Savings} from 'budget-breakdown-module/category-modules/savings/savings';\r\nimport {ChildCare} from 'budget-breakdown-module/category-modules/child-care/child-care';\r\nimport {singleton} from 'aurelia-framework';\r\nimport {inject} from 'aurelia-framework';\r\nimport {Constants} from 'constants';\r\n\r\n@inject(Constants)\r\nexport class MasterBudget {\r\n    constructor(constants) {\r\n        this.constants = constants;\r\n        this.location = \"\";\r\n        this.totalMonthlyIncome = 8000;\r\n        this.numberChildren = 2;\r\n        this.numberAdults = 1;\r\n        this.stateLocation = 'Alabama';\r\n        this.food = new Food();\r\n        //TODO: Move this method call out of the this class\r\n        //this.food.cost = this.food.calculateFoodCost();\r\n\r\n        this.other = new Other(this.totalMonthlyIncome);\r\n        //TODO: Move this method call out of the this class\r\n        this.other.cost = this.other.getBasicOtherCost();\r\n\r\n        this.housing = new Housing();\r\n\r\n        this.medical = new Medical();\r\n\r\n        this.taxes = new Taxes();\r\n\r\n        this.savings = new Savings();\r\n\r\n        this.childCare = new ChildCare();\r\n\r\n        this.carYearlyUpkeepCost = 0;\r\n        this.carMonthlyOwnershipCost = 0;\r\n        this.sumOfAllCost = 0;\r\n        this.budgetCategories = ['Child Care', 'Food', 'Housing', 'Medical', 'Other', 'Savings', 'Taxes'];\r\n        this.percentageByCategory = [];\r\n\r\n        this.chart = null;\r\n    }\r\n}","export class Breakdown {\r\n    constructor() {}\r\n}","import {inject} from 'aurelia-framework';\r\nimport {ChartFactory} from '../utilities/chartFactory';\r\nimport {MasterBudget} from 'masterBudget';\r\n\r\n@inject(MasterBudget)\r\nexport class Chart {\r\n    constructor(masterBudget) {\r\n        this.chart = null;\r\n        this.masterBudget = masterBudget;\r\n    }\r\n\r\n    attached() {\r\n        console.log(this.masterBudget);\r\n        var tuples = ChartFactory.createChartTuple(this.masterBudget);\r\n        this.chart = ChartFactory.createChart('chartContainer', tuples);\r\n        this.masterBudget.chart = this.chart;\r\n    }\r\n\r\n    changeChart() {\r\n        var visible = this.chart.series[0].data[0].visible ? false : true;\r\n        this.chart.series[0].data[0].setVisible(visible);\r\n    }\r\n}","import { inject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\nimport { HttpClient, json } from 'aurelia-fetch-client';\r\nimport { ChartFactory } from '../utilities/chartFactory';\r\nimport { MasterBudget } from 'masterBudget';\r\n\r\n@inject(Router, HttpClient, MasterBudget)\r\nexport class Intro {\r\n\r\n    constructor(router, httpClient, masterBudget) {\r\n        this.router = router;\r\n        this.httpClient = httpClient;\r\n        this.masterBudget = masterBudget;\r\n        this.displayIncome = \"\";\r\n        this.getLocation();\r\n    }\r\n\r\n    //Retrieves the user's current location.\r\n    //TODO: Move this method out of intro.js\r\n    async getLocation() {\r\n        var self = this;\r\n\r\n        // check for Geolocation support\r\n        if (navigator.geolocation) {\r\n            console.log('Geolocation is supported!');\r\n        }\r\n        else {\r\n            console.log('Geolocation is not supported for this Browser/OS version yet.');\r\n        }\r\n\r\n        //Load users current location\r\n        window.onload = async function () {\r\n            var startPos;\r\n            navigator.geolocation.getCurrentPosition(async function (position) {\r\n                startPos = position;\r\n                let data = await self.httpClient.fetch('https://maps.googleapis.com/maps/api/geocode/json?latlng=' + startPos.coords.latitude + ',' + startPos.coords.longitude + '&key=AIzaSyBM9-m7L5132H_bDe3JUn9tlwblTARBRbQ');\r\n                let data2 = await data.json();\r\n                self.getCurrentLocation(data2);\r\n            });\r\n        };\r\n        await window.onload();\r\n\r\n        let childCare = await this.httpClient.fetch('/api/child-care/get.json');\r\n        let childCareData = await childCare.json();\r\n        //Get average child care cost by state\r\n        childCareData.costByState.forEach((stateData) => {\r\n            if (stateData[0] == self.masterBudget.stateLocation) {\r\n                self.masterBudget.childCare.cost = stateData[8];\r\n            }\r\n        })\r\n\r\n        let carCost = await this.httpClient.fetch('/api/car-costs/get.json');\r\n        let carCostData = await carCost.json();\r\n        //Get average car cost for repairs, insurance, and gasoline\r\n        carCostData.costByState.forEach((stateData) => {\r\n            if (stateData[0] === self.masterBudget.stateLocation) {\r\n                self.masterBudget.carYearlyUpkeepCost = stateData[4];\r\n            }\r\n        });\r\n        //Get average car cost for renting/buying\r\n        carCostData.costByAge.forEach((ageData) => {\r\n            if (ageData[0] >= self.masterBudget.currentUserAge) {\r\n                self.masterBudget.carMonthlyOwnershipCost = ageData[2];\r\n            }\r\n        });\r\n\r\n        //Get average home insurance cost\r\n        let homeInsurance = await this.httpClient.fetch('/api/home-insurance/get.json');\r\n        let homeInsuranceData = await homeInsurance.json();\r\n        homeInsuranceData.costByState.forEach((homeData) => {\r\n            if (homeData[0] == self.masterBudget.stateLocation) {\r\n                self.masterBudget.housing.cost = homeData[1];\r\n            }\r\n        });\r\n\r\n        //Get average health insurance cost\r\n        let healthInsurance = await this.httpClient.fetch('api/healthcare-insurance/get.json');\r\n        let healthInsuranceData = await healthInsurance.json();\r\n        healthInsuranceData.costByState.forEach((healthData) => {\r\n            if (healthData[0] == self.masterBudget.stateLocation) {\r\n                self.masterBudget.medical.cost = healthData[2];\r\n            }\r\n        });\r\n    }\r\n\r\n    //Get current county/location of user\r\n    getCurrentLocation(jsonData) {\r\n        var array = jsonData.results[4].formatted_address.split(\",\");\r\n        this.masterBudget.location = array[0];\r\n    }\r\n\r\n    //Routes the user to the results page after clicking budget button\r\n    route() {\r\n        this.router.navigate(\"#/results\");\r\n    }\r\n\r\n    test() {\r\n        console.log(this.masterBudget.numberChildren);\r\n    }\r\n\r\n    test1() {\r\n        console.log(this.masterBudget.numberAdults);\r\n    }\r\n\r\n    //Sanitize the income input to U.S. dollar format\r\n    sanitizeIncome() {\r\n        this.displayIncome = this.displayIncome.replace(/,/g, \"\");\r\n        this.displayIncome = this.displayIncome.replace(/\\$/g, \"\");\r\n\r\n        this.income = parseInt(this.displayIncome);\r\n\r\n        this.displayIncome = '$' + this.income.toLocaleString();\r\n    }\r\n\r\n    //Calculates the monthly income based on entered annual income\r\n    getMonthlyIncome() {\r\n        var income = parseInt(this.displayIncome);\r\n        this.masterBudget.totalMonthlyIncome = income / 12;\r\n    }\r\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n","export class Results {\r\n    constructor() {\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {MasterBudget} from 'masterBudget';\r\nimport {ChartFactory} from '../utilities/chartFactory';\r\n\r\n@inject(MasterBudget)\r\nexport class Banner {\r\n    constructor(masterBudget) {\r\n        this.income = null;\r\n        this.displayIncome = \"\";\r\n        this.masterBudget = masterBudget;\r\n    }\r\n\r\n    //Sanitize the income input to U.S. dollar format\r\n    sanitizeIncome() {\r\n        this.displayIncome = this.displayIncome.replace(/,/g, \"\");\r\n        this.displayIncome = this.displayIncome.replace(/\\$/g, \"\");\r\n\r\n        this.income = parseInt(this.displayIncome);\r\n\r\n        this.displayIncome = '$' + this.income.toLocaleString();\r\n    }\r\n\r\n    //Calculates the monthly income based on entered annual income\r\n    getMonthlyIncome() {\r\n        var income = parseInt(this.displayIncome);\r\n        this.masterBudget.totalMonthlyIncome = income / 12;\r\n        console.log(this.masterBudget.totalMonthlyIncome);\r\n        // var tuples = ChartFactory.createChartTuple(this.masterBudget);\r\n        // this.chart = ChartFactory.createChart('chartContainer', tuples);\r\n    }\r\n}","import * as HighCharts from \"highcharts\";\r\n\r\nexport class ChartFactory {\r\n  \r\n    static createChart(containerID, tuples) {\r\n        return Highcharts.chart(containerID, {\r\n            chart: {\r\n                plotBackgroundColor: null,\r\n                plotBorderWidth: null,\r\n                plotShadow: false,\r\n                type: 'pie'\r\n            },\r\n            title: {\r\n                text: 'Budget Calculator'\r\n            },\r\n            tooltip: {\r\n                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n            },\r\n            plotOptions: {\r\n                pie: {\r\n                    allowPointSelect: true,\r\n                    cursor: 'pointer',\r\n                    dataLabels: {\r\n                        enabled: false\r\n                    },\r\n                    showInLegend: true\r\n                }\r\n            },\r\n            series: [{\r\n                name: 'Percentage',\r\n                colorByPoint: true,\r\n                data: tuples\r\n            }]\r\n        });//end Highcharts.chart()\r\n    }\r\n\r\n    //Create tuples for the pie chart\r\n    static createChartTuple(masterBudget) {\r\n        var budgetArray = [];\r\n        masterBudget.sumOfAllCost = 0;\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[0], masterBudget.childCare.cost, masterBudget));\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[1], masterBudget.food.cost, masterBudget));\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[2], masterBudget.housing.cost, masterBudget));\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[3], masterBudget.medical.cost, masterBudget));\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[4], masterBudget.other.cost, masterBudget));\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[5], masterBudget.taxes.cost, masterBudget));\r\n        var cost = masterBudget.totalMonthlyIncome - masterBudget.sumOfAllCost;\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[6], cost, masterBudget));\r\n        return budgetArray;\r\n    }\r\n\r\n    static tupleHelper(name, data, masterBudget) {\r\n        var tempObject = {};\r\n        tempObject.name = name;\r\n        tempObject.y = data;\r\n        console.log(data);\r\n        masterBudget.sumOfAllCost += data;\r\n        console.log(masterBudget.sumOfAllCost);\r\n        return tempObject;\r\n    }\r\n}","export class MoneyValueConverter {\r\n    toView(value) {\r\n        // this.displayIncome = this.displayIncome.replace(/,/g, \"\");\r\n        // this.displayIncome = this.displayIncome.replace(/\\$/g, \"\");\r\n\r\n        // this.income = parseInt(this.displayIncome);\r\n\r\n        // this.displayIncome = '$' + this.income.toLocaleString();\r\n        // return value.toLocaleString();\r\n        value = value.replace(/,/g, \"\");\r\n        return value.toLocaleString();\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Constants} from 'constants';\r\n\r\n@inject(Constants)\r\nexport class ChildCare {\r\n    constructor(constants) {\r\n        this.constants = constants;\r\n        this.cost = 0;\r\n        this.privateSchoolCost = 0;\r\n        this.daycareCost = 0;\r\n    }\r\n\r\n    //Calculates the cost of the advanced child care cost\r\n    calculateAdvancedChildCareCost(privateSchoolCost) {\r\n        return this.privateSchoolCost + this.daycareCost;\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Constants} from '../../../constants';\r\n\r\n@inject(Constants)\r\nexport class Food {\r\n    constructor(constants) {\r\n        this.includeInBudget = true;\r\n        this.groceries = 0;\r\n        this.constants = constants;\r\n        this.cost = 0;\r\n        this.groceriesCost = 0;\r\n        this.diningOutCost = 0;\r\n    }\r\n\r\n    //Calculate the basic food cost for the household\r\n    calculateFoodCost(numberChildren, numberAdults) {\r\n        return numberChildren * this.constants.foodCostPerChild + numberAdults * this.constants.foodCostPerAdult;\r\n    }\r\n\r\n    //Calculate detailed food cost\r\n    calculateAdvancedFoodCost() {\r\n        return this.grocerciesCost + this.diningOutCost;\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Constants} from 'constants';\r\n\r\n@inject(Constants)\r\nexport class Housing {\r\n    constructor(constants){\r\n        this.includeInBudget = true;\r\n        this.constants = constants;\r\n        this.cost = 0;\r\n        this.monthlyRentCost = 0;\r\n        this.homeInsuranceCost = 0;\r\n        this.utilitiesCost = 0;\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Constants} from 'constants';\r\n\r\n@inject(Constants)\r\nexport class Medical {\r\n    constructor(constants) {\r\n        this.includeInBudget = true;\r\n        this.constants = constants;\r\n        this.cost = 0;\r\n        this.healthInsuranceCost = 0;\r\n        this.dentalCost = 0;\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Constants} from 'constants';\r\n\r\n@inject(Constants)\r\nexport class Other {\r\n    constructor(constants) {\r\n        this.includeInBudget = true;\r\n        this.constants = constants\r\n        this.cost = 0;\r\n        this.cellPhoneCost = 0;\r\n    }\r\n\r\n    //Calculates the basic cost of the other category\r\n    getBasicOtherCost() {\r\n        return this.totalMonthlyIncome * Constants.miscellaneousCost;\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Constants} from 'constants';\r\n\r\n@inject(Constants)\r\nexport class Taxes {\r\n    constructor(constants) {\r\n        this.includeInBudget = true;\r\n        this.constants = constants;\r\n        this.cost = 0;\r\n        this.vehicleTaxCost = 0;\r\n        this.housingTaxCost = 0;\r\n    }\r\n\r\n    //Calculates cost of vehicle and housing tax entered by the user.\r\n    calculateAdvancedTaxCost() {\r\n        return this.vehicleTaxCost + this.housingTaxCost;\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Constants} from 'constants';\r\n\r\n@inject(Constants)\r\nexport class Savings {\r\n\r\n    constructor(constants) {\r\n        this.cost = 0;\r\n        this.constants = constants;\r\n        this.emergencyFundCost = 0;\r\n        this.retirementCost = 0;\r\n        this.investmentsCost = 0;\r\n        this.collegeSavingsCost = 0;\r\n    }\r\n\r\n    //Adds emergency fund to total savings cost\r\n    calculateEmergencyFundCost(emergencyFund) {\r\n        this.cost += emergencyFund;\r\n    }\r\n\r\n    //Add retirement savings to savings cost\r\n    calculateRetirementCost(retirementCost) {\r\n        this.cost += retirementCost;\r\n    }\r\n\r\n    //Add investment cost to savings cost\r\n    calcualteInvestmentsCost(investmentCost) {\r\n        this.cost += investmentCost;\r\n    }\r\n\r\n    //Add college cost to savings cost\r\n    calculateCollegeSavingsCost(collegeCost) {\r\n        this.cost += collegeCost;\r\n    }\r\n}"],"sourceRoot":".."}
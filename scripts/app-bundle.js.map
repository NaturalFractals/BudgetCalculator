{"version":3,"sources":["src/app.js","src/constants.js","src/environment.js","src/main.js","src/masterBudget.js","src/auto-budget/auto-budget.js","src/budget-breakdown-module/breakdown.js","src/chart/chart.js","src/chart/donut-chart.js","src/chart/gauge-chart.js","src/five-year/card-info-one.js","src/five-year/card-info-three.js","src/five-year/card-info-two.js","src/five-year/donut-details.js","src/five-year/five-year.js","src/goals/goal.js","src/goals/goals.js","src/intro/intro.js","src/resources/index.js","src/results/results.js","src/utilities/chartFactory.js","src/utilities/currency.js","src/utilities/percent.js","src/results-banner-module/banner.js","src/budget-breakdown-module/category-modules/child-care/child-care.js","src/budget-breakdown-module/category-modules/food/food.js","src/budget-breakdown-module/category-modules/housing/housing.js","src/budget-breakdown-module/category-modules/medical/medical.js","src/budget-breakdown-module/category-modules/other/other.js","src/budget-breakdown-module/category-modules/savings/savings.js","src/budget-breakdown-module/category-modules/taxes/taxes.js","src/budget-breakdown-module/category-modules/transportation/transportation.js"],"names":["App","configureRouter","config","router","title","map","route","moduleId","name","nav","Constants","foodCostPerChild","foodCostPerAdult","miscellaneousCost","autoBudgetFields","childCare","food","housing","housingUtilities","housingRent","housingLease","medical","transportation","transportationCar","other","savings","taxes","taxesFiling","debug","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","MasterBudget","constants","location","annualIncome","totalMonthlyIncome","numberChildren","numberAdults","stateLocation","calculateFoodCost","sumOfAllCost","budgetCategories","percentageByCategory","chart","sumAllCost","parseInt","cost","AutoBudget","routeResults","navigate","Breakdown","Chart","masterBudget","eventAggregator","subscribe","changeChart","moduleName","changedCost","update","value","attached","tuples","createChartTuple","createPieChart","dataIndex","getDataIndex","visible","series","data","setVisible","newPoint","y","DonutChart","years","currentYear","createDonutChart","drawChartForYear","year","newSeries","colorByPoint","publish","donutTupleHelper","oldYear","newYear","tempObject","GaugeChart","neutralArray","createNeutralArray","cutArray","reduceArray","createHalfDonutChart","i","length","push","label","allowDrop","ev","preventDefault","drag","dataTransfer","setData","target","innerText","console","log","removeDrop","set","drop","getData","id","indexOf","indexToRemove","splice","indexToRemove2","autoBudget","percentReduction","tempMasterBudget","count","recreationCost","gymCost","clothingCost","diningOutCost","calculateAdvancedOtherCost","userAdjustedBudget","self","forEach","item","field","c","class","lable","variable","chart2","budgetArray","totalObject","remainingObject","Math","max","CardInfoOne","CardInfoThree","CardInfoTwo","DonutDetails","currentExpense","currentExpenseYearCost","currentCategory","changeNavigationTab","category","pow","changedYear","calculateInflationData","date","Date","getFullYear","privateSchoolCost","privateSchoolInflation","daycareCost","daycareInflation","groceriesCost","groceriesInflation","diningOutInflation","recreationInflation","gymInflation","entertainmentCost","entertainmentInflation","cellPhoneCost","cellPhoneInflation","FiveYear","Goal","month","monthNum","currYear","currMonth","getMonth","monthsBetween","monthlyCost","Goals","goalsList","months","selectedName","selectedMonth","selectedYear","selectedCost","monthlySavings","addGoal","goal","removeGoal","index","Intro","httpClient","getLocation","userInput","navigator","geolocation","window","onload","getCurrentPosition","position","startPos","fetch","coords","latitude","longitude","json","data2","getCurrentLocation","householdCost","houseHoldCostData","costByCounty","houseObject","County","childCareData","costByState","stateData","carCost","carCostData","carYearlyUpkeepCost","costByAge","ageData","currentUserAge","carMonthlyOwnershipCost","homeInsurance","homeInsuranceData","homeData","healthInsurance","healthInsuranceData","healthData","test","clickAction","test2","jsonData","array","results","formatted_address","split","sanitizeIncome","replace","income","toLocaleString","getMonthlyIncome","stateTax","stateTaxData","state","grossIncome","Results","routeGoals","routeFiveYearPlan","routeAutoBudget","HighCharts","ChartFactory","containerID","type","Highcharts","plotBackgroundColor","plotBorderWidth","plotShadow","colors","text","align","verticalAlign","tooltip","pointFormat","plotOptions","pie","dataLabels","enabled","distance","style","fontWeight","color","startAngle","endAngle","center","size","innerSize","options3d","alpha","subtitle","depth","allowPointSelect","cursor","showInLegend","tupleHelper","CurrencyValueConverter","toView","locale","props","currency","currencyDisplay","displayBy","PercentValueConverter","divided","round","divider","Number","isNaN","Banner","displayIncome","ChildCare","includeInBudget","costPercentage","schoolExpenseCost","schoolExpenseInflation","childSupportCost","childSupportInflation","collapsed","isMonthly","toggle","calculateAdvancedChildCareCost","scale","toggleHorizon","Food","groceries","workdayCost","calculateAdvancedFoodCost","Housing","monthlyCableCost","monthlyRentCost","monthlyRentInflation","homeInsuranceCost","homeInsuranceInflation","homeMaintenanceCost","homeMaintenanceInflation","homeTelephoneCost","homeTelephoneInflation","utilitiesCost","calculateAdvancedCost","calculateAutoBudgetCost","Medical","healthInsuranceCost","healthInflation","medicationCost","dentalCost","otherMedicalCost","calculateAdvancedMedical","Other","studentLoanCost","getBasicOtherCost","Savings","emergencyFundCost","retirementCost","investmentsCost","collegeSavingsCost","omitted","calculateAdvancedSavings","Taxes","stateTaxCost","housingTaxCost","otherTaxCost","calculateAdvancedTaxCost","vehicleTaxCost","Transportation","paymentCost","repairCost","insuranceCost","gasCost","publicTransportationCost","publicTransportationInflation","hasCar","calculateAdvancedTransportationCost"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject} from 'aurelia-framework';\r\nimport 'bootstrap';\r\nimport 'bootstrap-material-design';\r\nimport 'jquery-ui-dist';\r\nimport $ from 'jquery';\r\n\r\nexport class App {\r\n  constructor() {\r\n  }\r\n\r\n  configureRouter(config, router) {\r\n    this.router = router;\r\n    config.title = \"Budget Expectancy Calculator\";\r\n    config.map([\r\n      {\r\n        route: ['', 'intro'], moduleId: 'intro/intro',\r\n        name: 'intro', title: 'Introduction', nav: true\r\n      },\r\n      {\r\n        route: 'results', moduleId: 'results/results',\r\n        name: 'results', title: 'Personal Budget', nav: true\r\n      },\r\n      {\r\n        route: 'goals', moduleId: 'goals/goals',\r\n        name: 'goals', title: 'Goals', nav: true\r\n      },\r\n      {\r\n        route: 'five-year', moduleId: 'five-year/five-year',\r\n        name: 'five-year', title: 'Five Year Plan', nav: true\r\n      },\r\n      {\r\n        route: 'auto-budget', moduleId: 'auto-budget/auto-budget',\r\n        name: 'auto-budget', title: 'Auto Budget', nav: true\r\n      }\r\n    ]);\r\n  }\r\n}\r\n","export class Constants {\r\n    constructor() {\r\n        //Constant for children food cost\r\n        this.foodCostPerChild = 155.7;\r\n        //Constant for adult food cost\r\n        this.foodCostPerAdult = 158.7;\r\n        //Constant for miscellaneous cost\r\n        this.miscellaneousCost = 0.05;\r\n\r\n        //Field for the autobudget class\r\n        this.autoBudgetFields = [\r\n            {\r\n                'label': 'Tuition',\r\n                'class': 'savings',\r\n                'variable': 'collegeSavingsCost'\r\n            },\r\n            {\r\n                'label': 'Cable',\r\n                'class': 'housing',\r\n                'variable': 'monthlyCableCost'\r\n            },\r\n            {\r\n                'label': 'Telephone',\r\n                'class': 'housing',\r\n                'variable': 'homeTelephoneCost'\r\n            },\r\n            {\r\n                'label': 'Eating Out',\r\n                'class': 'food',\r\n                'variable': 'diningOutCost'\r\n            },\r\n            {\r\n                'label': 'Workday Coffee/Lunch',\r\n                'class': 'food',\r\n                'variable': 'workdayCost'\r\n            },\r\n            {\r\n                'label': 'Recreation/Travel',\r\n                'class': 'other',\r\n                'variable': 'recreationCost'\r\n            },\r\n            {\r\n                'label': 'Vacation',\r\n                'class': 'other',\r\n                'variable': 'recreationCost'\r\n            },\r\n            {\r\n                'label': 'Cell Phone Cost',\r\n                'class': 'other',\r\n                'variable': 'cellPhoneCost'\r\n            },\r\n            {\r\n                'label': 'Clothing',\r\n                'class': 'other',\r\n                'variable': 'clothingCost'\r\n            },\r\n            {\r\n                'label': 'Savings',\r\n                'class': 'savings',\r\n                'variable': 'emergencyFundCost'\r\n            },\r\n            {\r\n                'label': 'Gym Membership',\r\n                'class': 'other',\r\n                'variable': 'gymCost'\r\n            }\r\n        ]\r\n\r\n        //Constants for child care module\r\n        this.childCare = [\r\n            {\r\n                'label': 'School Tuiton',\r\n                'variable': 'privateSchoolCost'\r\n            },\r\n            {\r\n                'label': 'Daycare',\r\n                'variable': 'daycareCost'\r\n            },\r\n            {\r\n                'label': 'School Expenses',\r\n                'variable': 'schoolExpenseCost'\r\n            },\r\n            {\r\n                'label': 'Child Support',\r\n                'variable': 'childSupportCost'\r\n            }\r\n        ];\r\n\r\n        //Constants for food module\r\n        this.food = [\r\n            {\r\n                'label': 'Groceries',\r\n                'variable': 'groceriesCost'\r\n            },\r\n            {\r\n                'label': 'Dining Out',\r\n                'variable': 'diningOutCost'\r\n            },\r\n            {\r\n                'label': 'Workday Coffee/Lunch',\r\n                'variable': 'workdayCost'\r\n            }\r\n        ];\r\n\r\n        //Constants for housing module\r\n        this.housing = [\r\n            {\r\n                'label': 'Cable',\r\n                'variable': 'monthlyCableCost'\r\n            },\r\n            {\r\n                'label': 'Utilities',\r\n                'variable': 'homeInsuranceCost'\r\n            },\r\n            {\r\n                'label': 'Telephone',\r\n                'variable': 'homeTelephoneCost'\r\n            },\r\n            {\r\n                'label': 'Home Maintenance',\r\n                'variable': 'homeMaintenanceCost'\r\n            }\r\n        ];\r\n\r\n        //Constants for housing utilities\r\n        this.housingUtilities = [\r\n            {\r\n                'label': 'Gas',\r\n                'variable': 'utilityGasCost'\r\n            },\r\n            {\r\n                'label': 'Water',\r\n                'variable': 'utilityWaterCost'\r\n            },\r\n            {\r\n                'label': 'Electricity',\r\n                'variable': 'utilityElectricCost'\r\n            }\r\n        ];\r\n\r\n        //Constants for housing owners\r\n        this.housingRent = [\r\n            {\r\n                'label': 'Mortgage Payment',\r\n                'variable': 'mortgageCost'\r\n            },\r\n            {\r\n                'label': 'Home Insurance',\r\n                'variable': 'homeInsuranceCost'\r\n            },\r\n            {\r\n                'label': 'Home Improvements',\r\n                'variable': 'homeImprovementCost'\r\n            }\r\n        ];\r\n\r\n        //Constants for housing rent\r\n        this.housingLease = [\r\n            {\r\n                'label': 'Rent',\r\n                'variable': 'rentCost'\r\n            },\r\n            {\r\n                'label': 'Renters Insurance',\r\n                'variable': 'rentInsuranceCost'\r\n            }\r\n        ];\r\n\r\n        //Constants for medical module\r\n        this.medical = [\r\n            {\r\n                'label': 'Health Insurance',\r\n                'variable': 'healthInsuranceCost'\r\n            },\r\n            {\r\n                'label': 'Medication Cost',\r\n                'variable': 'medicationCost'\r\n            },\r\n            {\r\n                'label': 'Dental Work',\r\n                'variable': 'dentalCost'\r\n            },\r\n            {\r\n                'label': 'Other Medical Cost',\r\n                'variable': 'otherMedicalCost'\r\n            }\r\n        ];\r\n\r\n        //Constants for Transportation\r\n        this.transportation = [\r\n            {\r\n                'label': 'Public Transportation Cost',\r\n                'variable': 'publicTransportationCost'\r\n            },\r\n            {\r\n                'label': 'Payment',\r\n                'variable': 'paymentCost'\r\n            },\r\n            {\r\n                'label': 'Repairs',\r\n                'variable': 'repairCost'\r\n            },\r\n            {\r\n                'label': 'Insurance',\r\n                'variable': 'insuranceCost'\r\n            },\r\n            {\r\n                'label': 'Gas',\r\n                'variable': 'gasCost'\r\n            }\r\n        ];\r\n\r\n        //Constants for Car Transportation\r\n        this.transportationCar = [\r\n            {\r\n                'label': 'How Many Cars',\r\n                'variable': 'numberOfCars'\r\n            },\r\n            {\r\n                'label': 'Payment',\r\n                'variable': 'carPaymentCost'\r\n            },\r\n            {\r\n                'label': 'Repairs',\r\n                'variable': 'carRepairCost'\r\n            },\r\n            {\r\n                'label': 'Insurance',\r\n                'variable': 'insuranceCost'\r\n            },\r\n            {\r\n                'label': 'Gasoline',\r\n                'variable': 'gasolineCost'\r\n            }\r\n        ];\r\n\r\n        //Constants for other module\r\n        this.other = [\r\n            {\r\n                'label': 'Cellphone',\r\n                'variable': 'cellPhoneCost'\r\n            },\r\n            {\r\n                'label': 'Recreation/Travel',\r\n                'variable': 'recreationCost'\r\n            },\r\n            {\r\n                'label': 'Gym Membership',\r\n                'variable': 'gymCost'\r\n            },\r\n            {\r\n                'label': 'Entertainment',\r\n                'variable': 'entertainmentCost'\r\n            },\r\n            {\r\n                'label': 'Clothing',\r\n                'variable': 'clothingCost'\r\n            },\r\n            {\r\n                'label': 'Student Loan Payments',\r\n                'variable': 'studentLoanCost'\r\n            }\r\n        ];\r\n\r\n        //Constants for savings module\r\n        this.savings = [\r\n            {\r\n                'label': 'Emergency Fund',\r\n                'variable': 'emergencyFundCost'\r\n            },\r\n            {\r\n                'label': 'Retirement',\r\n                'variable': 'retirementCost'\r\n            },\r\n            {\r\n                'label': 'Investments',\r\n                'variable': 'investmentsCost'\r\n            },\r\n            {\r\n                'label': 'College Savings',\r\n                'variable': 'collegeSavingsCost'\r\n            }\r\n        ];\r\n        \r\n        //Constants for taxes module\r\n        this.taxes = [\r\n            {\r\n                'label': 'State Taxes',\r\n                'variable': 'stateTaxCost'\r\n            },\r\n            {\r\n                'label': 'Other Taxes',\r\n                'variable': 'otherTaxCost'\r\n            }\r\n        ];\r\n\r\n        //Constants for filing status tax\r\n        this.taxesFiling = [\r\n            {\r\n                'label': 'Property Tax',\r\n                'variable': 'propertyTaxCost'\r\n            },\r\n            {\r\n                'label': 'Vehicle Tax',\r\n                'variable': 'vehicleTaxCost'\r\n            },\r\n            {\r\n                'label': 'Income Tax',\r\n                'variable': 'incomeTaxCost'\r\n            }\r\n        ];\r\n    }\r\n}","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import { Food } from 'budget-breakdown-module/category-modules/food/food';\r\nimport { Other } from 'budget-breakdown-module/category-modules/other/other';\r\nimport { Housing } from 'budget-breakdown-module/category-modules/housing/housing';\r\nimport { Medical } from 'budget-breakdown-module/category-modules/medical/medical';\r\nimport { Taxes } from 'budget-breakdown-module/category-modules/taxes/taxes';\r\nimport { Savings } from 'budget-breakdown-module/category-modules/savings/savings';\r\nimport { ChildCare } from 'budget-breakdown-module/category-modules/child-care/child-care';\r\nimport { Transportation } from 'budget-breakdown-module/category-modules/transportation/transportation';\r\nimport { singleton } from 'aurelia-framework';\r\nimport { inject } from 'aurelia-framework';\r\nimport { Constants } from 'constants';\r\n\r\n@inject(Constants, Food, Other, Housing, Medical, Taxes, Savings, ChildCare, Transportation)\r\nexport class MasterBudget {\r\n    constructor(constants, food, other, housing, medical, taxes, savings, childCare, transportation) {\r\n        this.constants = constants;\r\n        this.location = \"\";\r\n        this.annualIncome;\r\n        this.totalMonthlyIncome = 2000;\r\n        this.numberChildren = 1;\r\n        this.numberAdults = 2;\r\n        this.stateLocation = 'Alabama';\r\n\r\n        this.food = food;\r\n        this.food.calculateFoodCost(this.numberChildren, this.numberAdults);\r\n        this.other = other;\r\n        this.housing = housing;\r\n        this.medical = medical;\r\n        this.taxes = taxes;\r\n        this.savings = savings;\r\n        this.childCare = childCare;\r\n        this.transportation = transportation;\r\n\r\n        this.sumOfAllCost = 0;\r\n        this.budgetCategories = ['Child Care', 'Food', 'Housing', 'Medical', 'Other', 'Savings', 'Taxes', 'Transportation'];\r\n        this.percentageByCategory = [];\r\n\r\n        this.chart = null;\r\n    }\r\n\r\n    //Sum cost for all categories\r\n    sumAllCost() {\r\n        this.sumOfAllCost = parseInt(this.food.cost) + parseInt(this.savings.cost) + parseInt(this.other.cost) + parseInt(this.housing.cost) + parseInt(this.medical.cost) + parseInt(this.taxes.cost) + parseInt(this.childCare.cost) + parseInt(this.transportation.cost);\r\n    }\r\n}","import { inject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\n\r\n@inject(Router)\r\nexport class AutoBudget {\r\n    constructor(router) {\r\n        this.router = router;\r\n    }\r\n\r\n    routeResults() {\r\n        this.router.navigate(\"#/results\");\r\n    }\r\n}","export class Breakdown {\r\n    constructor() {}\r\n}","import {inject} from 'aurelia-framework';\r\nimport {ChartFactory} from '../utilities/chartFactory';\r\nimport {MasterBudget} from 'masterBudget';\r\nimport {EventAggregator} from 'aurelia-event-aggregator'\r\n\r\n@inject(MasterBudget, EventAggregator)\r\nexport class Chart {\r\n\r\n    constructor(masterBudget, eventAggregator) {\r\n        this.chart = null;\r\n        this.masterBudget = masterBudget;\r\n        \r\n        eventAggregator.subscribe('toggle element', moduleName => {this.changeChart(moduleName)} );\r\n        eventAggregator.subscribe('update', update => {this.changedCost(update.name, update.value)} );\r\n    }\r\n\r\n    attached() {\r\n        var tuples = ChartFactory.createChartTuple(this.masterBudget);\r\n        this.chart = ChartFactory.createPieChart('chartContainer', tuples);\r\n        this.masterBudget.chart = this.chart;\r\n    }\r\n\r\n    changeChart(moduleName) {\r\n        var dataIndex = this.getDataIndex(moduleName);\r\n        var visible = this.chart.series[0].data[dataIndex].visible ? false : true;\r\n        this.chart.series[0].data[dataIndex].setVisible(visible);\r\n\r\n        // var savingsDiff = 0;\r\n        // switch (moduleName) {\r\n        //     case \"Child Care\":  savingsDiff = this.masterBudget.childCare.cost; break;\r\n        //     case \"Food\":        savingsDiff = this.masterBudget.food.cost; break;\r\n        //     case \"Housing\":     savingsDiff = this.masterBudget.housing.cost; break;\r\n        //     case \"Medical\":     savingsDiff = this.masterBudget.medical.cost; break;\r\n        //     case \"Other\":       savingsDiff = this.masterBudget.other.cost; break;\r\n        //     case \"Savings\":     savingsDiff = this.masterBudget.savings.cost; break;\r\n        //     case \"Taxes\":       savingsDiff = this.masterBudget.taxes.cost; break;\r\n        //     default:            savingsDiff = this.masterBudget.transportation.cost; break;\r\n        // }\r\n\r\n        // console.log(this.masterBudget.food.cost);\r\n        // visible ? this.masterBudget.savings.omitted -= savingsDiff : this.masterBudget.savings.omitted += savingsDiff;\r\n        // this.masterBudget.savings.calculateAdvancedSavings();\r\n        // console.log(this.masterBudget.savings.cost);\r\n    }\r\n\r\n    getDataIndex(moduleName) {\r\n        switch (moduleName) {\r\n            case \"Child Care\":  return 0;\r\n            case \"Food\":        return 1;\r\n            case \"Housing\":     return 2;\r\n            case \"Medical\":     return 3;\r\n            case \"Other\":       return 4;\r\n            case \"Savings\":     return 5;\r\n            case \"Taxes\":      return 6;\r\n            default:            return 7;\r\n        }\r\n    }\r\n\r\n    changedCost(moduleName, value) {\r\n        var newPoint = {name: moduleName, y: value};\r\n        this.chart.series[0].data[this.getDataIndex(moduleName)].update(newPoint, true, true);\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {ChartFactory} from '../utilities/chartFactory';\r\nimport {MasterBudget} from 'masterBudget';\r\nimport {EventAggregator} from 'aurelia-event-aggregator'\r\n\r\n@inject(MasterBudget, EventAggregator)\r\nexport class DonutChart {\r\n\r\n    constructor(masterBudget, eventAggregator) {\r\n        this.chart = null;\r\n        this.masterBudget = masterBudget;\r\n        this.years = [2017, 2018, 2019, 2020, 2021];\r\n        this.currentYear = 2017;\r\n        this.eventAggregator = eventAggregator;\r\n    }\r\n\r\n    attached() {\r\n        var tuples = ChartFactory.createChartTuple(this.masterBudget);\r\n        this.chart = ChartFactory.createDonutChart('goalsChartContainer', tuples);\r\n    }\r\n\r\n    drawChartForYear(year) {\r\n        this.currentYear = year.year;\r\n\r\n        var newSeries = {\r\n                name: 'Percentage',\r\n                colorByPoint: true,\r\n                data: [{name: \"Child Care\", y: parseInt(this.masterBudget.childCare.cost + (this.currentYear - 2017) * 1.0558) },\r\n                       {name: \"Food\", y:  parseInt(this.masterBudget.food.cost + (this.currentYear - 2017) * 1.0295)},\r\n                       {name: \"Housing\", y:  parseInt(this.masterBudget.housing.cost + (this.currentYear - 2017) * 1.0269)},\r\n                       {name: \"Medical\", y:  parseInt(this.masterBudget.medical.cost + (this.currentYear - 2017) * 1.0379)},\r\n                       {name: \"Other\", y:  parseInt(this.masterBudget.other.cost + (this.currentYear - 2017) * 1)},\r\n                       {name: \"Savings\", y:  parseInt(this.masterBudget.savings.cost + (this.currentYear - 2017) * 1)},\r\n                       {name: \"Taxes\", y:  parseInt(this.masterBudget.taxes.cost + (this.currentYear - 2017) * 1)},\r\n                       {name: \"Transportation\", y:  parseInt(this.masterBudget.transportation.cost + (this.currentYear - 2017) * 1.0329)}]\r\n        };\r\n\r\n        this.chart.series[0].update(newSeries, true, true);\r\n        this.eventAggregator.publish(\"change year\", this.currentYear);\r\n    }\r\n\r\n    donutTupleHelper(oldYear, newYear, moduleName) {\r\n        var tempObject = {};\r\n        tempObject.name = name;\r\n        tempObject.y = data;\r\n        masterBudget.sumOfAllCost += parseInt(data);\r\n        return tempObject;\r\n    }\r\n\r\n\r\n\r\n    getDataIndex(moduleName) {\r\n        switch (moduleName) {\r\n            case \"Child Care\":  return 0;\r\n            case \"Food\":        return 1;\r\n            case \"Housing\":     return 2;\r\n            case \"Medical\":     return 3;\r\n            case \"Other\":       return 4;\r\n            case \"Savings\":     return 5;\r\n            case \"Taxes\":       return 6;\r\n            default:            return 7;\r\n        }\r\n    }\r\n\r\n    changedCost(moduleName, value) {\r\n        var newPoint = {name: moduleName, y: value};\r\n        this.chart.series[0].data[this.getDataIndex(moduleName)].update(newPoint, true, true);\r\n    }\r\n}","import { inject } from 'aurelia-framework';\r\nimport { ChartFactory } from '../utilities/chartFactory';\r\nimport { MasterBudget } from 'masterBudget';\r\nimport { Constants } from 'constants';\r\n\r\n@inject(MasterBudget, Constants)\r\nexport class GaugeChart {\r\n    constructor(masterBudget, constants) {\r\n        this.masterBudget = masterBudget;\r\n        this.constants = constants;\r\n        this.neutralArray = [];\r\n        this.createNeutralArray();\r\n        this.cutArray = [];\r\n        this.reduceArray = [];\r\n    }\r\n\r\n    attached() {\r\n        this.masterBudget.sumAllCost();\r\n        var tuples = this.createChartTuple(this.masterBudget);\r\n        ChartFactory.createHalfDonutChart('gaugeChartContainer', tuples, \"Before\");\r\n        ChartFactory.createHalfDonutChart('gaugeChartContainer2', tuples, \"After\");\r\n    }\r\n\r\n    //Uses constants to create array for responsive drag and drop\r\n    createNeutralArray() {\r\n        for (var i = 0; i < this.constants.autoBudgetFields.length; i++) {\r\n            this.neutralArray.push(this.constants.autoBudgetFields[i].label);\r\n        }\r\n    }\r\n\r\n    //Allow drop of element into container\r\n    allowDrop(ev) {\r\n        ev.preventDefault();\r\n    }\r\n\r\n    //Handles the drag even from the drag and drop\r\n    drag(ev) {\r\n        ev.dataTransfer.setData(\"tonberry\", ev.target.innerText);\r\n        console.log(ev);\r\n        return true;\r\n    }\r\n\r\n    //Handles removing the drag and drop\r\n    removeDrop(ev) {\r\n        ev.dataTransfer.set\r\n    }\r\n\r\n    //Handles the drop event into a container\r\n    drop(ev) {\r\n        ev.preventDefault();\r\n        let data = ev.dataTransfer.getData(\"tonberry\");\r\n        if (ev.target.id === 'reduce-container') {\r\n            if (this.reduceArray.indexOf(data) < 0)\r\n                this.reduceArray.push(data);\r\n            let indexToRemove = this.neutralArray.indexOf(data);\r\n            if (indexToRemove > -1)\r\n                this.neutralArray.splice(indexToRemove, 1);\r\n            let indexToRemove2 = this.cutArray.indexOf(data);\r\n            if (indexToRemove2 > -1)\r\n                this.cutArray.splice(indexToRemove, 1);\r\n        } else if (ev.target.id === 'cut-container') {\r\n            if (this.cutArray.indexOf(data) < 0)\r\n                this.cutArray.push(data);\r\n            let indexToRemove = this.neutralArray.indexOf(data);\r\n            if (indexToRemove > -1)\r\n                this.neutralArray.splice(indexToRemove, 1);\r\n            let indexToRemove2 = this.reduceArray.indexOf(data);\r\n            if (indexToRemove2 > -1)\r\n                this.reduceArray.splice(indexToRemove, 1);\r\n        } else {\r\n            if (this.neutralArray.indexOf(data) < 0)\r\n                this.neutralArray.push(data);\r\n            let indexToRemove = this.reduceArray.indexOf(data);\r\n            if (indexToRemove > -1)\r\n                this.reduceArray.splice(indexToRemove, 1);\r\n            let indexToRemove2 = this.cutArray.indexOf(data);\r\n            if (indexToRemove2 > -1)\r\n                this.cutArray.splice(indexToRemove2, 1);\r\n        }\r\n    }\r\n\r\n    //Calculates the auto budget once the auto-budget Button is clicked\r\n    autoBudget() {\r\n        if(this.neutralArray.indexOf('Gym Membership') > -1) {\r\n            this.neutralArray.splice(this.neutralArray.indexOf('Gym Membership'), 1);\r\n            this.reduceArray.push('Gym Membership');\r\n        }\r\n        if(this.neutralArray.indexOf('Clothing') > -1) {\r\n            this.neutralArray.splice(this.neutralArray.indexOf('Clothing'), 1);\r\n            this.reduceArray.push('Clothing');\r\n        }\r\n        if(this.neutralArray.indexOf('Eating Out') > -1) {\r\n            this.neutralArray.splice(this.neutralArray.indexOf('Eating Out'), 1);\r\n            this.reduceArray.push('Eating Out');\r\n        }\r\n        if(this.neutralArray.indexOf('Recreation/Travel') > -1) {\r\n            this.neutralArray.splice(this.neutralArray.indexOf('Recreation/Travel'), 1);\r\n            this.reduceArray.push('Recreation/Travel');\r\n        }\r\n        if(this.neutralArray.indexOf('Vacation') > -1) {\r\n            this.neutralArray.splice(this.neutralArray.indexOf('Vacation'), 1);\r\n            this.cutArray.push('Vacation');\r\n        }\r\n        if(this.neutralArray.indexOf('Tuition') > -1) {\r\n            this.neutralArray.splice(this.neutralArray.indexOf('Vacation'), 1);\r\n            this.reduceArray.push('Tuition');\r\n        }\r\n        if(this.neutralArray.indexOf('Workday Coffee/Lunch') > -1) {\r\n            this.neutralArray.splice(this.neutralArray.indexOf('Workday Coffee/Lunch'), 1);\r\n            this.reduceArray.push('Workday Coffee/Lunch');\r\n        }\r\n        let cost = this.masterBudget.sumOfAllCost;\r\n        let percentReduction = 0.95;\r\n        var tempMasterBudget = this.masterBudget;\r\n        let count = 0;\r\n        while (tempMasterBudget.sumOfAllCost > tempMasterBudget.totalMonthlyIncome) {\r\n            tempMasterBudget.other.recreationCost = parseInt(tempMasterBudget.other.recreationCost) * percentReduction;\r\n            tempMasterBudget.other.gymCost = parseInt(tempMasterBudget.other.gymCost) * percentReduction;\r\n            tempMasterBudget.other.clothingCost = parseInt(tempMasterBudget.other.clothingCost) * percentReduction;\r\n            tempMasterBudget.housing.diningOutCost = parseInt(tempMasterBudget.housing.diningOutCost) * percentReduction;\r\n            tempMasterBudget.other.calculateAdvancedOtherCost();\r\n            tempMasterBudget.sumAllCost();\r\n            console.log(\"Removed other cost\");\r\n            if (count > 20) break;\r\n            count++;\r\n        }\r\n        let tuples = this.createChartTuple(tempMasterBudget);\r\n        console.log(tuples);\r\n        ChartFactory.createHalfDonutChart('gaugeChartContainer2', tuples, \"After\");\r\n    }\r\n\r\n    //Adjust the budget based on input from the drag and drop or user\r\n    async userAdjustedBudget() {\r\n        var self = this;\r\n        var cost = this.masterBudget.sumOfAllCost;\r\n        var percentReduction = 0.9;\r\n        var tempMasterBudget = this.masterBudget;\r\n        await this.cutArray.forEach((item) => {\r\n            self.constants.autoBudgetFields.forEach((field) => {\r\n                if (field.label === item) {\r\n                    let c = tempMasterBudget[field.class];\r\n                    c['cost'] = 0;\r\n                }\r\n            });\r\n        });\r\n        console.log(this.masterBudget.savings);\r\n        await this.reduceArray.forEach((item) => {\r\n            self.constants.autoBudgetFields.forEach((field) => {\r\n                if (field.lable === item) {\r\n                    let c = tempMasterBudget[field.class];\r\n                    c[field.variable] *= percentReduction;\r\n                }\r\n            })\r\n        });\r\n        tempMasterBudget.sumAllCost();\r\n        let tuples = await this.createChartTuple(tempMasterBudget);\r\n        this.chart2 = await ChartFactory.createHalfDonutChart('gaugeChartContainer2', tuples, 'After');\r\n    }\r\n\r\n    //Create tuples for the pie chart\r\n    createChartTuple(masterBudget) {\r\n        var budgetArray = [];\r\n        var totalObject = [];\r\n        totalObject.push('Income');\r\n        totalObject.push(masterBudget.totalMonthlyIncome);\r\n        var remainingObject = [];\r\n        remainingObject.push('Budget');\r\n        remainingObject.push(Math.max(0, (masterBudget.sumOfAllCost - masterBudget.totalMonthlyIncome)));\r\n        budgetArray.push(totalObject);\r\n        budgetArray.push(remainingObject);\r\n        return budgetArray;\r\n    }\r\n}","export class CardInfoOne {\r\n    constructor() {\r\n        \r\n    }\r\n}","export class CardInfoThree {\r\n    constructor() {\r\n        \r\n    }\r\n}","export class CardInfoTwo {\r\n    constructor() {\r\n        \r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {MasterBudget} from 'masterBudget';\r\nimport {EventAggregator} from 'aurelia-event-aggregator'\r\nimport {ChartFactory} from '../utilities/chartFactory';\r\n\r\n@inject(MasterBudget, EventAggregator)\r\nexport class DonutDetails {\r\n    constructor(masterBudget, eventAggregator) {\r\n        this.masterBudget = masterBudget;\r\n        this.currentYear = 2017;\r\n        this.currentExpense = this.masterBudget.childCare.cost;\r\n        this.currentExpenseYearCost = 324;\r\n        this.currentCategory = 'Child Care';\r\n        eventAggregator.subscribe(\"change year\", year => {this.currentYear = year;\r\n                                                          this.changeNavigationTab(this.currentCategory)});\r\n    }\r\n\r\n    //Changes the information of the currrent details based on navigation click\r\n    changeNavigationTab(category) {\r\n        switch(category) {\r\n            case this.masterBudget.budgetCategories[0]:\r\n                this.currentExpense = parseInt(this.masterBudget.childCare.cost * Math.pow(1.0558, this.currentYear - 2017));\r\n                this.currentCategory = category;\r\n                break;\r\n            case this.masterBudget.budgetCategories[1]:\r\n                this.currentExpense = parseInt(this.masterBudget.food.cost * Math.pow(1.0295, this.currentYear - 2017))\r\n                this.currentCategory = category;\r\n                break;\r\n            case this.masterBudget.budgetCategories[2]:\r\n                this.currentExpense = parseInt(this.masterBudget.housing.cost * Math.pow(1.0269, this.currentYear - 2017));\r\n                this.currentCategory = category;\r\n                break;\r\n            case this.masterBudget.budgetCategories[3]:\r\n                this.currentExpense = parseInt(this.masterBudget.medical.cost * Math.pow(1.0379, this.currentYear - 2017));\r\n                this.currentCategory = category;\r\n                break;\r\n            case this.masterBudget.budgetCategories[4]:\r\n                this.currentExpense = parseInt(this.masterBudget.other.cost * Math.pow(1, this.currentYear - 2017));\r\n                this.currentCategory = category;\r\n                break;\r\n            case this.masterBudget.budgetCategories[5]:\r\n                this.currentExpense = parseInt(this.masterBudget.savings.cost * Math.pow(1, this.currentYear - 2017));\r\n                this.currentCategory = category;\r\n                break;\r\n            case this.masterBudget.budgetCategories[6]:\r\n                this.currentExpense = parseInt(this.masterBudget.taxes.cost * Math.pow(1, this.currentYear - 2017));\r\n                this.currentCategory = category;\r\n                break;\r\n            case this.masterBudget.budgetCategories[7]:\r\n                this.currentExpense = parseInt(this.masterBudget.transportation.cost * Math.pow(1.0329, this.currentYear - 2017));\r\n                this.currentCategory = category;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    changedYear(year) {\r\n        this.currentYear = year;\r\n    }\r\n\r\n    calculateInflationData() {\r\n        var date = new Date();\r\n        var year = date.getFullYear();\r\n        var tempMasterBudget = this.masterBudget;\r\n        for(var i = 0; i < currentYear - year; i++) {\r\n            tempMasterBudget.childCare.privateSchoolCost *= this.masterBudget.childCare.privateSchoolInflation;\r\n            tempMasterBudget.childCare.daycareCost *= this.masterBudget.childCare.daycareInflation;\r\n            tempMasterBudget.food.groceriesCost *= this.masterBudget.food.groceriesInflation;\r\n            tempMasterBudget.food.diningOutCost *= this.masterBudget.food.diningOutInflation;\r\n            tempMasterBudget.other.recreationCost  *= this.masterBudget.other.recreationInflation;\r\n            tempMasterBudget.other.gymCost *= this.masterBudget.other.gymInflation;\r\n            tempMasterBudget.other.entertainmentCost *= this.masterBudget.entertainmentInflation;\r\n            tempMasterBudget.other.cellPhoneCost *= this.masterBudget.cellPhoneInflation;\r\n        }\r\n    }  \r\n}","import { inject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\n\r\n@inject(Router)\r\nexport class FiveYear {\r\n    constructor(router) {\r\n        this.router = router;\r\n    }\r\n\r\n    routeResults() {\r\n        this.router.navigate(\"#/results\");\r\n    }\r\n}","export class Goal {\r\n    constructor(name, cost, month, year) {\r\n        this.name = name;\r\n        this.cost = cost;\r\n        this.month = month;\r\n        this.year = year;\r\n\r\n        var monthNum = null;\r\n        switch (this.month) {\r\n            case \"January\":     monthNum = 0; break;\r\n            case \"February\":    monthNum = 1; break;\r\n            case \"March\":       monthNum = 2; break;\r\n            case \"April\":       monthNum = 3; break;\r\n            case \"May\":         monthNum = 4; break;\r\n            case \"June\":        monthNum = 5; break;\r\n            case \"July\":        monthNum = 6; break;\r\n            case \"August\":      monthNum = 7; break;\r\n            case \"September\":   monthNum = 8; break;\r\n            case \"October\":     monthNum = 9; break;\r\n            case \"November\":    monthNum = 10; break;\r\n            case \"December\":    monthNum = 11; break;\r\n        }\r\n\r\n        var currYear = new Date().getFullYear();\r\n        var currMonth = new Date().getMonth();\r\n\r\n        var monthsBetween = null;\r\n        if (currYear === this.year)\r\n            monthsBetween = monthNum - currMonth;\r\n        else\r\n            monthsBetween = (11 - currMonth) + (12 * (this.year - currYear - 1)) + monthNum;\r\n\r\n        this.monthlyCost = parseInt(this.cost / monthsBetween);\r\n    }\r\n}","import {Goal} from 'goals/goal';\r\nimport {inject} from 'aurelia-framework';\r\nimport {MasterBudget} from 'masterBudget';\r\nimport {Router} from 'aurelia-router';\r\n\r\n@inject(MasterBudget, Router)\r\nexport class Goals {\r\n    constructor(masterBudget, router) {\r\n        this.masterBudget = masterBudget;\r\n        this.router = router;\r\n\r\n        this.goalsList = [];\r\n        this.months = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ];\r\n        \r\n        this.selectedName = null;\r\n        this.selectedMonth = \"January\"\r\n        this.selectedYear = 2018;\r\n        this.selectedCost= null;\r\n\r\n        this.monthlySavings = 0;\r\n    }\r\n\r\n    addGoal() {\r\n        var goal = new Goal(this.selectedName, parseInt(this.selectedCost), this.selectedMonth, parseInt(this.selectedYear));\r\n        this.monthlySavings += goal.monthlyCost;\r\n        this.goalsList.push(goal);\r\n        console.log(this.monthlySavings);\r\n\r\n        this.selectedName = null;\r\n        this.selectedMonth = \"January\"\r\n        this.selectedYear = 2018;\r\n        this.selectedCost= null;\r\n        console.log(this.goalsList);\r\n    }\r\n\r\n    removeGoal(index) {\r\n        this.monthlySavings -= this.goalsList[index].monthlyCost;\r\n        this.goalsList.splice(index, 1)\r\n    }\r\n\r\n    routeResults() {\r\n        this.router.navigate('#/results');\r\n    }\r\n}","import { inject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\nimport { HttpClient, json } from 'aurelia-fetch-client';\r\nimport { ChartFactory } from '../utilities/chartFactory';\r\nimport { MasterBudget } from 'masterBudget';\r\n\r\n@inject(Router, HttpClient, MasterBudget)\r\nexport class Intro {\r\n\r\n    constructor(router, httpClient, masterBudget) {\r\n        this.router = router;\r\n        this.httpClient = httpClient;\r\n        this.masterBudget = masterBudget;\r\n        this.getLocation(false);\r\n    }\r\n\r\n    //Retrieves the user's current location.\r\n    //TODO: Move this method out of intro.js\r\n    async getLocation(userInput) {\r\n        var self = this;\r\n\r\n        // check for Geolocation support\r\n        if (navigator.geolocation) {\r\n            console.log('Geolocation is supported!');\r\n        }\r\n        else {\r\n            console.log('Geolocation is not supported for this Browser/OS version yet.');\r\n        }\r\n\r\n        //Load users current location\r\n        window.onload = async function () {\r\n            var startPos;\r\n            navigator.geolocation.getCurrentPosition(async function (position) {\r\n                startPos = position;\r\n                let data = await self.httpClient.fetch('https://maps.googleapis.com/maps/api/geocode/json?latlng=' + startPos.coords.latitude + ',' + startPos.coords.longitude + '&key=AIzaSyBM9-m7L5132H_bDe3JUn9tlwblTARBRbQ');\r\n                let data2 = await data.json();\r\n                self.getCurrentLocation(data2, userInput);\r\n                console.log(self.masterBudget.location);\r\n                let householdCost = await self.httpClient.fetch('api/household-cost-county/get.json');\r\n                let houseHoldCostData = await householdCost.json();\r\n                houseHoldCostData.costByCounty.forEach((houseObject) => {\r\n                    if (houseObject.County == self.masterBudget.location)\r\n                        self.masterBudget.housing.cost += houseObject[self.masterBudget.numberAdults]\r\n                    console.log(houseObject);\r\n                })\r\n            });\r\n        };\r\n        await window.onload();\r\n\r\n        let childCare = await this.httpClient.fetch('/api/child-care/get.json');\r\n        let childCareData = await childCare.json();\r\n        //Get average child care cost by state\r\n        childCareData.costByState.forEach((stateData) => {\r\n            if (stateData[0] == self.masterBudget.stateLocation) {\r\n                self.masterBudget.childCare.cost = stateData[8];\r\n            }\r\n        })\r\n\r\n        let carCost = await this.httpClient.fetch('/api/car-costs/get.json');\r\n        let carCostData = await carCost.json();\r\n        //Get average car cost for repairs, insurance, and gasoline\r\n        carCostData.costByState.forEach((stateData) => {\r\n            if (stateData[0] === self.masterBudget.stateLocation) {\r\n                self.masterBudget.transportation.carYearlyUpkeepCost = stateData[4];\r\n            }\r\n        });\r\n        //Get average car cost for renting/buying\r\n        carCostData.costByAge.forEach((ageData) => {\r\n            if (ageData[0] >= self.masterBudget.currentUserAge) {\r\n                self.masterBudget.transportation.carMonthlyOwnershipCost = ageData[2];\r\n            }\r\n        });\r\n        // self.masterBudget.transportation.calculateAdvancedTransportationCost();\r\n        self.masterBudget.transportation.cost = parseInt(parseInt(self.masterBudget.transportation.carYearlyUpkeepCost) / 12) + parseInt(self.masterBudget.transportation.carMonthlyOwnershipCost);\r\n\r\n        //Get average home insurance cost\r\n        let homeInsurance = await this.httpClient.fetch('/api/home-insurance/get.json');\r\n        let homeInsuranceData = await homeInsurance.json();\r\n        homeInsuranceData.costByState.forEach((homeData) => {\r\n            if (homeData[0] == self.masterBudget.stateLocation) {\r\n                self.masterBudget.housing.cost = homeData[1];\r\n            }\r\n        });\r\n\r\n        //Get average health insurance cost\r\n        let healthInsurance = await this.httpClient.fetch('api/healthcare-insurance/get.json');\r\n        let healthInsuranceData = await healthInsurance.json();\r\n        healthInsuranceData.costByState.forEach((healthData) => {\r\n            if (healthData[0] == self.masterBudget.stateLocation) {\r\n                self.masterBudget.medical.cost = parseInt(healthData[2] / 12);\r\n            }\r\n        });\r\n    }\r\n\r\n    test(clickAction) {\r\n        this.masterBudget.numberAdults = clickAction + 1;\r\n        console.log(this.masterBudget.numberAdults);\r\n    }\r\n\r\n    test2(clickAction) {\r\n        this.masterBudget.numberChildren = clickAction;\r\n        console.log(this.masterBudget.numberChildren);\r\n        this.masterBudget.food.calculateFoodCost(this.masterBudget.numberChildren, this.masterBudget.numberAdults);\r\n        console.log(this.masterBudget.food.cost);\r\n    }\r\n\r\n    //Get current county/location of user\r\n    getCurrentLocation(jsonData, userInput) {\r\n        var array = jsonData.results[4].formatted_address.split(\",\");\r\n        if(!userInput)\r\n            this.masterBudget.location = array[0];\r\n    }\r\n\r\n    //Routes the user to the results page after clicking budget button\r\n    route() {\r\n        if(this.masterBudget.numberChildren == 0)\r\n            this.masterBudget.childCare.cost = 0;\r\n        this.router.navigate(\"#/results\");\r\n    }\r\n\r\n    //Sanitize the income input to U.S. dollar format\r\n    sanitizeIncome() {\r\n        this.masterBudget.annualIncome = this.masterBudget.annualIncome.replace(/,/g, \"\");\r\n        this.masterBudget.annualIncome = this.masterBudget.annualIncome.replace(/\\$/g, \"\");\r\n\r\n        this.income = parseInt(this.masterBudget.annualIncome);\r\n\r\n        this.masterBudget.annualIncome = '$' + this.income.toLocaleString();\r\n    }\r\n\r\n    //Calculates the monthly income based on entered annual income\r\n    async getMonthlyIncome() {\r\n        var self = this;\r\n        //Get average state taxes based on income\r\n        let stateTax = await this.httpClient.fetch('api/state-taxes/get.json');\r\n        let stateTaxData = await stateTax.json();\r\n        stateTaxData.taxes.forEach((state) => {\r\n            if (self.masterBudget.stateLocation == state[0] && self.income < state[2]) {\r\n                self.masterBudget.taxes.cost = self.income * state[1];\r\n                self.masterBudget.taxes.grossIncome = self.income - self.masterBudget.taxes.cost;\r\n                self.masterBudget.totalMonthlyIncome = parseInt(this.income) / 12;\r\n                self.masterBudget.savings.cost = this.income * 0.15;\r\n            }\r\n        });\r\n    }\r\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n","import { inject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\n\r\n@inject(Router)\r\nexport class Results {\r\n    constructor(router) {\r\n        this.router = router;\r\n    }\r\n\r\n    //Routes the user to the goals page\r\n    routeGoals() {\r\n        this.router.navigate(\"#/goals\");\r\n    }\r\n\r\n    //Routes the user to the five year plan page\r\n    routeFiveYearPlan() {\r\n        this.router.navigate(\"#/five-year\")\r\n    }\r\n\r\n    //Routes the user to the auto budget page\r\n    routeAutoBudget() {\r\n        this.router.navigate(\"#/auto-budget\")\r\n    }\r\n}","import * as HighCharts from \"highcharts\";\r\n\r\nexport class ChartFactory {\r\n\r\n    //Create half donut chart\r\n    static createHalfDonutChart(containerID, tuples, type) {\r\n        return Highcharts.chart(containerID, {\r\n            chart: {\r\n                plotBackgroundColor: null,\r\n                plotBorderWidth: 0,\r\n                plotShadow: false\r\n            },\r\n            colors: ['#89A54E', '#AA4643', '#89A54E', '#80699B', '#3D96AE', '#DB843D', '#92A8CD', '#A47D7C', '#B5CA92'],\r\n            title: {\r\n                text: type,\r\n                align: 'center',\r\n                verticalAlign: 'middle',\r\n                y: -100\r\n            },\r\n            tooltip: {\r\n                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n            },\r\n            plotOptions: {\r\n                pie: {\r\n                    dataLabels: {\r\n                        enabled: true,\r\n                        distance: -50,\r\n                        style: {\r\n                            fontWeight: 'bold',\r\n                            color: 'white'\r\n                        }\r\n                    },\r\n                    startAngle: -90,\r\n                    endAngle: 90,\r\n                    center: ['50%', '75%'],\r\n                    colors: ['#89A54E', '#AA4643', '#89A54E', '#80699B', '#3D96AE', '#DB843D', '#92A8CD', '#A47D7C', '#B5CA92']\r\n                },\r\n            },\r\n            series: [{\r\n                type: 'pie',\r\n                size: '100%',\r\n                name: 'Budget',\r\n                innerSize: '50%',\r\n                data: tuples,\r\n                colors: ['#89A54E', '#AA4643', '#89A54E', '#80699B', '#3D96AE', '#DB843D', '#92A8CD', '#A47D7C', '#B5CA92'],\r\n                colorByPoint: true\r\n            }],\r\n        });\r\n    }\r\n\r\n    //Creates a donut chart \r\n    static createDonutChart(containerID, tuples) {\r\n        return Highcharts.chart(containerID, {\r\n            chart: {\r\n                type: 'pie',\r\n                options3d: {\r\n                    enabled: true,\r\n                    alpha: 45\r\n                }\r\n            },\r\n            title: {\r\n                text: 'Yearly Budget'\r\n            },\r\n            subtitle: {\r\n                text: '3D donut in Highcharts'\r\n            },\r\n            plotOptions: {\r\n                pie: {\r\n                    innerSize: 100,\r\n                    depth: 45\r\n                }\r\n            },\r\n            series: [{\r\n                name: 'Delivered amount',\r\n                data: tuples\r\n            }]\r\n        })\r\n    }\r\n\r\n    //Creates a pie chart\r\n    static createPieChart(containerID, tuples) {\r\n        return Highcharts.chart(containerID, {\r\n            chart: {\r\n                plotBackgroundColor: null,\r\n                plotBorderWidth: null,\r\n                plotShadow: false,\r\n                type: 'pie'\r\n            },\r\n            title: {\r\n                text: 'Budget Calculator'\r\n            },\r\n            tooltip: {\r\n                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n            },\r\n            plotOptions: {\r\n                pie: {\r\n                    allowPointSelect: true,\r\n                    cursor: 'pointer',\r\n                    dataLabels: {\r\n                        enabled: false\r\n                    },\r\n                    showInLegend: true\r\n                }\r\n            },\r\n            series: [{\r\n                name: 'Percentage',\r\n                colorByPoint: true,\r\n                data: tuples\r\n            }]\r\n        });//end Highcharts.chart()\r\n    }\r\n\r\n    //Create tuples for the pie chart\r\n    static createChartTuple(masterBudget) {\r\n        var budgetArray = [];\r\n        masterBudget.sumOfAllCost = 0;\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[0], masterBudget.childCare.cost, masterBudget));\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[1], masterBudget.food.cost, masterBudget));\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[2], masterBudget.housing.cost, masterBudget));\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[3], masterBudget.medical.cost, masterBudget));\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[4], masterBudget.other.cost, masterBudget));\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[5], masterBudget.savings.cost, masterBudget));\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[6], masterBudget.taxes.cost, masterBudget));\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[7], masterBudget.transportation.cost, masterBudget));\r\n\r\n        return budgetArray;\r\n    }\r\n\r\n    //Helper method for creating tuples to be used in the charts\r\n    static tupleHelper(name, data, masterBudget) {\r\n        var tempObject = {};\r\n        tempObject.name = name;\r\n        tempObject.y = data;\r\n        masterBudget.sumOfAllCost += parseInt(data);\r\n        return tempObject;\r\n    }\r\n}","export class CurrencyValueConverter {\r\n    toView(value, config = {}) {\r\n        let locale = config.locale || 'en';\r\n        let props = {\r\n            style: 'currency',\r\n            currency: config.currency || 'USD',\r\n            currencyDisplay: config.displayBy || 'symbol'\r\n        };\r\n\r\n        return value.toLocaleString(locale, props);\r\n    }\r\n}","export class PercentValueConverter {\r\n    toView(value, divided = 100, round = false) {\r\n      if (!value) {\r\n        return value;\r\n      }\r\n      \r\n      let divider = (typeof value === 'string') ? Number(value) : value;\r\n      \r\n      if (typeof divider !== 'number' || isNaN(divider)) {\r\n        return value;\r\n      }\r\n      \r\n      return round ? Math.round((divider / divided) * 100 ) : (divider / divided) * 100;\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {MasterBudget} from 'masterBudget';\r\nimport {ChartFactory} from '../utilities/chartFactory';\r\n\r\n@inject(MasterBudget)\r\nexport class Banner {\r\n    constructor(masterBudget) {\r\n        this.income = null;\r\n        this.displayIncome = \"\";\r\n        this.masterBudget = masterBudget;\r\n    }\r\n\r\n    //Sanitize the income input to U.S. dollar format\r\n    sanitizeIncome() {\r\n        this.displayIncome = this.displayIncome.replace(/,/g, \"\");\r\n        this.displayIncome = this.displayIncome.replace(/\\$/g, \"\");\r\n\r\n        this.income = parseInt(this.displayIncome);\r\n\r\n        this.displayIncome = '$' + this.income.toLocaleString();\r\n    }\r\n\r\n    //Calculates the monthly income based on entered annual income\r\n    getMonthlyIncome() {\r\n        var income = parseInt(this.displayIncome);\r\n        this.masterBudget.totalMonthlyIncome = income / 12;\r\n    }\r\n}","import {inject, singleton} from 'aurelia-framework';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {Constants} from 'constants';\r\n\r\n@inject(Constants, EventAggregator)\r\n@singleton()\r\nexport class ChildCare {\r\n    constructor(constants, eventAggregator) {\r\n        this.includeInBudget = true;\r\n        this.constants = constants;\r\n        this.cost = 0;\r\n        this.costPercentage = 0;\r\n        this.privateSchoolCost = 0;\r\n        this.privateSchoolInflation = 1.0558;\r\n        this.daycareCost = 0;\r\n        this.daycareInflation = 1.0558;\r\n        this.schoolExpenseCost = 0;\r\n        this.schoolExpenseInflation = 1.0589;\r\n        this.childSupportCost = 0;\r\n        this.childSupportInflation = 1;\r\n        this.eventAggregator = eventAggregator;\r\n        this.collapsed = true;\r\n        this.isMonthly = false;\r\n    }\r\n\r\n    //Toggles the arrow of the collapse menu\r\n    toggle() {\r\n        this.collapsed = !this.collapsed\r\n    }\r\n\r\n    //Calculates the cost of the advanced child care cost\r\n    calculateAdvancedChildCareCost() {\r\n        var scale = this.isMonthly ? 1 : 1 / 12;   // divide by 12 if the user input yearly numbers \r\n        this.cost = parseInt( ( parseInt(this.privateSchoolCost) + parseInt(this.daycareCost) ) * scale);\r\n\r\n        this.eventAggregator.publish('update', {name: 'Child Care', value: this.cost});\r\n    }\r\n\r\n    toggleHorizon() {\r\n        this.isMonthly = !this.isMonthly;\r\n        this.calculateAdvancedChildCareCost();\r\n    }\r\n}","import {inject, singleton} from 'aurelia-framework';\r\nimport {Constants} from '../../../constants';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\n\r\n@inject(Constants, EventAggregator)\r\n@singleton()\r\nexport class Food {\r\n    constructor(constants, eventAggregator) {\r\n        this.includeInBudget = true;\r\n        this.groceries = 0;\r\n        this.constants = constants;\r\n        this.cost = 0;\r\n        this.costPercentage = 0;\r\n        this.groceriesCost = 0;\r\n        this.groceriesInflation = 1.0295;\r\n        this.diningOutCost = 0;\r\n        this.diningOutInflation = 1.0304;\r\n        this.workdayCost = 0;\r\n        this.collapsed = true;\r\n        this.eventAggregator = eventAggregator;\r\n        this.isMonthly = true;\r\n    }\r\n\r\n    //Toggles the arrow of the collapse menu\r\n    toggle() {\r\n        this.collapsed = !this.collapsed;\r\n    }\r\n\r\n    //Calculate the basic food cost for the household\r\n    calculateFoodCost(numberChildren, numberAdults) {\r\n        this.numberChildren = numberChildren;\r\n        this.numberAdults = numberAdults;\r\n        this.cost =  parseInt(numberChildren) * parseInt(this.constants.foodCostPerChild) + parseInt(numberAdults) * parseInt(this.constants.foodCostPerAdult);\r\n    }\r\n\r\n    //Calculate detailed food cost\r\n    calculateAdvancedFoodCost() {\r\n        var scale = this.isMonthly ? 1 : 1 / 12;   // divide by 12 if the user input yearly numbers \r\n        this.cost = parseInt( ( parseInt(this.groceriesCost) + parseInt(this.diningOutCost) ) * scale);\r\n        // this.cost = this.cost.toFixed(2);\r\n\r\n        this.eventAggregator.publish('update', {name: 'Food', value: this.cost});\r\n    }\r\n\r\n    toggleHorizon() {\r\n        this.isMonthly = !this.isMonthly;\r\n        this.calculateAdvancedFoodCost();\r\n    }\r\n}","import { inject, singleton } from 'aurelia-framework';\r\nimport { Constants } from 'constants';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\n\r\n@inject(Constants, EventAggregator)\r\n@singleton()\r\nexport class Housing {\r\n    constructor(constants, eventAggregator) {\r\n        this.includeInBudget = true;\r\n        this.constants = constants;\r\n        this.cost = 0;\r\n        this.costPercentage = 0;\r\n        this.monthlyCableCost = 0;\r\n        this.monthlyRentCost = 0;\r\n        this.monthlyRentInflation = 1.0269;\r\n        this.homeInsuranceCost = 0;\r\n        this.homeInsuranceInflation = 1.0170;\r\n        this.homeMaintenanceCost = 0;\r\n        this.homeMaintenanceInflation  = 1.0229;\r\n        this.homeTelephoneCost = 0;\r\n        this.homeTelephoneInflation = 0.9915;\r\n        this.utilitiesCost = 0;\r\n        this.collapsed = true;\r\n        this.eventAggregator = eventAggregator;\r\n        this.isMonthly = true;\r\n    }\r\n\r\n    //Toggles the arrow of the collapse menu\r\n    toggle() {\r\n        this.collapsed = !this.collapsed\r\n    }\r\n\r\n    //Calculates advanced cost for housing\r\n    calculateAdvancedCost() {\r\n        var scale = this.isMonthly ? 1 : 1 / 12;   // divide by 12 if the user input yearly numbers \r\n        this.cost = parseInt( ( parseInt(this.monthlyRentCost) + parseInt(this.homeInsuranceCost) + parseInt(this.utilitiesCost)) * scale);\r\n        // this.cost = this.cost.toFixed(2);\r\n\r\n        this.eventAggregator.publish('update', {name: 'Housing', value: this.cost});\r\n    }\r\n\r\n    //Calculate cost for autoBudget\r\n    calculateAutoBudgetCost() {\r\n        this.cost = parseInt( parseInt(this.monthlyRentCost) + parseInt(this.homeInsuranceCost) + parseInt(this.utilitiesCost));\r\n    }\r\n\r\n    toggleHorizon() {\r\n        this.isMonthly = !this.isMonthly;\r\n        this.calculateAdvancedCost();\r\n    }\r\n}","import {inject, singleton} from 'aurelia-framework';\r\nimport {Constants} from 'constants';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\n\r\n@inject(Constants, EventAggregator)\r\n@singleton()\r\nexport class Medical {\r\n    constructor(constants, eventAggregator) {\r\n        this.includeInBudget = true;\r\n        this.constants = constants;\r\n        this.cost = 0;\r\n        this.costPercentage = 0;\r\n        this.healthInsuranceCost = 0;\r\n        this.healthInflation = 1.0379;\r\n        this.medicationCost = 0;\r\n        this.dentalCost = 0;\r\n        this.otherMedicalCost = 0;\r\n        this.collapsed = true;\r\n        this.eventAggregator = eventAggregator;\r\n        this.isMonthly = true;\r\n    }\r\n\r\n    //Toggles the arrow of the collapse menu\r\n    toggle() {\r\n        this.collapsed = !this.collapsed\r\n    }\r\n\r\n    //Calculates the advanced cost of the medical category\r\n    calculateAdvancedMedical() {\r\n        var scale = this.isMonthly ? 1 : 1 / 12;   // divide by 12 if the user input yearly numbers \r\n        this.cost = parseInt( ( parseInt(this.dentalCost) + parseInt(this.healthInsuranceCost) + parseInt(this.medicationCost)  + parseInt(this.otherMedicalCost) ) * scale);\r\n        // this.cost = this.cost.toFixed(2);\r\n\r\n        this.eventAggregator.publish('update', {name: 'Medical', value: this.cost});\r\n    }\r\n\r\n    toggleHorizon() {\r\n        this.isMonthly = !this.isMonthly;\r\n        this.calculateAdvancedMedical();\r\n    }\r\n}","import {inject, singleton} from 'aurelia-framework';\r\nimport {Constants} from 'constants';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\n\r\n@inject(Constants, EventAggregator)\r\n@singleton()\r\nexport class Other {\r\n    constructor(constants, eventAggregator) {\r\n        this.includeInBudget = true;\r\n        this.constants = constants\r\n        this.cost = 0;\r\n        this.costPercentage = 0;\r\n        this.cellPhoneCost = 0;\r\n        this.recreationCost = 0;\r\n        this.gymCost = 0;\r\n        this.entertainmentCost = 0;\r\n        this.clothingCost = 0;\r\n        this.studentLoanCost = 0;\r\n        this.collapsed = true;\r\n        this.eventAggregator = eventAggregator;\r\n        this.isMonthly = true;\r\n    }\r\n\r\n    //Toggles the arrow of the collapse menu\r\n    toggle() {\r\n        this.collapsed = !this.collapsed\r\n    }\r\n\r\n    //Calculates the basic cost of the other category\r\n    getBasicOtherCost() {\r\n        this.cost = this.totalMonthlyIncome * this.constants.miscellaneousCost;\r\n    }\r\n\r\n    //Calculates the advanced cost of other category\r\n    calculateAdvancedOtherCost() {\r\n        var scale = this.isMonthly ? 1 : 1 / 12;   // divide by 12 if the user input yearly numbers\r\n        this.cost = parseInt( ( parseInt(this.cellPhoneCost) + parseInt(this.recreationCost) + parseInt(this.gymCost) + parseInt(this.entertainmentCost) + parseInt(this.clothingCost) ) * scale);\r\n        // this.cost = this.cost.toFixed(2);\r\n        this.eventAggregator.publish('update', {name: 'Other', value: this.cost});\r\n    }\r\n\r\n    toggleHorizon() {\r\n        this.isMonthly = !this.isMonthly;\r\n        this.calculateAdvancedOtherCost();\r\n    }\r\n}","import {inject, singleton} from 'aurelia-framework';\r\nimport {Constants} from 'constants';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\n\r\n@inject(Constants, EventAggregator)\r\n@singleton()\r\nexport class Savings {\r\n\r\n    constructor(constants, eventAggregator) {\r\n        this.includeInBudget = true;\r\n        this.cost = 0;\r\n        this.costPercentage = 0;\r\n        this.constants = constants;\r\n        this.emergencyFundCost = 0;\r\n        this.retirementCost = 0;\r\n        this.investmentsCost = 0;\r\n        this.collegeSavingsCost = 0;\r\n        this.collapsed = true;\r\n        this.eventAggregator = eventAggregator;\r\n        this.isMonthly = false;\r\n        this.omitted = 0;\r\n    }\r\n\r\n    //Toggles the arrow of the collapse menu\r\n    toggle() {\r\n        this.collapsed = !this.collapsed\r\n    }\r\n\r\n    //Calculates cost of savings\r\n    calculateAdvancedSavings() {\r\n        var scale = this.isMonthly ? 1 : 1 / 12;   // divide by 12 if the user input yearly numbers\r\n        this.cost = parseInt( ( parseInt(this.emergencyFundCost) + parseInt(this.retirementCost) + parseInt(this.investmentsCost) + parseInt(this.collegeSavingsCost) + parseInt(this.omitted)) * scale);\r\n        // this.cost = this.cost.toFixed(2);\r\n\r\n        this.eventAggregator.publish('update', {name: 'Savings', value: this.cost});\r\n    }\r\n\r\n    toggleHorizon() {\r\n        this.isMonthly = !this.isMonthly;\r\n        this.calculateAdvancedSavings();\r\n    }\r\n}","import {inject, singleton} from 'aurelia-framework';\r\nimport {Constants} from 'constants';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\n\r\n@inject(Constants, EventAggregator)\r\n@singleton()\r\nexport class Taxes {\r\n    constructor(constants, eventAggregator) {\r\n        this.includeInBudget = true;\r\n        this.constants = constants;\r\n        this.cost = 0;\r\n        this.grossIncome = 0;\r\n        this.costPercentage = 0;\r\n        this.stateTaxCost = 0;\r\n        this.housingTaxCost = 0;\r\n        this.otherTaxCost = 0;\r\n        this.collapsed = true;\r\n        this.eventAggregator = eventAggregator;\r\n        this.isMonthly = false;\r\n    }\r\n\r\n    //Toggles the arrow of the collapse menu\r\n    toggle() {\r\n        this.collapsed = !this.collapsed\r\n    }\r\n\r\n    //Calculates cost of vehicle and housing tax entered by the user.\r\n    calculateAdvancedTaxCost() {\r\n        var scale = this.isMonthly ? 1 : 1 / 12;   // divide by 12 if the user input yearly numbers\r\n        this.cost =  parseInt( ( parseInt(this.vehicleTaxCost) + parseInt(this.housingTaxCost) ) * scale);\r\n        // this.cost = this.cost.toFixed(2);\r\n\r\n        this.eventAggregator.publish('update', {name: 'Taxes', value: this.cost});\r\n    }\r\n\r\n    toggleHorizon() {\r\n        this.isMonthly = !this.isMonthly;\r\n    }\r\n}","import {inject, singleton} from 'aurelia-framework';\r\nimport {Constants} from 'constants';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\n\r\n@inject(Constants, EventAggregator)\r\n@singleton()\r\nexport class Transportation {\r\n    constructor(constants, eventAggregator) {\r\n        this.includeInBudget = true;\r\n        this.constants = constants;\r\n        this.cost = 0;\r\n        this.costPercentage = 0;\r\n        this.paymentCost = 0;\r\n        this.repairCost = 0;\r\n        this.insuranceCost = 0;\r\n        this.gasCost = 0;\r\n        this.collapsed = true;\r\n        this.publicTransportationCost = 0;\r\n        this.publicTransportationInflation = 1.0329;\r\n        this.carYearlyUpkeepCost = 0;\r\n        this.carMonthlyOwnershipCost = 0;\r\n        this.hasCar = 0;\r\n        this.eventAggregator = eventAggregator;\r\n        this.isMonthly = true;\r\n    }\r\n\r\n    //Calculates the average transportation for the basic calc page.\r\n    calculateAdvancedTransportationCost() {\r\n        var scale = this.isMonthly ? 1 : 1 / 12;   // divide by 12 if the user input yearly numbers\r\n        this.cost = parseInt( ( parseInt(this.carYearlyUpkeepCost) + parseInt(this.carMonthlyOwnershipCost)  + parseInt(this.repairCost) \r\n            + parseInt(this.gasCost) + parseInt(this.insuranceCost) + parseInt(this.paymentCost)) * scale);\r\n        // this.cost = this.cost.toFixed(2);\r\n\r\n        this.eventAggregator.publish('update', {name: 'Transportation', value: this.cost});\r\n    }\r\n\r\n    //Toggles the arrow of the collapse menu\r\n    toggle() {\r\n        this.collapsed = !this.collapsed\r\n    }\r\n\r\n    toggleHorizon() {\r\n        this.isMonthly = !this.isMonthly;\r\n        this.calculateAdvancedTransportationCost();\r\n    }\r\n}"],"sourceRoot":".."}
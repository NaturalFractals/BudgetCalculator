{"version":3,"sources":["src/app.js","src/constants.js","src/environment.js","src/main.js","src/masterBudget.js","src/auto-budget/auto-budget.js","src/budget-breakdown-module/breakdown.js","src/chart/chart.js","src/chart/donut-chart.js","src/chart/gauge-chart.js","src/five-year/card-info-one.js","src/five-year/card-info-three.js","src/five-year/card-info-two.js","src/five-year/donut-details.js","src/five-year/five-year.js","src/goals/goal.js","src/goals/goals.js","src/intro/intro.js","src/resources/index.js","src/results/results.js","src/results-banner-module/banner.js","src/utilities/chartFactory.js","src/utilities/currency.js","src/utilities/percent.js","src/budget-breakdown-module/category-modules/child-care/child-care.js","src/budget-breakdown-module/category-modules/food/food.js","src/budget-breakdown-module/category-modules/housing/housing.js","src/budget-breakdown-module/category-modules/medical/medical.js","src/budget-breakdown-module/category-modules/other/other.js","src/budget-breakdown-module/category-modules/savings/savings.js","src/budget-breakdown-module/category-modules/taxes/taxes.js","src/budget-breakdown-module/category-modules/transportation/transportation.js"],"names":["App","configureRouter","config","router","title","map","route","moduleId","name","nav","Constants","foodCostPerChild","foodCostPerAdult","miscellaneousCost","autoBudgetFields","childCare","food","housing","housingUtilities","housingRent","housingLease","medical","transportation","transportationCar","other","savings","taxes","taxesFiling","debug","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","MasterBudget","constants","location","annualIncome","totalMonthlyIncome","numberChildren","numberAdults","stateLocation","calculateFoodCost","sumOfAllCost","budgetCategories","percentageByCategory","chart","AutoBudget","Breakdown","Chart","masterBudget","eventAggregator","subscribe","changeChart","moduleName","changedCost","update","value","attached","tuples","createChartTuple","createPieChart","dataIndex","getDataIndex","visible","series","data","setVisible","newPoint","y","years","currentYear","createDonutChart","drawChartForYear","year","console","log","GaugeChart","chart2","neutralArray","createNeutralArray","cutArray","reduceArray","autoBudget","createHalfDonutChart","i","length","push","label","allowDrop","ev","preventDefault","drag","dataTransfer","setData","target","innerText","removeDrop","set","drop","getData","id","indexOf","indexToRemove","splice","indexToRemove2","cost","autoBudgetCost","recreationCost","percentReduction","tempMasterBudget","parseInt","gymCost","clothingCost","diningOutCost","calculateAdvancedOtherCost","userAdjustedBudget","budgetArray","total","totalObject","remainingObject","CardInfoOne","CardInfoThree","CardInfoTwo","DonutDetails","currentExpense","currentExpenseYearCost","currentCategory","changeNavigationTab","category","calculateInflationData","date","Date","getFullYear","privateSchoolCost","privateSchoolInflation","daycareCost","daycareInflation","groceriesCost","groceriesInflation","diningOutInflation","recreationInflation","gymInflation","entertainmentCost","entertainmentInflation","cellPhoneCost","cellPhoneInflation","FiveYear","Goal","month","monthNum","currYear","currMonth","getMonth","monthsBetween","monthlyCost","Goals","goalsList","months","selectedName","selectedMonth","selectedYear","selectedCost","monthlySavings","addGoal","goal","removeGoal","index","Intro","httpClient","getLocation","self","navigator","geolocation","window","onload","getCurrentPosition","position","startPos","fetch","coords","latitude","longitude","json","data2","getCurrentLocation","childCareData","costByState","forEach","stateData","carCost","carCostData","carYearlyUpkeepCost","costByAge","ageData","currentUserAge","carMonthlyOwnershipCost","homeInsurance","homeInsuranceData","homeData","healthInsurance","healthInsuranceData","healthData","jsonData","array","results","formatted_address","split","navigate","sanitizeIncome","replace","income","toLocaleString","getMonthlyIncome","Results","routeGoals","routeFiveYearPlan","routeAutoBudget","Banner","displayIncome","HighCharts","ChartFactory","containerID","Highcharts","plotBackgroundColor","plotBorderWidth","plotShadow","text","align","verticalAlign","tooltip","pointFormat","plotOptions","pie","dataLabels","enabled","distance","style","fontWeight","color","startAngle","endAngle","center","type","innerSize","options3d","alpha","subtitle","depth","allowPointSelect","cursor","showInLegend","colorByPoint","tupleHelper","calculateAverageTransportationCost","tempObject","CurrencyValueConverter","toView","locale","props","currency","currencyDisplay","displayBy","PercentValueConverter","divided","round","divider","Number","isNaN","Math","ChildCare","includeInBudget","costPercentage","schoolExpenseCost","schoolExpenseInflation","childSupportCost","childSupportInflation","collapsed","toggle","calculateAdvancedChildCareCost","toggleHorizon","isMonthly","Food","groceries","workdayCost","calculateAdvancedFoodCost","Housing","monthlyRentCost","monthlyRentInflation","homeInsuranceCost","homeInsuranceInflation","homeMaintenanceCost","homeMaintenanceInflation","homeTelephoneCost","homeTelephoneInflation","utilitiesCost","calculateAdvancedCost","Medical","healthInsuranceCost","healthInflation","medicationCost","dentalCost","otherMedicalCost","calculateAdvancedMedical","Other","studentLoanCost","getBasicOtherCost","Savings","emergencyFundCost","retirementCost","investmentsCost","collegeSavingsCost","calculateAdvancedSavings","Taxes","vehicleTaxCost","housingTaxCost","calculateAdvancedTaxCost","Transportation","publicTransportationCost","publicTransportationInflation","hasCar"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject} from 'aurelia-framework';\r\nimport 'bootstrap';\r\nimport 'bootstrap-material-design';\r\nimport 'jquery-ui-dist';\r\nimport $ from 'jquery';\r\n\r\nexport class App {\r\n  constructor() {\r\n  }\r\n\r\n  configureRouter(config, router) {\r\n    this.router = router;\r\n    config.title = \"Budget Expectancy Calculator\";\r\n    config.map([\r\n      {\r\n        route: ['', 'intro'], moduleId: 'intro/intro',\r\n        name: 'intro', title: 'Introduction', nav: true\r\n      },\r\n      {\r\n        route: 'results', moduleId: 'results/results',\r\n        name: 'results', title: 'Personal Budget', nav: true\r\n      },\r\n      {\r\n        route: 'goals', moduleId: 'goals/goals',\r\n        name: 'goals', title: 'Goals', nav: true\r\n      },\r\n      {\r\n        route: 'five-year', moduleId: 'five-year/five-year',\r\n        name: 'five-year', title: 'Five Year Plan', nav: true\r\n      },\r\n      {\r\n        route: 'auto-budget', moduleId: 'auto-budget/auto-budget',\r\n        name: 'auto-budget', title: 'Auto Budget', nav: true\r\n      }\r\n    ]);\r\n  }\r\n}\r\n","export class Constants {\r\n    constructor() {\r\n        //Constant for children food cost\r\n        this.foodCostPerChild = 155.7;\r\n        //Constant for adult food cost\r\n        this.foodCostPerAdult = 158.7;\r\n        //Constant for miscellaneous cost\r\n        this.miscellaneousCost = 0.05;\r\n\r\n        //Field for the autobudget class\r\n        this.autoBudgetFields = [\r\n            {\r\n                'label': 'Tuition',\r\n                'class': 'savings',\r\n                'variable': 'collegeSavingsCost'\r\n            },\r\n            {\r\n                'label': 'Cable',\r\n                'class': 'housing',\r\n                'variable': 'monthlyCableCost'\r\n            },\r\n            {\r\n                'label': 'Telephone',\r\n                'class': 'housing',\r\n                'variable': 'homeTelephoneCost'\r\n            },\r\n            {\r\n                'label': 'Eating Out',\r\n                'class': 'food',\r\n                'variable': 'diningOutCost'\r\n            },\r\n            {\r\n                'label': 'Workday Coffee/Lunch',\r\n                'class': 'food',\r\n                'variable': 'workdayCost'\r\n            },\r\n            {\r\n                'label': 'Recreation/Travel',\r\n                'class': 'other',\r\n                'variable': 'recreationCost'\r\n            },\r\n            {\r\n                'label': 'Vacation',\r\n                'class': 'other',\r\n                'variable': 'recreationCost'\r\n            },\r\n            {\r\n                'label': 'Cell Phone Cost',\r\n                'class': 'other',\r\n                'variable': 'cellPhoneCost'\r\n            },\r\n            {\r\n                'label': 'Clothing',\r\n                'class': 'other',\r\n                'variable': 'clothingCost'\r\n            },\r\n            {\r\n                'label': 'Savings',\r\n                'class': 'savings',\r\n                'variable': 'emergencyFundCost'\r\n            },\r\n            {\r\n                'label': 'Gym Membership',\r\n                'class': 'other',\r\n                'variable': 'gymCost'\r\n            }\r\n        ]\r\n\r\n        //Constants for child care module\r\n        this.childCare = [\r\n            {\r\n                'label': 'School Tuiton',\r\n                'variable': 'privateSchoolCost'\r\n            },\r\n            {\r\n                'label': 'Daycare',\r\n                'variable': 'daycareCost'\r\n            },\r\n            {\r\n                'label': 'School Expenses',\r\n                'variable': 'schoolExpenseCost'\r\n            },\r\n            {\r\n                'label': 'Child Support',\r\n                'variable': 'childSupportCost'\r\n            }\r\n        ];\r\n\r\n        //Constants for food module\r\n        this.food = [\r\n            {\r\n                'label': 'Groceries',\r\n                'variable': 'groceriesCost'\r\n            },\r\n            {\r\n                'label': 'Dining Out',\r\n                'variable': 'diningOutCost'\r\n            },\r\n            {\r\n                'label': 'Workday Coffee/Lunch',\r\n                'variable': 'workdayCost'\r\n            }\r\n        ];\r\n\r\n        //Constants for housing module\r\n        this.housing = [\r\n            {\r\n                'label': 'Cable',\r\n                'variable': 'monthlyCableCost'\r\n            },\r\n            {\r\n                'label': 'Utilities',\r\n                'variable': 'homeInsuranceCost'\r\n            },\r\n            {\r\n                'label': 'Telephone',\r\n                'variable': 'homeTelephoneCost'\r\n            },\r\n            {\r\n                'label': 'Home Maintenance',\r\n                'variable': 'homeMaintenanceCost'\r\n            }\r\n        ];\r\n\r\n        //Constants for housing utilities\r\n        this.housingUtilities = [\r\n            {\r\n                'label': 'Gas',\r\n                'variable': 'utilityGasCost'\r\n            },\r\n            {\r\n                'label': 'Water',\r\n                'variable': 'utilityWaterCost'\r\n            },\r\n            {\r\n                'label': 'Electricity',\r\n                'variable': 'utilityElectricCost'\r\n            }\r\n        ];\r\n\r\n        //Constants for housing owners\r\n        this.housingRent = [\r\n            {\r\n                'label': 'Mortgage Payment',\r\n                'variable': 'mortgageCost'\r\n            },\r\n            {\r\n                'label': 'Home Insurance',\r\n                'variable': 'homeInsuranceCost'\r\n            },\r\n            {\r\n                'label': 'Home Improvements',\r\n                'variable': 'homeImprovementCost'\r\n            }\r\n        ];\r\n\r\n        //Constants for housing rent\r\n        this.housingLease = [\r\n            {\r\n                'label': 'Rent',\r\n                'variable': 'rentCost'\r\n            },\r\n            {\r\n                'label': 'Renters Insurance',\r\n                'variable': 'rentInsuranceCost'\r\n            }\r\n        ];\r\n\r\n        //Constants for medical module\r\n        this.medical = [\r\n            {\r\n                'label': 'Health Insurance',\r\n                'variable': 'healthInsuranceCost'\r\n            },\r\n            {\r\n                'label': 'Medication Cost',\r\n                'variable': 'medicationCost'\r\n            },\r\n            {\r\n                'label': 'Dental Work',\r\n                'variable': 'dentalCost'\r\n            },\r\n            {\r\n                'label': 'Other Medical Cost',\r\n                'variable': 'otherMedicalCost'\r\n            }\r\n        ];\r\n\r\n        //Constants for Transportation\r\n        this.transportation = [\r\n            {\r\n                'label': 'Public Transportation Cost',\r\n                'variable': 'publicTransportationCost'\r\n            },\r\n            {\r\n                'label': 'Car',\r\n                'variable': 'hasCar'\r\n            }\r\n        ];\r\n\r\n        //Constants for Car Transportation\r\n        this.transportationCar = [\r\n            {\r\n                'label': 'How Many Cars',\r\n                'variable': 'numberOfCars'\r\n            },\r\n            {\r\n                'label': 'Payment',\r\n                'variable': 'carPaymentCost'\r\n            },\r\n            {\r\n                'label': 'Repairs',\r\n                'variable': 'carRepairCost'\r\n            },\r\n            {\r\n                'label': 'Insurance',\r\n                'variable': 'insuranceCost'\r\n            },\r\n            {\r\n                'label': 'Gasoline',\r\n                'variable': 'gasolineCost'\r\n            }\r\n        ];\r\n\r\n        //Constants for other module\r\n        this.other = [\r\n            {\r\n                'label': 'Cellphone',\r\n                'variable': 'cellPhoneCost'\r\n            },\r\n            {\r\n                'label': 'Recreation/Travel',\r\n                'variable': 'recreationCost'\r\n            },\r\n            {\r\n                'label': 'Gym Membership',\r\n                'variable': 'gymCost'\r\n            },\r\n            {\r\n                'label': 'Entertainment',\r\n                'variable': 'entertainmentCost'\r\n            },\r\n            {\r\n                'label': 'Clothing',\r\n                'variable': 'clothingCost'\r\n            },\r\n            {\r\n                'label': 'Student Loan Payments',\r\n                'variable': 'studentLoanCost'\r\n            }\r\n        ];\r\n\r\n        //Constants for savings module\r\n        this.savings = [\r\n            {\r\n                'label': 'Emergency Fund',\r\n                'variable': 'emergencyFundCost'\r\n            },\r\n            {\r\n                'label': 'Retirement',\r\n                'variable': 'retirementCost'\r\n            },\r\n            {\r\n                'label': 'Investments',\r\n                'variable': 'investmentsCost'\r\n            },\r\n            {\r\n                'label': 'College Savings',\r\n                'variable': 'collegeSavingsCost'\r\n            }\r\n        ];\r\n        \r\n        //Constants for taxes module\r\n        this.taxes = [\r\n            {\r\n                'label': 'State Taxes',\r\n                'variable': 'vehicleTaxCost'\r\n            },\r\n            {\r\n                'label': 'Filing Status',\r\n                'variable': 'filingStatus'\r\n            }\r\n        ];\r\n\r\n        //Constants for filing status tax\r\n        this.taxesFiling = [\r\n            {\r\n                'label': 'Property Tax',\r\n                'variable': 'propertyTaxCost'\r\n            },\r\n            {\r\n                'label': 'Vehicle Tax',\r\n                'variable': 'vehicleTaxCost'\r\n            },\r\n            {\r\n                'label': 'Income Tax',\r\n                'variable': 'incomeTaxCost'\r\n            }\r\n        ];\r\n    }\r\n}","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import { Food } from 'budget-breakdown-module/category-modules/food/food';\r\nimport { Other } from 'budget-breakdown-module/category-modules/other/other';\r\nimport { Housing } from 'budget-breakdown-module/category-modules/housing/housing';\r\nimport { Medical } from 'budget-breakdown-module/category-modules/medical/medical';\r\nimport { Taxes } from 'budget-breakdown-module/category-modules/taxes/taxes';\r\nimport { Savings } from 'budget-breakdown-module/category-modules/savings/savings';\r\nimport { ChildCare } from 'budget-breakdown-module/category-modules/child-care/child-care';\r\nimport { Transportation } from 'budget-breakdown-module/category-modules/transportation/transportation';\r\nimport { singleton } from 'aurelia-framework';\r\nimport { inject } from 'aurelia-framework';\r\nimport { Constants } from 'constants';\r\n\r\n@inject(Constants, Food, Other, Housing, Medical, Taxes, Savings, ChildCare, Transportation)\r\nexport class MasterBudget {\r\n    constructor(constants, food, other, housing, medical, taxes, savings, childCare, transportation) {\r\n        this.constants = constants;\r\n        this.location = \"\";\r\n        this.annualIncome = 0;\r\n        this.totalMonthlyIncome = 5000;\r\n        this.numberChildren = 2;\r\n        this.numberAdults = 1;\r\n        this.stateLocation = 'Alabama';\r\n\r\n        this.food = food;\r\n        this.food.calculateFoodCost(this.numberChildren, this.numberAdults);\r\n        this.other = other;\r\n        this.housing = housing;\r\n        this.medical = medical;\r\n        this.taxes = taxes;\r\n        this.savings = savings;\r\n        this.childCare = childCare;\r\n        this.transportation = transportation;\r\n\r\n        this.sumOfAllCost = 0;\r\n        this.budgetCategories = ['Child Care', 'Food', 'Housing', 'Medical', 'Other', 'Savings', 'Taxes', 'Transportation'];\r\n        this.percentageByCategory = [];\r\n\r\n        this.chart = null;\r\n    }\r\n}","export class AutoBudget {\r\n    constructor() {\r\n\r\n    }\r\n}","export class Breakdown {\r\n    constructor() {}\r\n}","import {inject} from 'aurelia-framework';\r\nimport {ChartFactory} from '../utilities/chartFactory';\r\nimport {MasterBudget} from 'masterBudget';\r\nimport {EventAggregator} from 'aurelia-event-aggregator'\r\n\r\n@inject(MasterBudget, EventAggregator)\r\nexport class Chart {\r\n\r\n    constructor(masterBudget, eventAggregator) {\r\n        this.chart = null;\r\n        this.masterBudget = masterBudget;\r\n        \r\n        eventAggregator.subscribe('toggle element', moduleName => {this.changeChart(moduleName)} );\r\n        eventAggregator.subscribe('update', update => {this.changedCost(update.name, update.value)} );\r\n    }\r\n\r\n    attached() {\r\n        var tuples = ChartFactory.createChartTuple(this.masterBudget);\r\n        this.chart = ChartFactory.createPieChart('chartContainer', tuples);\r\n        this.masterBudget.chart = this.chart;\r\n    }\r\n\r\n    changeChart(moduleName) {\r\n        var dataIndex = this.getDataIndex(moduleName);\r\n        var visible = this.chart.series[0].data[dataIndex].visible ? false : true;\r\n        this.chart.series[0].data[dataIndex].setVisible(visible);\r\n    }\r\n\r\n    getDataIndex(moduleName) {\r\n        switch (moduleName) {\r\n            case \"Child Care\":  return 0;\r\n            case \"Food\":        return 1;\r\n            case \"Housing\":     return 2;\r\n            case \"Medical\":     return 3;\r\n            case \"Other\":       return 4;\r\n            case \"Savings\":     return 5;\r\n            case \"Taxes\":      return 6;\r\n            default:            return 7;\r\n        }\r\n    }\r\n\r\n    changedCost(moduleName, value) {\r\n        var newPoint = {name: moduleName, y: value};\r\n        this.chart.series[0].data[this.getDataIndex(moduleName)].update(newPoint, true, true);\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {ChartFactory} from '../utilities/chartFactory';\r\nimport {MasterBudget} from 'masterBudget';\r\nimport {EventAggregator} from 'aurelia-event-aggregator'\r\n\r\n@inject(MasterBudget, EventAggregator)\r\nexport class Chart {\r\n\r\n    constructor(masterBudget, eventAggregator) {\r\n        this.chart = null;\r\n        this.masterBudget = masterBudget;\r\n        this.years = [2017, 2018, 2019, 2020, 2021];\r\n        this.currentYear = 2017;\r\n        eventAggregator.subscribe('toggle element', moduleName => {this.changeChart(moduleName)} );\r\n        eventAggregator.subscribe('update', update => {this.changedCost(update.name, update.value)} );\r\n    }\r\n\r\n    attached() {\r\n        var tuples = ChartFactory.createChartTuple(this.masterBudget);\r\n        this.chart = ChartFactory.createDonutChart('goalsChartContainer', tuples);\r\n        this.masterBudget.chart = this.chart;\r\n    }\r\n\r\n    drawChartForYear(year, currentYear) {\r\n        this.currentYear = year.year;\r\n        console.log(this.currentYear);\r\n    }\r\n\r\n    changeChart(moduleName) {\r\n        var dataIndex = this.getDataIndex(moduleName);\r\n        var visible = this.chart.series[0].data[dataIndex].visible ? false : true;\r\n        this.chart.series[0].data[dataIndex].setVisible(visible);\r\n    }\r\n\r\n    getDataIndex(moduleName) {\r\n        switch (moduleName) {\r\n            case \"Child Care\":  return 0;\r\n            case \"Food\":        return 1;\r\n            case \"Housing\":     return 2;\r\n            case \"Medical\":     return 3;\r\n            case \"Other\":       return 4;\r\n            case \"Savings\":     return 5;\r\n            case \"Taxes\":      return 6;\r\n            default:            return 7;\r\n        }\r\n    }\r\n\r\n    changedCost(moduleName, value) {\r\n        var newPoint = {name: moduleName, y: value};\r\n        this.chart.series[0].data[this.getDataIndex(moduleName)].update(newPoint, true, true);\r\n    }\r\n}","import { inject } from 'aurelia-framework';\r\nimport { ChartFactory } from '../utilities/chartFactory';\r\nimport { MasterBudget } from 'masterBudget';\r\nimport { Constants } from 'constants';\r\n\r\n@inject(MasterBudget, Constants)\r\nexport class GaugeChart {\r\n    constructor(masterBudget, constants) {\r\n        this.masterBudget = masterBudget;\r\n        this.constants = constants;\r\n        console.log(constants);\r\n        this.chart = null;\r\n        this.chart2 = null;\r\n        this.neutralArray = [];\r\n        this.createNeutralArray();\r\n        this.cutArray = [];\r\n        this.reduceArray = [];\r\n    }\r\n\r\n    attached() {\r\n        var tuples = this.createChartTuple(this.masterBudget);\r\n        this.autoBudget();\r\n        this.chart = ChartFactory.createHalfDonutChart('gaugeChartContainer', tuples);\r\n        this.chart2 = ChartFactory.createHalfDonutChart('gaugeChartContainer2', tuples);\r\n    }\r\n\r\n    //Uses constants to create array for responsive drag and drop\r\n    createNeutralArray() {\r\n        for(var i = 0; i < this.constants.autoBudgetFields.length; i++) {\r\n            this.neutralArray.push(this.constants.autoBudgetFields[i].label);\r\n        }\r\n    }\r\n\r\n    //Allow drop of element into container\r\n    allowDrop(ev) {\r\n        ev.preventDefault();\r\n    }\r\n\r\n    //Handles the drag even from the drag and drop\r\n    drag(ev) {\r\n        ev.dataTransfer.setData(\"tonberry\", ev.target.innerText);\r\n        console.log(ev);\r\n        return true;\r\n    }\r\n\r\n    //Handles removing the drag and drop\r\n    removeDrop(ev) {\r\n        ev.dataTransfer.set\r\n    }\r\n\r\n    //Handles the drop event into a container\r\n    drop(ev) {\r\n        ev.preventDefault();\r\n        var data = ev.dataTransfer.getData(\"tonberry\");\r\n        console.log(data);\r\n        if(ev.target.id === 'reduce-container'){\r\n            if(this.reduceArray.indexOf(data) < 0)\r\n                this.reduceArray.push(data);\r\n            var indexToRemove = this.neutralArray.indexOf(data);\r\n            if(indexToRemove > -1)\r\n                this.neutralArray.splice(indexToRemove, 1);\r\n            var indexToRemove = this.cutArray.indexOf(data);\r\n            if(indexToRemove > -1)\r\n                this.cutArray.splice(indexToRemove, 1);\r\n        } else if (ev.target.id === 'cut-container') {\r\n            if(this.cutArray.indexOf(data) < 0)\r\n                this.cutArray.push(data);\r\n            var indexToRemove = this.neutralArray.indexOf(data);\r\n            if(indexToRemove > -1)\r\n                this.neutralArray.splice(indexToRemove, 1);\r\n            var indexToRemove2 = this.reduceArray.indexOf(data);\r\n            if(indexToRemove2 > -1)\r\n                this.reduceArray.splice(indexToRemove, 1);\r\n        } else {\r\n            if(this.neutralArray.indexOf(data) < 0)\r\n                this.neutralArray.push(data);\r\n            var indexToRemove = this.reduceArray.indexOf(data);\r\n            if(indexToRemove > -1)\r\n                this.reduceArray.splice(indexToRemove, 1);\r\n            var indexToRemove2 = this.cutArray.indexOf(data);\r\n            if(indexToRemove2 > -1)\r\n                this.cutArray.splice(indexToRemove2, 1);\r\n        }\r\n    }\r\n\r\n    //Calculates the auto budget once the auto-budget Button is clicked\r\n    autoBudget() {\r\n        var cost = this.masterBudget.sumOfAllCost;\r\n        var autoBudgetCost = cost - this.masterBudget.recreationCost;\r\n        var percentReduction = 0.9;\r\n        var tempMasterBudget = this.masterBudget;\r\n        console.log(this.masterBudget);\r\n        console.log(tempMasterBudget.sumOfAllCost);\r\n        console.log(tempMasterBudget.totalMonthlyIncome);\r\n        while(tempMasterBudget.sumOfAllCost < tempMasterBudget.totalMonthlyIncome) {\r\n            tempMasterBudget.other.recreationCost = parseInt(tempMasterBudget.other.recreationCost) * parseInt(percentReduction);\r\n            tempMasterBudget.other.gymCost = parseInt(tempMasterBudget.other.gymCost) * parseInt(percentReduction);\r\n            tempMasterBudget.other.clothingCost = parseInt(tempMasterBudget.other.clothingCost) * parseInt(percentReduction);\r\n            tempMasterBudget.housing.diningOutCost = parseInt(tempMasterBudget.housing.diningOutCost) * parseInt(percentReduction);\r\n            console.log(tempMasterBudget);\r\n            tempMasterBudget.other.calculateAdvancedOtherCost();\r\n        }\r\n        var tuples = this.createChartTuple(this.masterBudget);\r\n        console.log(tuples);\r\n        this.chart = ChartFactory.createHalfDonutChart('gaugeChartContainer', tuples);\r\n        this.chart2 = ChartFactory.createHalfDonutChart('gaugeChartContainer2', tuples);\r\n    }\r\n\r\n    userAdjustedBudget() {\r\n        var cost = this.masterBudget.sumOfAllCost;\r\n        var percentReduction = 0.9;\r\n        var tempMasterBudget = this.masterBudget;\r\n    }\r\n\r\n        //Create tuples for the pie chart\r\n    createChartTuple(masterBudget) {\r\n        var budgetArray = [];\r\n        masterBudget.sumOfAllCost = 0;\r\n        masterBudget.sumOfAllCost += parseInt(masterBudget.food.cost) + parseInt(masterBudget.childCare.cost) + parseInt(masterBudget.housing.cost) + parseInt(masterBudget.medical.cost) + parseInt(masterBudget.savings.cost) + parseInt(masterBudget.taxes.cost) + parseInt(masterBudget.transportation.cost);\r\n        var total = masterBudget.sumOfAllCost;\r\n        var totalObject = {};\r\n        totalObject.name = 'Total Expenses';\r\n        totalObject.y = total;\r\n        var remainingObject = [];\r\n        remainingObject.name = 'Savings';\r\n        remainingObject.y = masterBudget.totalMonthlyIncome - total;\r\n        budgetArray.push(totalObject);\r\n        budgetArray.push(remainingObject);\r\n        return budgetArray;\r\n    }\r\n}","export class CardInfoOne {\r\n    constructor() {\r\n        \r\n    }\r\n}","export class CardInfoThree {\r\n    constructor() {\r\n        \r\n    }\r\n}","export class CardInfoTwo {\r\n    constructor() {\r\n        \r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {MasterBudget} from 'masterBudget';\r\n\r\n@inject(MasterBudget)\r\nexport class DonutDetails {\r\n    constructor(masterBudget) {\r\n        this.currentYear = 2017;\r\n        this.currentExpense = '$5,463';\r\n        this.currentExpenseYearCost = 324;\r\n        this.currentCategory = 'Child Care';\r\n        this.masterBudget = masterBudget;\r\n    }\r\n\r\n    //Changes the information of the currrent details based on navigation click\r\n    changeNavigationTab(category, currentCategory) {\r\n        console.log(currentCategory)\r\n        console.log(category);\r\n        switch(category) {\r\n            case this.masterBudget.budgetCategories[0]:\r\n                this.currentExpense = this.masterBudget.childCare.cost;\r\n                this.currentCategory = category;\r\n                break;\r\n            case this.masterBudget.budgetCategories[1]:\r\n                this.currentExpense = this.masterBudget.food.cost;\r\n                this.currentCategory = category;\r\n                break;\r\n            case this.masterBudget.budgetCategories[2]:\r\n                this.currentExpense = this.masterBudget.housing.cost;\r\n                this.currentCategory = category;\r\n                break;\r\n            case this.masterBudget.budgetCategories[3]:\r\n                this.currentExpense = this.masterBudget.medical.cost;\r\n                this.currentCategory = category;\r\n                break;\r\n            case this.masterBudget.budgetCategories[4]:\r\n                this.currentExpense = this.masterBudget.other.cost;\r\n                this.currentCategory = category;\r\n                break;\r\n            case this.masterBudget.budgetCategories[5]:\r\n                this.currentExpense = this.masterBudget.savings.cost;\r\n                this.currentCategory = category;\r\n                break;\r\n            case this.masterBudget.budgetCategories[6]:\r\n                this.currentExpense = this.masterBudget.taxes.cost;\r\n                this.currentCategory = category;\r\n                break;\r\n            case this.masterBudget.budgetCategories[7]:\r\n                this.currentExpense = this.masterBudget.transportation.cost;\r\n                this.currentCategory = category;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    calculateInflationData() {\r\n        var date = new Date();\r\n        var year = date.getFullYear();\r\n        var tempMasterBudget = this.masterBudget;\r\n        for(var i = 0; i < currentYear - year; i++) {\r\n            tempMasterBudget.childCare.privateSchoolCost *= this.masterBudget.childCare.privateSchoolInflation;\r\n            tempMasterBudget.childCare.daycareCost *= this.masterBudget.childCare.daycareInflation;\r\n            tempMasterBudget.food.groceriesCost *= this.masterBudget.food.groceriesInflation;\r\n            tempMasterBudget.food.diningOutCost *= this.masterBudget.food.diningOutInflation;\r\n            tempMasterBudget.other.recreationCost  *= this.masterBudget.other.recreationInflation;\r\n            tempMasterBudget.other.gymCost *= this.masterBudget.other.gymInflation;\r\n            tempMasterBudget.other.entertainmentCost *= this.masterBudget.entertainmentInflation;\r\n            tempMasterBudget.other.cellPhoneCost *= this.masterBudget.cellPhoneInflation;\r\n        }\r\n    }  \r\n}","export class FiveYear {\r\n    constructor() {\r\n        \r\n    }\r\n}","export class Goal {\r\n    constructor(name, cost, month, year) {\r\n        this.name = name;\r\n        this.cost = cost;\r\n        this.month = month;\r\n        this.year = year;\r\n\r\n        var monthNum = null;\r\n        switch (this.month) {\r\n            case \"January\":     monthNum = 0; break;\r\n            case \"February\":    monthNum = 1; break;\r\n            case \"March\":       monthNum = 2; break;\r\n            case \"April\":       monthNum = 3; break;\r\n            case \"May\":         monthNum = 4; break;\r\n            case \"June\":        monthNum = 5; break;\r\n            case \"July\":        monthNum = 6; break;\r\n            case \"August\":      monthNum = 7; break;\r\n            case \"September\":   monthNum = 8; break;\r\n            case \"October\":     monthNum = 9; break;\r\n            case \"November\":    monthNum = 10; break;\r\n            case \"December\":    monthNum = 11; break;\r\n        }\r\n\r\n        var currYear = new Date().getFullYear();\r\n        var currMonth = new Date().getMonth();\r\n\r\n        var monthsBetween = null;\r\n        if (currYear === this.year)\r\n            monthsBetween = monthNum - currMonth;\r\n        else\r\n            monthsBetween = (11 - currMonth) + (12 * (this.year - currYear - 1)) + monthNum;\r\n\r\n        this.monthlyCost = parseInt(this.cost / monthsBetween);\r\n    }\r\n}","import {Goal} from 'goals/goal';\r\n\r\nexport class Goals {\r\n    constructor() {\r\n        this.goalsList = [];\r\n        this.months = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ];\r\n        \r\n        this.selectedName = null;\r\n        this.selectedMonth = \"January\"\r\n        this.selectedYear = null;\r\n        this.selectedCost= null;\r\n\r\n        this.monthlySavings = 0;\r\n    }\r\n\r\n    addGoal() {\r\n        var goal = new Goal(this.selectedName, parseInt(this.selectedCost), this.selectedMonth, parseInt(this.selectedYear));\r\n        this.monthlySavings += goal.monthlyCost;\r\n        this.goalsList.push(goal);\r\n\r\n        this.selectedName = null;\r\n        this.selectedMonth = \"January\"\r\n        this.selectedYear = null;\r\n        this.selectedCost= null;\r\n        console.log(this.goalsList);\r\n    }\r\n\r\n    removeGoal(index) {\r\n        this.monthlySavings -= goalsList(index);\r\n        this.goalsList.splice(index, 1)\r\n    }\r\n}","import { inject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\nimport { HttpClient, json } from 'aurelia-fetch-client';\r\nimport { ChartFactory } from '../utilities/chartFactory';\r\nimport { MasterBudget } from 'masterBudget';\r\n\r\n@inject(Router, HttpClient, MasterBudget)\r\nexport class Intro {\r\n\r\n    constructor(router, httpClient, masterBudget) {\r\n        this.router = router;\r\n        this.httpClient = httpClient;\r\n        this.masterBudget = masterBudget;\r\n        this.getLocation();\r\n    }\r\n\r\n    //Retrieves the user's current location.\r\n    //TODO: Move this method out of intro.js\r\n    async getLocation() {\r\n        var self = this;\r\n\r\n        // check for Geolocation support\r\n        if (navigator.geolocation) {\r\n            console.log('Geolocation is supported!');\r\n        }\r\n        else {\r\n            console.log('Geolocation is not supported for this Browser/OS version yet.');\r\n        }\r\n\r\n        //Load users current location\r\n        window.onload = async function () {\r\n            var startPos;\r\n            navigator.geolocation.getCurrentPosition(async function (position) {\r\n                startPos = position;\r\n                let data = await self.httpClient.fetch('https://maps.googleapis.com/maps/api/geocode/json?latlng=' + startPos.coords.latitude + ',' + startPos.coords.longitude + '&key=AIzaSyBM9-m7L5132H_bDe3JUn9tlwblTARBRbQ');\r\n                let data2 = await data.json();\r\n                self.getCurrentLocation(data2);\r\n            });\r\n        };\r\n        await window.onload();\r\n\r\n        let childCare = await this.httpClient.fetch('/api/child-care/get.json');\r\n        let childCareData = await childCare.json();\r\n        //Get average child care cost by state\r\n        childCareData.costByState.forEach((stateData) => {\r\n            if (stateData[0] == self.masterBudget.stateLocation) {\r\n                self.masterBudget.childCare.cost = stateData[8];\r\n            }\r\n        })\r\n\r\n        let carCost = await this.httpClient.fetch('/api/car-costs/get.json');\r\n        let carCostData = await carCost.json();\r\n        //Get average car cost for repairs, insurance, and gasoline\r\n        carCostData.costByState.forEach((stateData) => {\r\n            if (stateData[0] === self.masterBudget.stateLocation) {\r\n                self.masterBudget.transportation.carYearlyUpkeepCost = stateData[4];\r\n            }\r\n        });\r\n        //Get average car cost for renting/buying\r\n        carCostData.costByAge.forEach((ageData) => {\r\n            if (ageData[0] >= self.masterBudget.currentUserAge) {\r\n                self.masterBudget.transportation.carMonthlyOwnershipCost = ageData[2];\r\n            }\r\n        });\r\n        console.log(this.masterBudget.transportation);\r\n\r\n        //Get average home insurance cost\r\n        let homeInsurance = await this.httpClient.fetch('/api/home-insurance/get.json');\r\n        let homeInsuranceData = await homeInsurance.json();\r\n        homeInsuranceData.costByState.forEach((homeData) => {\r\n            if (homeData[0] == self.masterBudget.stateLocation) {\r\n                self.masterBudget.housing.cost = homeData[1];\r\n            }\r\n        });\r\n\r\n        //Get average health insurance cost\r\n        let healthInsurance = await this.httpClient.fetch('api/healthcare-insurance/get.json');\r\n        let healthInsuranceData = await healthInsurance.json();\r\n        healthInsuranceData.costByState.forEach((healthData) => {\r\n            if (healthData[0] == self.masterBudget.stateLocation) {\r\n                self.masterBudget.medical.cost = healthData[2];\r\n            }\r\n        });\r\n    }\r\n\r\n    //Get current county/location of user\r\n    getCurrentLocation(jsonData) {\r\n        var array = jsonData.results[4].formatted_address.split(\",\");\r\n        this.masterBudget.location = array[0];\r\n    }\r\n\r\n    //Routes the user to the results page after clicking budget button\r\n    route() {\r\n        this.router.navigate(\"#/results\");\r\n    }\r\n\r\n    //Sanitize the income input to U.S. dollar format\r\n    sanitizeIncome() {\r\n        this.masterBudget.annualIncome = this.masterBudget.annualIncome.replace(/,/g, \"\");\r\n        this.masterBudget.annualIncome = this.masterBudget.annualIncome.replace(/\\$/g, \"\");\r\n\r\n        this.income = parseInt(this.masterBudget.annualIncome);\r\n\r\n        this.masterBudget.annualIncome = '$' + this.income.toLocaleString();\r\n    }\r\n\r\n    //Calculates the monthly income based on entered annual income\r\n    getMonthlyIncome() {\r\n        console.log(this.masterBudget.annualIncome);\r\n        console.log(this.income);\r\n        this.masterBudget.totalMonthlyIncome = parseInt(this.income) / 12;\r\n        console.log(this.masterBudget.totalMonthlyIncome);\r\n    }\r\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n","import { inject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\n\r\n@inject(Router)\r\nexport class Results {\r\n    constructor(router) {\r\n        this.router = router;\r\n    }\r\n\r\n    //Routes the user to the goals page\r\n    routeGoals() {\r\n        this.router.navigate(\"#/goals\");\r\n    }\r\n\r\n    //Routes the user to the five year plan page\r\n    routeFiveYearPlan() {\r\n        this.router.navigate(\"#/five-year\")\r\n    }\r\n\r\n    //Routes the user to the auto budget page\r\n    routeAutoBudget() {\r\n        this.router.navigate(\"#/auto-budget\")\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {MasterBudget} from 'masterBudget';\r\nimport {ChartFactory} from '../utilities/chartFactory';\r\n\r\n@inject(MasterBudget)\r\nexport class Banner {\r\n    constructor(masterBudget) {\r\n        this.income = null;\r\n        this.displayIncome = \"\";\r\n        this.masterBudget = masterBudget;\r\n    }\r\n\r\n    //Sanitize the income input to U.S. dollar format\r\n    sanitizeIncome() {\r\n        this.displayIncome = this.displayIncome.replace(/,/g, \"\");\r\n        this.displayIncome = this.displayIncome.replace(/\\$/g, \"\");\r\n\r\n        this.income = parseInt(this.displayIncome);\r\n\r\n        this.displayIncome = '$' + this.income.toLocaleString();\r\n    }\r\n\r\n    //Calculates the monthly income based on entered annual income\r\n    getMonthlyIncome() {\r\n        var income = parseInt(this.displayIncome);\r\n        this.masterBudget.totalMonthlyIncome = income / 12;\r\n    }\r\n}","import * as HighCharts from \"highcharts\";\r\n\r\nexport class ChartFactory {\r\n    //Create half donut chart\r\n    static createHalfDonutChart(containerID, tuples) {\r\n        return Highcharts.chart(containerID, {\r\n            chart: {\r\n                plotBackgroundColor: null,\r\n                plotBorderWidth: 0,\r\n                plotShadow: false\r\n            },\r\n            title: {\r\n                text: 'Browser<br>shares<br>2015',\r\n                align: 'center',\r\n                verticalAlign: 'middle',\r\n                y: 40\r\n            },\r\n            tooltip: {\r\n                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n            },\r\n            plotOptions: {\r\n                pie: {\r\n                    dataLabels: {\r\n                        enabled: true,\r\n                        distance: -50,\r\n                        style: {\r\n                            fontWeight: 'bold',\r\n                            color: 'white'\r\n                        }\r\n                    },\r\n                    startAngle: -90,\r\n                    endAngle: 90,\r\n                    center: ['50%', '75%']\r\n                }\r\n            },\r\n            series: [{\r\n                type: 'pie',\r\n                name: 'Budget',\r\n                innerSize: '50%',\r\n                data: tuples\r\n            }]\r\n        });\r\n    }\r\n    \r\n    //Creates a donut chart \r\n    static createDonutChart(containerID, tuples) {\r\n        return Highcharts.chart(containerID, {\r\n            chart: {\r\n                type: 'pie',\r\n                options3d: {\r\n                    enabled: true,\r\n                    alpha: 45\r\n                }\r\n            },\r\n            title: {\r\n                text: 'Yearly Budget'\r\n            },\r\n            subtitle: {\r\n                text: '3D donut in Highcharts'\r\n            },\r\n            plotOptions: {\r\n                pie: {\r\n                    innerSize: 100,\r\n                    depth: 45\r\n                }\r\n            },\r\n            series: [{\r\n                name: 'Delivered amount',\r\n                data: tuples\r\n            }]\r\n        })\r\n    }\r\n\r\n    //Creates a pie chart\r\n    static createPieChart(containerID, tuples) {\r\n        return Highcharts.chart(containerID, {\r\n            chart: {\r\n                plotBackgroundColor: null,\r\n                plotBorderWidth: null,\r\n                plotShadow: false,\r\n                type: 'pie'\r\n            },\r\n            title: {\r\n                text: 'Budget Calculator'\r\n            },\r\n            tooltip: {\r\n                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n            },\r\n            plotOptions: {\r\n                pie: {\r\n                    allowPointSelect: true,\r\n                    cursor: 'pointer',\r\n                    dataLabels: {\r\n                        enabled: false\r\n                    },\r\n                    showInLegend: true\r\n                }\r\n            },\r\n            series: [{\r\n                name: 'Percentage',\r\n                colorByPoint: true,\r\n                data: tuples\r\n            }]\r\n        });//end Highcharts.chart()\r\n    }\r\n\r\n    //Create tuples for the pie chart\r\n    static createChartTuple(masterBudget) {\r\n        var budgetArray = [];\r\n        masterBudget.sumOfAllCost = 0;\r\n        console.log(masterBudget);\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[0], masterBudget.childCare.cost, masterBudget));\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[1], masterBudget.food.cost, masterBudget));\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[2], masterBudget.housing.cost, masterBudget));\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[3], masterBudget.medical.cost, masterBudget));\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[4], masterBudget.other.cost, masterBudget));\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[5], masterBudget.savings.cost, masterBudget));\r\n        masterBudget.transportation.calculateAverageTransportationCost();\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[6], masterBudget.taxes.cost, masterBudget));\r\n        budgetArray.push(this.tupleHelper(masterBudget.budgetCategories[7], masterBudget.transportation.cost, masterBudget));\r\n\r\n        return budgetArray;\r\n    }\r\n\r\n    //Helper method for creating tuples to be used in the charts\r\n    static tupleHelper(name, data, masterBudget) {\r\n        var tempObject = {};\r\n        tempObject.name = name;\r\n        tempObject.y = data;\r\n        masterBudget.sumOfAllCost += parseInt(data);\r\n        return tempObject;\r\n    }\r\n}","export class CurrencyValueConverter {\r\n    toView(value, config = {}) {\r\n        let locale = config.locale || 'en';\r\n        let props = {\r\n            style: 'currency',\r\n            currency: config.currency || 'USD',\r\n            currencyDisplay: config.displayBy || 'symbol'\r\n        };\r\n\r\n        return value.toLocaleString(locale, props);\r\n    }\r\n}","export class PercentValueConverter {\r\n    toView(value, divided = 100, round = false) {\r\n      if (!value) {\r\n        return value;\r\n      }\r\n      \r\n      let divider = (typeof value === 'string') ? Number(value) : value;\r\n      \r\n      if (typeof divider !== 'number' || isNaN(divider)) {\r\n        return value;\r\n      }\r\n      \r\n      return round ? Math.round((divider / divided) * 100 ) : (divider / divided) * 100;\r\n    }\r\n}","import {inject, singleton} from 'aurelia-framework';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {Constants} from 'constants';\r\n\r\n@inject(Constants, EventAggregator)\r\n@singleton()\r\nexport class ChildCare {\r\n    constructor(constants, eventAggregator) {\r\n        this.includeInBudget = true;\r\n        this.constants = constants;\r\n        this.cost = 0;\r\n        this.costPercentage = 0;\r\n        this.privateSchoolCost = 0;\r\n        this.privateSchoolInflation = 1.0558;\r\n        this.daycareCost = 0;\r\n        this.daycareInflation = 1.0558;\r\n        this.schoolExpenseCost = 0;\r\n        this.schoolExpenseInflation = 1.0589;\r\n        this.childSupportCost = 0;\r\n        this.childSupportInflation = 1;\r\n        this.eventAggregator = eventAggregator;\r\n        this.collapsed = true;\r\n    }\r\n\r\n    //Toggles the arrow of the collapse menu\r\n    toggle() {\r\n        this.collapsed = !this.collapsed\r\n    }\r\n\r\n    //Calculates the cost of the advanced child care cost\r\n    calculateAdvancedChildCareCost() {\r\n        this.cost = parseInt(this.privateSchoolCost) + parseInt(this.daycareCost);\r\n    }\r\n\r\n    toggleHorizon() {\r\n        this.isMonthly = !this.isMonthly;\r\n        \r\n    }\r\n}","import {inject, singleton} from 'aurelia-framework';\r\nimport {Constants} from '../../../constants';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\n\r\n@inject(Constants, EventAggregator)\r\n@singleton()\r\nexport class Food {\r\n    constructor(constants, eventAggregator) {\r\n        this.includeInBudget = true;\r\n        this.groceries = 0;\r\n        this.constants = constants;\r\n        this.cost = 0;\r\n        this.costPercentage = 0;\r\n        this.groceriesCost = 0;\r\n        this.groceriesInflation = 1.0295;\r\n        this.diningOutCost = 0;\r\n        this.diningOutInflation = 1.0304;\r\n        this.workdayCost = 0;\r\n        this.collapsed = true;\r\n        this.eventAggregator = eventAggregator;\r\n        this.isMonthly = true;\r\n    }\r\n\r\n    //Toggles the arrow of the collapse menu\r\n    toggle() {\r\n        this.collapsed = !this.collapsed;\r\n    }\r\n\r\n    //Calculate the basic food cost for the household\r\n    calculateFoodCost(numberChildren, numberAdults) {\r\n        this.numberChildren = numberChildren;\r\n        this.numberAdults = numberAdults;\r\n        this.cost =  parseInt(numberChildren) * parseInt(this.constants.foodCostPerChild) + parseInt(numberAdults) * parseInt(this.constants.foodCostPerAdult);\r\n    }\r\n\r\n    //Calculate detailed food cost\r\n    calculateAdvancedFoodCost() {\r\n        this.cost = parseInt(this.groceriesCost) + parseInt(this.diningOutCost);\r\n    }\r\n\r\n    toggleHorizon() {\r\n        this.isMonthly = !this.isMonthly;\r\n        \r\n    }\r\n}","import { inject, singleton } from 'aurelia-framework';\r\nimport { Constants } from 'constants';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\n\r\n@inject(Constants, EventAggregator)\r\n@singleton()\r\nexport class Housing {\r\n    constructor(constants, eventAggregator) {\r\n        this.includeInBudget = true;\r\n        this.constants = constants;\r\n        this.cost = 0;\r\n        this.costPercentage = 0;\r\n        this.monthlyRentCost = 0;\r\n        this.monthlyRentInflation = 1.0269;\r\n        this.homeInsuranceCost = 0;\r\n        this.homeInsuranceInflation = 1.0170;\r\n        this.homeMaintenanceCost = 0;\r\n        this.homeMaintenanceInflation  = 1.0229;\r\n        this.homeTelephoneCost = 0;\r\n        this.homeTelephoneInflation = 0.9915;\r\n        this.utilitiesCost = 0;\r\n        this.collapsed = true;\r\n        this.eventAggregator = eventAggregator;\r\n        this.isMonthly = true;\r\n    }\r\n\r\n    //Toggles the arrow of the collapse menu\r\n    toggle() {\r\n        this.collapsed = !this.collapsed\r\n    }\r\n\r\n    //Calculates advanced cost for housing\r\n    calculateAdvancedCost() {\r\n        this.cost = parseInt(this.monthlyRentCost) + parseInt(this.homeInsuranceCost) + parseInt(this.utilitiesCost);\r\n    }\r\n\r\n    toggleHorizon() {\r\n        this.isMonthly = !this.isMonthly;\r\n        \r\n    }\r\n}","import {inject, singleton} from 'aurelia-framework';\r\nimport {Constants} from 'constants';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\n\r\n@inject(Constants, EventAggregator)\r\n@singleton()\r\nexport class Medical {\r\n    constructor(constants, eventAggregator) {\r\n        this.includeInBudget = true;\r\n        this.constants = constants;\r\n        this.cost = 0;\r\n        this.costPercentage = 0;\r\n        this.healthInsuranceCost = 0;\r\n        this.healthInflation = 1.0379;\r\n        this.medicationCost = 0;\r\n        this.dentalCost = 0;\r\n        this.otherMedicalCost = 0;\r\n        this.collapsed = true;\r\n        this.eventAggregator = eventAggregator;\r\n        this.isMonthly = true;\r\n    }\r\n\r\n    //Toggles the arrow of the collapse menu\r\n    toggle() {\r\n        this.collapsed = !this.collapsed\r\n    }\r\n\r\n    //Calculates the advanced cost of the medical category\r\n    calculateAdvancedMedical() {\r\n        this.cost = parseInt(this.dentalCost) + parseInt(this.healthInsuranceCost) + parseInt(this.medicationCost)  + parseInt(this.otherMedicalCost);\r\n    }\r\n\r\n    toggleHorizon() {\r\n        this.isMonthly = !this.isMonthly;\r\n        \r\n    }\r\n}","import {inject, singleton} from 'aurelia-framework';\r\nimport {Constants} from 'constants';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\n\r\n@inject(Constants, EventAggregator)\r\n@singleton()\r\nexport class Other {\r\n    constructor(constants, eventAggregator) {\r\n        this.includeInBudget = true;\r\n        this.constants = constants\r\n        this.cost = 0;\r\n        this.costPercentage = 0;\r\n        this.cellPhoneCost = 0;\r\n        this.recreationCost = 0;\r\n        this.gymCost = 0;\r\n        this.entertainmentCost = 0;\r\n        this.clothingCost = 0;\r\n        this.studentLoanCost = 0;\r\n        this.collapsed = true;\r\n        this.eventAggregator = eventAggregator;\r\n        this.isMonthly = true;\r\n    }\r\n\r\n    //Toggles the arrow of the collapse menu\r\n    toggle() {\r\n        this.collapsed = !this.collapsed\r\n    }\r\n\r\n    //Calculates the basic cost of the other category\r\n    getBasicOtherCost() {\r\n        this.cost = this.totalMonthlyIncome * this.constants.miscellaneousCost;\r\n    }\r\n\r\n    //Calculates the advanced cost of other category\r\n    calculateAdvancedOtherCost() {\r\n        this.cost = parseInt(this.cellPhoneCost) + parseInt(this.recreationCost) + parseInt(this.gymCost) + parseInt(this.entertainmentCost) + parseInt(this.clothingCost);\r\n    }\r\n\r\n    toggleHorizon() {\r\n        this.isMonthly = !this.isMonthly;\r\n        \r\n    }\r\n}","import {inject, singleton} from 'aurelia-framework';\r\nimport {Constants} from 'constants';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\n\r\n@inject(Constants, EventAggregator)\r\n@singleton()\r\nexport class Savings {\r\n\r\n    constructor(constants, eventAggregator) {\r\n        this.includeInBudget = true;\r\n        this.cost = 0;\r\n        this.costPercentage = 0;\r\n        this.constants = constants;\r\n        this.emergencyFundCost = 0;\r\n        this.retirementCost = 0;\r\n        this.investmentsCost = 0;\r\n        this.collegeSavingsCost = 0;\r\n        this.collapsed = true;\r\n        this.eventAggregator = eventAggregator;\r\n        this.isMonthly = true;\r\n    }\r\n\r\n    //Toggles the arrow of the collapse menu\r\n    toggle() {\r\n        this.collapsed = !this.collapsed\r\n    }\r\n\r\n    //Calculates cost of savings\r\n    calculateAdvancedSavings() {\r\n        this.cost = parseInt(this.emergencyFundCost) + parseInt(this.retirementCost) + parseInt(this.investmentsCost) + parseInt(this.collegeSavingsCost);\r\n    }\r\n\r\n    toggleHorizon() {\r\n        this.isMonthly = !this.isMonthly;\r\n        \r\n    }\r\n}","import {inject, singleton} from 'aurelia-framework';\r\nimport {Constants} from 'constants';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\n\r\n@inject(Constants, EventAggregator)\r\n@singleton()\r\nexport class Taxes {\r\n    constructor(constants, eventAggregator) {\r\n        this.includeInBudget = true;\r\n        this.constants = constants;\r\n        this.cost = 0;\r\n        this.costPercentage = 0;\r\n        this.vehicleTaxCost = 0;\r\n        this.housingTaxCost = 0;\r\n        this.collapsed = true;\r\n        this.eventAggregator = eventAggregator;\r\n        this.isMonthly = true;\r\n    }\r\n\r\n    //Toggles the arrow of the collapse menu\r\n    toggle() {\r\n        this.collapsed = !this.collapsed\r\n    }\r\n\r\n    //Calculates cost of vehicle and housing tax entered by the user.\r\n    calculateAdvancedTaxCost() {\r\n        this.cost =  parseInt(this.vehicleTaxCost) + parseInt(this.housingTaxCost);\r\n    }\r\n\r\n    toggleHorizon() {\r\n        this.isMonthly = !this.isMonthly;\r\n        \r\n    }\r\n}","import {inject, singleton} from 'aurelia-framework';\r\nimport {Constants} from 'constants';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\n\r\n@inject(Constants, EventAggregator)\r\n@singleton()\r\nexport class Transportation {\r\n    constructor(constants, eventAggregator) {\r\n        this.includeInBudget = true;\r\n        this.constants = constants;\r\n        this.cost = 0;\r\n        this.costPercentage = 0;\r\n        this.collapsed = true;\r\n        this.publicTransportationCost = 0;\r\n        this.publicTransportationInflation = 1.0329;\r\n        this.carYearlyUpkeepCost = 0;\r\n        this.carMonthlyOwnershipCost = 0;\r\n        this.hasCar = 0;\r\n        this.eventAggregator = eventAggregator;\r\n        this.isMonthly = true;\r\n    }\r\n\r\n    //Calculates the average transportation for the basic calc page.\r\n    calculateAverageTransportationCost() {\r\n        this.cost = parseInt(this.carYearlyUpkeepCost) + parseInt(this.carMonthlyOwnershipCost);\r\n    }\r\n\r\n    //Toggles the arrow of the collapse menu\r\n    toggle() {\r\n        this.collapsed = !this.collapsed\r\n    }\r\n\r\n    toggleHorizon() {\r\n        this.isMonthly = !this.isMonthly;\r\n    }\r\n}"],"sourceRoot":".."}